{
    "version": 3,
    "file": "routes-ar-CVVbN.js",
    "sources": ["../../src/routes/utils/useFirstRecordSearch.ts", "../../src/routes/DashboardParent.tsx", "../../src/routes/Dashboard/SearchHub/variation/components.tsx", "../../src/routes/Dashboard/SearchHub/variation/Person/components.tsx", "../../src/routes/Dashboard/SearchHub/variation/Person/utils.tsx", "../../src/routes/Dashboard/SearchHub/variation/BaseSearchInput.tsx", "../../src/routes/Dashboard/SearchHub/variation/hoc/composeHOC.tsx", "../../src/routes/Dashboard/SearchHub/variation/hoc/withErrorHandling.tsx", "../../src/routes/Dashboard/SearchHub/variation/hoc/components.tsx", "../../src/routes/Dashboard/SearchHub/variation/hoc/withClearButton.tsx", "../../src/routes/Dashboard/SearchHub/variation/hoc/withFloatingLabel.tsx", "../../src/routes/Dashboard/SearchHub/variation/SearchInput.tsx", "../../src/routes/Dashboard/SearchHub/variation/Person/PersonSmartSearchInput.tsx", "../../src/routes/Dashboard/SearchHub/variation/Person/PersonSearch.tsx", "../../src/routes/Dashboard/SearchHub/variation/SelectInput.tsx", "../../src/routes/Dashboard/SearchHub/variation/Property/utils.tsx", "../../src/routes/Dashboard/SearchHub/variation/Property/components.tsx", "../../src/routes/Dashboard/SearchHub/variation/Property/PropertySearchInput.tsx", "../../src/routes/Dashboard/SearchHub/variation/Property/PropertySearch.tsx", "../../src/routes/Dashboard/SearchHub/variation/Phone/utils.tsx", "../../src/routes/Dashboard/SearchHub/variation/Phone/PhoneInput.tsx", "../../src/routes/Dashboard/SearchHub/variation/Phone/components.tsx", "../../src/routes/Dashboard/SearchHub/variation/Phone/PhoneSearch.tsx", "../../src/routes/Dashboard/SearchHub/variation/Username/components.tsx", "../../src/routes/Dashboard/SearchHub/variation/Username/utils.tsx", "../../src/routes/Dashboard/SearchHub/variation/Username/UsernameInput.tsx", "../../src/routes/Dashboard/SearchHub/variation/Username/UsernameSearch.tsx", "../../src/routes/Dashboard/SearchHub/variation/Email/utils.tsx", "../../src/routes/Dashboard/SearchHub/variation/Email/EmailInput.tsx", "../../src/routes/Dashboard/SearchHub/variation/Email/components.tsx", "../../src/routes/Dashboard/SearchHub/variation/Email/EmailSearch.tsx", "../../src/routes/Dashboard/SearchHub/variation/Vehicle/components.tsx", "../../src/routes/Dashboard/SearchHub/variation/Vehicle/VINSearchInput.tsx", "../../src/routes/Dashboard/SearchHub/variation/Vehicle/utils.tsx", "../../src/routes/Dashboard/SearchHub/variation/Vehicle/YMMSearchInput.tsx", "../../src/routes/Dashboard/SearchHub/variation/Vehicle/LicensePlateSearchInput.tsx", "../../src/routes/Dashboard/SearchHub/variation/Vehicle/VehicleSearch.tsx", "../../src/routes/Dashboard/SearchHub/variation/utils.tsx", "../../src/routes/Dashboard/SearchHub/variation/Desktop.tsx", "../../src/routes/Dashboard/SearchHub/variation/Mobile.tsx", "../../src/routes/Dashboard/SearchHub/variation/index.tsx", "../../src/routes/Dashboard/SearchHub/SearchHub.tsx", "../../src/routes/Dashboard/RecentReports/components/NullState.tsx", "../../src/routes/Dashboard/RecentReports/components/SearchAndFilterControls.tsx", "../../src/routes/Dashboard/RecentReports/components/LoadingReports.tsx", "../../src/routes/Dashboard/RecentReports/components/DescriptionDates.tsx", "../../src/routes/Dashboard/RecentReports/components/PropertySizeDisplay.tsx", "../../src/routes/Dashboard/RecentReports/utils.ts", "../../src/routes/Dashboard/RecentReports/components/RecentReportsCardDescription.tsx", "../../src/routes/Dashboard/DashboardPage/components/DashboardRecentReports.tsx", "../../src/routes/Dashboard/DashboardPage/components/img/FamilyTreeCtaICon.svg", "../../src/routes/Dashboard/DashboardPage/components/img/FamilyTreeCtaTree.svg", "../../src/routes/Dashboard/DashboardPage/components/FamilyTreeCta.tsx", "../../src/routes/Dashboard/IdentityHub/utils.ts", "../../src/routes/Dashboard/DashboardPage/components/CustomModal.tsx", "../../src/routes/Dashboard/DashboardPage/components/DashboardDigitialFoorprint.tsx", "../../src/routes/Dashboard/DashboardPage/DashboardPage.tsx", "../../src/routes/Dashboard/Monitoring.tsx", "../../src/routes/Dashboard/Lists.tsx", "../../src/routes/Dashboard/UnclaimedMoney/unclaimedMoneyConstants.ts", "../../src/routes/Dashboard/UnclaimedMoney/UnclaimedMoney.tsx", "../../src/routes/Dashboard/DarkWebScan/darkWebScanConstants.ts", "../../src/routes/Dashboard/DarkWebScan/DarkWebScan.tsx", "../../src/routes/Dashboard/Billing/BillingConstants.ts", "../../src/routes/Dashboard/Billing/Billing.tsx", "../../src/routes/Dashboard/RecentReports/RecentReports.tsx", "../../src/routes/Dashboard/NeighborhoodReport/utils.tsx", "../../src/routes/Dashboard/NeighborhoodReport/NeighborhoodReport.tsx", "../../src/routes/Dashboard/MyGarage/MyGarage.tsx", "../../src/routes/Dashboard/IdMonitor/IdMonitor.tsx", "../../src/routes/Dashboard/IdMonitor/CreditBureauContacts/utils.tsx", "../../src/routes/Dashboard/IdMonitor/CreditBureauContacts/CreditBureauContacts.tsx", "../../src/routes/Dashboard/IdMonitor/AlertDetails/AlertDetails.tsx", "../../src/routes/Dashboard/ObituarySearchPage.tsx", "../../src/routes/Dashboard/Referrals.tsx", "../../src/routes/Dashboard/PersonalityTraits/PreTest/components.tsx", "../../src/routes/Dashboard/PersonalityTraits/PreTest/PreTest.tsx", "../../src/routes/Dashboard/PersonalityTraits/PersonalityHeader/PersonalityHeader.tsx", "../../src/routes/Dashboard/PersonalityTraits/Results/utils.ts", "../../src/routes/Dashboard/PersonalityTraits/usePersonalityDescriptions/usePersonalityDescriptions.ts", "../../src/routes/Dashboard/PersonalityTraits/Results/PersonalityTraitsTestResults/utils.tsx", "../../src/routes/Dashboard/PersonalityTraits/Results/PersonalityTraitsTestResults/PersonalityTraitResult/PTProgressBar/components.tsx", "../../src/routes/Dashboard/PersonalityTraits/Results/PersonalityTraitsTestResults/PersonalityTraitResult/PTProgressBar/PTProgressBar.tsx", "../../src/routes/Dashboard/PersonalityTraits/Results/PersonalityTraitsTestResults/PersonalityTraitResult/components.tsx", "../../src/routes/Dashboard/PersonalityTraits/Results/PersonalityTraitsTestResults/PersonalityTraitResult/PersonalityTraitResult.tsx", "../../src/routes/Dashboard/PersonalityTraits/Results/PersonalityTraitsTestResults/components.tsx", "../../src/routes/Dashboard/PersonalityTraits/Results/PersonalityTraitsTestResults/PersonalityTraitResult/StrengthsWeaknesses/components.tsx", "../../src/routes/Dashboard/PersonalityTraits/Results/PersonalityTraitsTestResults/PersonalityTraitResult/StrengthsWeaknesses/utils.tsx", "../../src/routes/Dashboard/PersonalityTraits/Results/PersonalityTraitsTestResults/PersonalityTraitResult/StrengthsWeaknesses/StrengthsWeaknesses.tsx", "../../src/routes/Dashboard/PersonalityTraits/Results/PersonalityTraitsTestResults/PersonalityTraitsResults.tsx", "../../src/routes/Dashboard/PersonalityTraits/Results/PersonalityTraitsTestsResultsContainer.tsx", "../../src/routes/Dashboard/PersonalityTraits/PreTest/PersonalityTraitsSurvey/constants.tsx", "../../src/routes/Dashboard/PersonalityTraits/PreTest/PersonalityTraitsSurvey/SurveySteps/components.tsx", "../../src/routes/Dashboard/PersonalityTraits/PreTest/PersonalityTraitsSurvey/SurveySteps/StepOne.tsx", "../../src/routes/Dashboard/PersonalityTraits/PreTest/PersonalityTraitsSurveyHelpers/bowtie/helpers.ts", "../../src/routes/Dashboard/PersonalityTraits/PreTest/PersonalityTraitsSurveyHelpers/wizard/constants.ts", "../../src/routes/Dashboard/PersonalityTraits/PreTest/PersonalityTraitsSurveyHelpers/wizard/helpers.ts", "../../src/routes/Dashboard/PersonalityTraits/PreTest/PersonalityTraitsSurveyHelpers/RadioButton/constants.ts", "../../src/routes/Dashboard/PersonalityTraits/PreTest/PersonalityTraitsSurveyHelpers/RadioButton/RadioButton.tsx", "../../src/routes/Dashboard/PersonalityTraits/PreTest/PersonalityTraitsSurveyHelpers/Button/constants.ts", "../../src/routes/Dashboard/PersonalityTraits/PreTest/PersonalityTraitsSurveyHelpers/Button/PersonalityTraitsButton.tsx", "../../src/routes/Dashboard/PersonalityTraits/PreTest/PersonalityTraitsSurveyHelpers/QuestionSurveyService/constants.ts", "../../src/routes/Dashboard/PersonalityTraits/PreTest/PersonalityTraitsSurveyHelpers/QuestionSurveyService/components.tsx", "../../src/routes/Dashboard/PersonalityTraits/PreTest/PersonalityTraitsSurveyHelpers/QuestionSurveyService/PersonalityTraitsAnimations.tsx", "../../src/routes/Dashboard/PersonalityTraits/PreTest/PersonalityTraitsSurveyHelpers/QuestionSurveyService/QuestionsSurvey.tsx", "../../src/routes/Dashboard/PersonalityTraits/PreTest/PersonalityTraitsSurvey/components.tsx", "../../src/routes/Dashboard/PersonalityTraits/PreTest/PersonalityTraitsSurvey/TraitsMultiStepModal.tsx", "../../src/routes/Dashboard/PersonalityTraits/usePersoniltyScore/usePersonailyScore.ts", "../../src/routes/Dashboard/PersonalityTraits/PersonalityTraitPage.tsx", "../../src/routes/Dashboard/fraud-components.tsx", "../../src/routes/Dashboard/Fraud.tsx", "../../src/routes/Dashboard/Astrology/AstrologyPage.tsx", "../../src/routes/Dashboard/ListsItem.tsx", "../../src/routes/Login.tsx", "../../src/routes/Dashboard/OwnerSearch/CTA/OwnerSearchGenericCTA.tsx", "../../src/routes/Report.tsx", "../../src/routes/ResetPassword.tsx", "../../src/routes/AuthenticatedRoute.tsx", "../../src/routes/PublicRoute.tsx", "../../src/routes/SearchPerson/components.tsx", "../../src/routes/SearchPerson/SearchFilter/components.tsx", "../../src/routes/SearchPerson/SearchFilter/PersonFiltersSidebar.tsx", "../../src/routes/SearchPerson/SearchFilter/SearchHeader/components.tsx", "../../src/routes/SearchPerson/SearchFilter/SearchHeader/SearchHeaderCarousel.tsx", "../../src/routes/SearchPerson/ResultTables/types.ts", "../../src/routes/SearchPerson/SearchFilter/constants.ts", "../../src/routes/SearchPerson/SearchFilter/SearchHeader/SearchHeaderDesktop.tsx", "../../src/routes/SearchPerson/Cards/NewCardsDesignVariation1/common/utils.tsx", "../../src/routes/SearchPerson/Cards/NewCardsDesignVariation1/common/components.tsx", "../../src/routes/SearchPerson/Cards/NewCardsDesignVariation1/BaseCard.tsx", "../../src/routes/SearchPerson/Cards/NewCardsDesignVariation1/PersonCards/MobilePersonCard.tsx", "../../src/routes/SearchPerson/Cards/PersonCards.tsx", "../../src/routes/SearchPerson/Loading/PersonCardLoading.tsx", "../../src/routes/SearchPerson/ResultTables/components.tsx", "../../src/routes/SearchPerson/ResultTables/constants.ts", "../../src/routes/SearchPerson/ResultTables/TableComponents/ListColumn.tsx", "../../src/routes/SearchPerson/ResultTables/TableComponents/AgeColumn.tsx", "../../src/routes/SearchPerson/ResultTables/utils.tsx", "../../src/routes/SearchPerson/ResultTables/TableComponents/NameColumn.tsx", "../../src/routes/SearchPerson/ResultTables/TableComponents/TableContainer.tsx", "../../src/routes/SearchPerson/ResultTables/TableTypes/PersonTable.tsx", "../../src/routes/SearchPerson/ResultsContainers/PersonResultsContainer.tsx", "../../src/routes/SearchPerson/Cards/NewCardsDesignVariation1/ObituaryCards/MobileObituaryCard.tsx", "../../src/routes/SearchPerson/Cards/ObituaryCards.tsx", "../../src/routes/SearchPerson/ResultTables/TableTypes/ObituaryTable.tsx", "../../src/routes/SearchPerson/ResultsContainers/ObituaryResultsContainer.tsx", "../../src/routes/SearchPerson/NoResults/ResidentNoResults.tsx", "../../src/routes/SearchPerson/Cards/NewCardsDesignVariation1/ResidentCards/MobileResidentCard.tsx", "../../src/routes/SearchPerson/Cards/ResidentCards.tsx", "../../src/routes/SearchPerson/ResultTables/TableTypes/ResidentTable.tsx", "../../src/routes/SearchPerson/ResultsContainers/ResidentResultsContainer.tsx", "../../src/routes/SearchPerson/Cards/NewCardsDesignVariation1/ProfessionalCards/MobileProfessionalCard.tsx", "../../src/routes/SearchPerson/Cards/ContactCards.tsx", "../../src/routes/SearchPerson/ResultTables/TableTypes/ContactTable.tsx", "../../src/routes/SearchPerson/ResultsContainers/ContactResultsContainer.tsx", "../../src/routes/SearchPerson/Cards/NewCardsDesignVariation1/GenealogyCards/MobileGenealogyCard.tsx", "../../src/routes/SearchPerson/FamilySearchResults.tsx", "../../src/routes/SearchPerson/ResultTables/TableTypes/FamilySearchTable.tsx", "../../src/routes/SearchPerson/ResultsContainers/FamilySearchResultsContainer.tsx", "../../src/routes/SearchPerson/Fetchers/PersonFetcher.tsx", "../../src/routes/SearchPerson/Fetchers/ObituaryFetcher.tsx", "../../src/routes/SearchPerson/Fetchers/FamilySearchFetcher.tsx", "../../src/routes/SearchPerson/Fetchers/DeathIndexesFetcher.tsx", "../../src/routes/SearchPerson/Fetchers/ContactFetcher.tsx", "../../src/routes/SearchPerson/Fetchers/ResidentFetcher.tsx", "../../src/routes/SearchPerson/Cards/NewCardsDesignVariation1/DeathIndexCards/MobileDeathIndexCard.tsx", "../../src/routes/SearchPerson/Cards/DeathIndexCards.tsx", "../../src/routes/SearchPerson/ResultsContainers/DeathIndexResultsContainer.tsx", "../../src/routes/SearchPerson/SearchFilter/utils.ts", "../../src/routes/SearchPerson/SearchPersonResultsv2.tsx", "../../src/routes/SearchPerson/SearchPersonResultsContainerv2.tsx", "../../src/routes/SearchListing/utils.ts", "../../src/routes/SearchListing/components.ts", "../../src/routes/SearchListing/SearchListingResults.tsx", "../../src/routes/Reactivation.tsx", "../../src/routes/NotFound.tsx", "../../src/routes/ErrorPage.tsx", "../../src/routes/Upgrade/plans.ts", "../../src/routes/Upgrade/UpgradePlanPage.tsx", "../../src/routes/ReportVelocityCaptcha.tsx", "../../src/routes/Dashboard/MemberPerks/MemberPerksTabs/RewardsOffersTab.tsx", "../../src/routes/Dashboard/MemberPerks/MemberPerksTabs/IdentityMonitorTab.tsx", "../../src/routes/Dashboard/MemberPerks/MemberPerksTabs/MemberPerksTabs.tsx", "../../src/routes/RewardsPage.tsx", "../../src/routes/SearchObituaryResults.tsx", "../../src/routes/FamilyTree/FamilyTreePage.tsx", "../../src/routes/Record.tsx", "../../src/routes/Dashboard/OwnerSearch/OwnerSearchParent.tsx"],
    "sourcesContent": ["import { useState, useEffect, useContext } from 'react';\nimport { useAccount } from '@ltvco/refresh-lib/v1';\nimport { AppConfig } from '@ltvco/refresh-lib/ctx';\nimport { useNavigate } from 'react-router-dom';\nimport { CookiesStorage } from '@ltvco/refresh-lib';\nimport {\n  FirstRecordSearch,\n  RecordSearchDataWithType,\n  getFirstRecordSearch,\n  handleRedirectToReportRoute,\n  handleRedirectToReportRouteLS,\n  handleRedirectToSearchRoute,\n  handleRedirectToSearchRouteLS,\n} from '@ltvco/refresh-lib/utils';\n\ntype FirstRecordSearchData =\n  | FirstRecordSearch\n  | RecordSearchDataWithType\n  | null;\n\nexport const useFirstRecordSearch = () => {\n  const cookieStorage = new CookiesStorage();\n\n  const { routingUtils } = useContext(AppConfig);\n\n  const [firstRecordSearchData] = useState<FirstRecordSearchData>(\n    getFirstRecordSearch()\n  );\n  const [showFirstReportLoading, setShowFirstReportLoading] = useState(\n    !!firstRecordSearchData\n  );\n\n  const navigate = useNavigate();\n  const { data: account } = useAccount(true);\n\n  useEffect(() => {\n    if (!account) return;\n\n    if (firstRecordSearchData?.source === 'cookieStorage') {\n      if (firstRecordSearchData?.searchType === 'personality_test') {\n        const localStorageData = localStorage.getItem('recordSearch') || '';\n        let testAnswers;\n        try {\n          testAnswers =\n            JSON.parse(String(localStorageData))?.personalityTestResults || {};\n        } catch (error) {\n          testAnswers = {};\n        }\n        const responseMap = {\n          '0': 'Strongly Disagree',\n          '1': 'Disagree',\n          '2': 'Neutral',\n          '3': 'Agree',\n          '4': 'Strongly Agree',\n        } as { [response_value: string]: string };\n\n        const answersToStore = Object.keys(testAnswers).map(\n          (custom_attribute, index) => ({\n            custom_attribute,\n            response: responseMap[testAnswers[custom_attribute]],\n            screen_id: `TRAIT-BV-01-${index + 1}`,\n          })\n        );\n\n        localStorage.setItem('answersStorage', JSON.stringify(answersToStore));\n        localStorage.setItem(\n          'activeQuestionIndex',\n          String(answersToStore.length)\n        );\n        navigate('/dashboard/personality-traits');\n        return;\n      }\n\n      localStorage.removeItem('recordSearch');\n      cookieStorage.removeValue('first_record_search');\n\n      const obitPlans = [\n        '7_day_trial_1_00_up_front_26_89_recurring_monthly_freshness_limit_100_no_pdf_obits_test_scale_14',\n        '7_day_trial_5_00_up_front_26_89_recurring_monthly_freshness_limit_100_free_pdf_obits_test_scale_14',\n      ];\n      const planName =\n        account.account.subscription_info.subscription_plan_unique_name;\n\n      const isInObitSearchForFirstSearchVariation =\n        obitPlans.includes(planName);\n\n      if (\n        firstRecordSearchData?.searchType === 'obituary' &&\n        !isInObitSearchForFirstSearchVariation\n      ) {\n        firstRecordSearchData.searchType = 'person';\n      }\n\n      let navigateTo;\n\n      const reportLimit =\n        account?.account?.subscription_info?.monthly_report_limit;\n      const oneReportLimit = reportLimit && reportLimit === 1;\n      if (firstRecordSearchData && !oneReportLimit) {\n        const typesForReportRoute = [\n          'phone',\n          'email',\n          'username',\n          'property',\n          'vehicle',\n          'phone-fraud',\n          'email-fraud',\n          'ip-fraud',\n          'url-fraud',\n        ];\n        if (typesForReportRoute.includes(firstRecordSearchData.searchType)) {\n          navigateTo = handleRedirectToReportRoute(firstRecordSearchData);\n        }\n\n        const typesForSearchRoute = [\n          'person',\n          'for_sale',\n          'pre_foreclosures',\n          'obituary',\n        ];\n\n        if (typesForSearchRoute.includes(firstRecordSearchData.searchType)) {\n          navigateTo = handleRedirectToSearchRoute(\n            firstRecordSearchData,\n            routingUtils\n          );\n        }\n\n        if (firstRecordSearchData.searchType === 'unclaimed_money') {\n          const hasAllRequiredData =\n            firstRecordSearchData?.first_name &&\n            firstRecordSearchData?.last_name &&\n            firstRecordSearchData?.state;\n          setShowFirstReportLoading(false);\n          if (hasAllRequiredData) {\n            navigateTo = handleRedirectToReportRoute(firstRecordSearchData);\n          } else {\n            navigateTo = handleRedirectToSearchRoute(\n              firstRecordSearchData,\n              routingUtils\n            );\n          }\n        }\n\n        if (navigateTo) {\n          navigate(navigateTo);\n          // Setting this cookie for redirecting properly on the Onboarding Questions\n          cookieStorage.setValue('first_report_navigate', navigateTo);\n        }\n      }\n    }\n\n    if (firstRecordSearchData?.source === 'localStorage') {\n      if (firstRecordSearchData?.type === 'personality_test') {\n        let testAnswers;\n        try {\n          testAnswers = firstRecordSearchData.personalityTestResults || {};\n        } catch (error) {\n          console.error('Error parsing personality test results');\n          testAnswers = {};\n        }\n        const responseMap = {\n          '0': 'Strongly Disagree',\n          '1': 'Disagree',\n          '2': 'Neutral',\n          '3': 'Agree',\n          '4': 'Strongly Agree',\n        } as { [response_value: string]: string };\n\n        const answersToStore = Object.keys(testAnswers).map(\n          (custom_attribute, index) => ({\n            custom_attribute,\n            response: responseMap[testAnswers[custom_attribute]],\n            screen_id: `TRAIT-BV-01-${index + 1}`,\n          })\n        );\n\n        localStorage.setItem('answersStorage', JSON.stringify(answersToStore));\n        localStorage.setItem(\n          'activeQuestionIndex',\n          String(answersToStore.length)\n        );\n        navigate('/dashboard/personality-traits');\n        return;\n      }\n\n      localStorage.removeItem('recordSearch');\n      cookieStorage.removeValue('first_record_search');\n\n      const obitPlans = [\n        '7_day_trial_1_00_up_front_26_89_recurring_monthly_freshness_limit_100_no_pdf_obits_test_scale_14',\n        '7_day_trial_5_00_up_front_26_89_recurring_monthly_freshness_limit_100_free_pdf_obits_test_scale_14',\n      ];\n      const planName =\n        account.account.subscription_info.subscription_plan_unique_name;\n\n      const isInObitSearchForFirstSearchVariation =\n        obitPlans.includes(planName);\n\n      if (\n        firstRecordSearchData?.type === 'obituary' &&\n        !isInObitSearchForFirstSearchVariation\n      ) {\n        firstRecordSearchData.type = 'person';\n      }\n\n      let navigateTo;\n\n      const reportLimit =\n        account?.account?.subscription_info?.monthly_report_limit;\n      const oneReportLimit = reportLimit && reportLimit === 1;\n      if (firstRecordSearchData && !oneReportLimit) {\n        const typesForReportRoute = [\n          'phone',\n          'email',\n          'username',\n          'property',\n          'vehicle',\n          'phone-fraud',\n          'email-fraud',\n          'ip-fraud',\n          'url-fraud',\n        ];\n        if (typesForReportRoute.includes(firstRecordSearchData.type)) {\n          navigateTo = handleRedirectToReportRouteLS(firstRecordSearchData);\n        }\n\n        const typesForSearchRoute = [\n          'person',\n          'for_sale',\n          'pre_foreclosures',\n          'obituary',\n          'contact',\n          'ancestry',\n        ];\n\n        if (typesForSearchRoute.includes(firstRecordSearchData.type)) {\n          navigateTo = handleRedirectToSearchRouteLS(\n            firstRecordSearchData,\n            routingUtils\n          );\n        }\n\n        if (firstRecordSearchData.type === 'unclaimed_money') {\n          const hasAllRequiredData =\n            firstRecordSearchData?.firstName &&\n            firstRecordSearchData?.lastName &&\n            firstRecordSearchData?.state;\n          setShowFirstReportLoading(false);\n          if (hasAllRequiredData) {\n            navigateTo = handleRedirectToReportRouteLS(firstRecordSearchData);\n          } else {\n            navigateTo = handleRedirectToSearchRouteLS(\n              firstRecordSearchData,\n              routingUtils\n            );\n          }\n        }\n\n        if (navigateTo) {\n          navigate(navigateTo);\n          // Setting this cookie for redirecting properly on the Onboarding Questions\n          cookieStorage.setValue('first_report_navigate', navigateTo);\n        }\n      }\n    }\n  }, [account]);\n\n  return {\n    firstRecordSearchData,\n    showFirstReportLoading,\n  };\n};\n", "import {\n  Button,\n  Text,\n  Grid,\n  Link,\n  styled,\n  CustomIcons,\n  IconButton,\n  Stack,\n} from '@ltvco/refresh-lib/theme';\nimport { DateUtil, useScreenSize } from '@ltvco/refresh-lib/utils';\nimport { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport { constants } from 'appConstants';\nimport { SidenavContainer } from '../components/sidenav/SidenavContainer';\nimport { useLimitedPlanInfo } from 'utils/useLimitedPlanInfo';\nimport { checkPlanVariations } from 'utils/checkPlanVariations';\nimport {\n  closeSnackbar,\n  MobileAppsCtaCard,\n  NeedAssistanceSidebar,\n  PremiumDataModal,\n  RightRailCard,\n  useAccount,\n  usePremiumDataModal,\n  useSnackbar,\n} from '@ltvco/refresh-lib/v1';\nimport {\n  BackdropLoading,\n  EmailSettingsCard,\n  MonitoredReportsModal,\n  SideBarMigrationCta,\n  NeedAssistanceSidebar as NeedAssistanceSidebarV2,\n} from '@ltvco/refresh-lib/v2';\nimport { ReactivatePausedAccountCta } from '@ltvco/refresh-lib/payments';\nimport { useFirstRecordSearch } from './utils/useFirstRecordSearch';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst CreditCardIcon = styled(CustomIcons.CreditCardIcon)(({ theme }) => ({\n  fontSize: '3.75rem',\n  padding: theme.spacing(0.9375),\n}));\n\nconst DollarsAndCoinsIcon = styled(CustomIcons.DollarsAndCoinsIcon)(\n  ({ theme }) => ({\n    fontSize: '3.75rem',\n    padding: theme.spacing(0.9375),\n  })\n);\n\nconst StyledContainer = styled('div')(({ theme }) => ({\n  position: 'relative',\n  marginBottom: theme.spacing(2),\n  width: '100%',\n  '&&': {\n    '& > *': {\n      width: '100%',\n      maxWidth: '100%',\n      border: `1px solid ${theme.palette.background.light}`,\n      boxShadow: 'none',\n      '& > button': {\n        width: '95%',\n      },\n      '& > div button': {\n        paddingRight: 0,\n      },\n    },\n  },\n}));\n\nexport function DashboardParent({\n  contactUsHandler,\n  handleLogout,\n  openConfirmCancelModal,\n}: {\n  contactUsHandler: () => void;\n  handleLogout: () => void;\n  openConfirmCancelModal: (downsellTest?: boolean) => void;\n}) {\n  // Hooks\n  const { enqueueSnackbar } = useSnackbar();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { data: account } = useAccount(true);\n  const { firstRecordSearchData, showFirstReportLoading } =\n    useFirstRecordSearch();\n  const { planName } = useLimitedPlanInfo();\n  const { isMobile } = useScreenSize();\n\n  const {\n    isInSingleReportVariation,\n    isInternationalVinTest,\n    isInInternationalLanguageTest,\n  } = checkPlanVariations(planName);\n\n  const dateUtil = new DateUtil();\n  const currentDate = new Date();\n\n  const { isModalOpen, closeModal, triggerModal } = usePremiumDataModal();\n  const [searchType, setSearchType] = useState('');\n\n  const featureAction = (str: string) => {\n    setSearchType(str);\n    triggerModal(true, isInSingleReportVariation);\n  };\n\n  // State\n  const [monitoredReportsOpen, setMonitoredReportsOpen] = useState(false);\n\n  if (\n    account?.account?.user_settings?.show_info_collection_screen &&\n    !localStorage.getItem('recordSearch')\n  ) {\n    navigate('/self-searching');\n  }\n\n  useEffect(() => {\n    if (localStorage.getItem('pausedAccountSnackbarId')) {\n      try {\n        closeSnackbar(\n          JSON.parse(localStorage.getItem('pausedAccountSnackbarId') || '')\n        );\n      } catch (e) {\n        console.log('error', e);\n      }\n    }\n    handleSiteNotifications();\n    handleReactivationForPausedAccountsBanner();\n  }, [account]);\n\n  // Functions\n  function closeMonitoredReportsModal() {\n    setMonitoredReportsOpen(false);\n  }\n\n  function handleReactivationForPausedAccountsBanner() {\n    if (!account) return;\n\n    const isInPausedStatus = account?.meta?.subscription_state === 'paused';\n    if (!isInPausedStatus) return;\n\n    const today = currentDate.toISOString();\n    const expirationDate = account?.account.subscription_info?.normalize_date;\n\n    if (!expirationDate) return;\n\n    const isAfterCurrentDate = dateUtil.isAfter(today, expirationDate);\n\n    function handleReactivationClick() {\n      closeSnackbar(pausedAccountSnackbarId);\n      navigate('/reactivation');\n    }\n\n    const expiredMessage = (\n      <Text>\n        <b>\n          Your account expired on{' '}\n          {dateUtil.parseDateFromString(\n            account?.account.subscription_info?.normalize_date,\n            'M/d/y'\n          )}{' '}\n          . Reactivate to regain access.\n        </b>\n      </Text>\n    );\n\n    const cancelledMessage = (\n      <Text>\n        <b>\n          Your account with member ID {account?.account?.user_info?.user_code}{' '}\n          has been cancelled.\n        </b>{' '}\n        <br /> You have until{' '}\n        {dateUtil.parseDateFromString(\n          account?.account.subscription_info?.normalize_date,\n          'M/d/y'\n        )}{' '}\n        to continue running reports. Please reactivate now to maintain access.\n        Visit{' '}\n        <Link\n          color={'primary.contrastText'}\n          onClick={handleReactivationClick}\n          style={{ cursor: 'pointer' }}\n        >\n          here\n        </Link>{' '}\n        to reactivate.\n      </Text>\n    );\n\n    const message = isAfterCurrentDate ? expiredMessage : cancelledMessage;\n\n    const pausedAccountSnackbarId = enqueueSnackbar(\n      <Stack direction=\"row\" justifyContent=\"space-between\">\n        {message}\n        {getCloseButton(() => {\n          closeSnackbar(pausedAccountSnackbarId);\n        })}\n      </Stack>,\n      {\n        variant: 'info',\n        persist: true,\n        action: <></>,\n      }\n    );\n\n    localStorage.setItem(\n      'pausedAccountSnackbarId',\n      JSON.stringify(pausedAccountSnackbarId)\n    );\n  }\n\n  function getCloseButton(onClick: () => void) {\n    return (\n      <IconButton\n        size=\"small\"\n        aria-label=\"close\"\n        color=\"inherit\"\n        onClick={onClick}\n        sx={{ marginLeft: 1 }}\n      >\n        <CloseIcon fontSize=\"small\" />\n      </IconButton>\n    );\n  }\n\n  function handleSiteNotifications() {\n    if (!account) return;\n    const siteNotification = account?.meta?.notification;\n    if (!siteNotification) return;\n    const siteNotificationSnackbarId = enqueueSnackbar(\n      <Text>\n        <b>{siteNotification.title}</b> <br /> {siteNotification.message}\n      </Text>,\n      {\n        variant: 'info',\n        persist: true,\n        action: (\n          <IconButton\n            size=\"small\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            onClick={() => {\n              closeSnackbar(siteNotificationSnackbarId);\n            }}\n          >\n            <CloseIcon fontSize=\"small\" />\n          </IconButton>\n        ),\n      }\n    );\n  }\n\n  const isIdMonitorIndex = location.pathname === '/dashboard/id-monitor';\n  const isMonitoringPage = location.pathname.includes('/dashboard/monitoring');\n  const isBillingPage = location.pathname.includes('/dashboard/billing');\n  const isReportsPage = location.pathname.includes('/dashboard/reports');\n\n  const showRightRail = isMonitoringPage || isBillingPage || isReportsPage;\n\n  const appsFlyerLink = 'https://beenverified.onelink.me/5mdJ/j0m5b8cj';\n  const RightRailComponent = (\n    <Grid\n      item\n      container\n      xs={12}\n      md={3}\n      lg={3}\n      spacing={1}\n      direction=\"column\"\n      marginTop={2}\n      maxWidth={{ xs: '100%', md: '275px' }}\n    >\n      {isBillingPage && (\n        <Grid\n          item\n          width={'100%'}\n          order={{ xs: 6, md: 1 }}\n          className=\"needs-assistance\"\n        >\n          <NeedAssistanceSidebar\n            logout={handleLogout}\n            supportImgUrl={constants.images.img24hr}\n            contactUsHandler={contactUsHandler}\n            openConfirmCancelModal={openConfirmCancelModal}\n          />\n        </Grid>\n      )}\n      {isMonitoringPage && (\n        <Grid item width={'100%'} order={2}>\n          <EmailSettingsCard\n            currentInstantAlertsSetting={\n              account?.account?.alert_me.settings.instant_enabled || false\n            }\n            currentDigestAlertsSetting={\n              account?.account?.alert_me.settings.digest_enabled || false\n            }\n            handleMonitoredReports={() => setMonitoredReportsOpen(true)}\n          />\n          <MonitoredReportsModal\n            isOpen={monitoredReportsOpen}\n            onClose={() => closeMonitoredReportsModal()}\n          />\n        </Grid>\n      )}\n      {!isMonitoringPage &&\n        !isBillingPage &&\n        !isInternationalVinTest &&\n        !isInInternationalLanguageTest && (\n          <>\n            {isMobile && (\n              <Grid item width={'100%'} order={2} key=\"mobile-migration-card\">\n                <StyledContainer>\n                  <SideBarMigrationCta />\n                </StyledContainer>\n              </Grid>\n            )}\n            <Grid item width={'100%'} order={3}>\n              <RightRailCard\n                icon={<DollarsAndCoinsIcon />}\n                title=\"Check for Unclaimed Money\"\n                subtitle=\"Included with your membership is a state government search of billions in unclaimed money\"\n                body=\"Find out if unclaimed money is owed to you or anyone you know!\"\n                buttonText=\"Unclaimed Money Search\"\n                tagText=\"Bonus Feature\"\n                showTag={true}\n                tagOnLeft={false}\n                onButtonClick={() =>\n                  isInSingleReportVariation\n                    ? featureAction('unclaimed money')\n                    : navigate('unclaimed-money')\n                }\n              />\n            </Grid>\n            <Grid item width={'100%'} order={4}>\n              <RightRailCard\n                icon={<CreditCardIcon />}\n                title=\"Dark Web Scan\"\n                subtitle=\"Millions of online accounts are compromised each year\"\n                body=\"Search using your email address to see if you may have been compromised on the dark web\"\n                buttonText=\"Scan Now\"\n                tagText=\"New\"\n                showTag={true}\n                tagOnLeft={false}\n                onButtonClick={() =>\n                  isInSingleReportVariation\n                    ? featureAction('dark web')\n                    : navigate('dark-web')\n                }\n              />\n            </Grid>\n          </>\n        )}\n      {isReportsPage &&\n        !isInternationalVinTest &&\n        !isInInternationalLanguageTest && (\n          <Grid item width={'100%'} order={5}>\n            <MobileAppsCtaCard appsFlyerLink={appsFlyerLink} />\n          </Grid>\n        )}\n      {account?.meta?.subscription_state === 'paused' && (\n        <Grid item order={5}>\n          <ReactivatePausedAccountCta />\n        </Grid>\n      )}\n      <PremiumDataModal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        searchType={searchType}\n      />\n    </Grid>\n  );\n\n  const RightRail = showRightRail ? RightRailComponent : <></>;\n\n  return (\n    <SidenavContainer defaultBackground={isIdMonitorIndex}>\n      <Grid container justifyContent={'space-between'} height=\"100%\">\n        <Grid\n          item\n          xs={12}\n          md={showRightRail ? 8 : 12}\n          lg={showRightRail ? 8 : 12}\n          maxWidth={{\n            xs: '100%',\n            md: showRightRail ? '911px !important' : '100%',\n          }}\n        >\n          {showFirstReportLoading ? (\n            <BackdropLoading\n              message={<Text variant=\"h5\">Generating first report</Text>}\n              sx={{ backgroundColor: 'white' }}\n            />\n          ) : (\n            <Outlet />\n          )}\n        </Grid>\n        {RightRail}\n      </Grid>\n    </SidenavContainer>\n  );\n}\n", "import {\n  Box,\n  Button,\n  FormControl,\n  IconButton,\n  Input,\n  InputLabel,\n  Select,\n  styled,\n  Tab,\n  Tabs,\n  Text,\n} from '@ltvco/refresh-lib/theme';\n\nexport const SearchHubContainer = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(2.5, 4),\n\n  [theme.breakpoints.down('sm')]: {\n    padding: theme.spacing(2),\n    borderRadius: theme.spacing(2),\n    boxShadow: '1px 1px 10px 10px rgba(0, 0, 0, 0.1)',\n  },\n}));\n\nexport const SearchButton = styled(Button)(({ theme }) => ({\n  padding: theme.spacing(1, 2.75),\n  width: '132px',\n  height: '56px',\n  borderRadius: '32px',\n  backgroundColor: theme.palette.primary.main,\n  color: theme.palette.primary.contrastText,\n  fontWeight: 700,\n  fontSize: '16px',\n  lineHeight: '1.625em',\n  letterSpacing: '0.02875em',\n  textTransform: 'none',\n\n  '&:hover': {\n    backgroundColor: theme.palette.primary.dark,\n  },\n\n  [theme.breakpoints.down('sm')]: {\n    width: '100%',\n  },\n}));\n\nexport const SearchFieldContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  border: `1px solid ${theme.palette.text.disabled}`,\n  borderRadius: '32px',\n  padding: theme.spacing(0.375, 1),\n  backgroundColor: theme.palette.common.white,\n  width: '100%',\n  margin: theme.spacing(4, 0),\n\n  '&:focus-within': {\n    borderColor: theme.palette.primary.main,\n  },\n\n  [theme.breakpoints.down('sm')]: {\n    margin: 0,\n  },\n}));\n\nexport const StyledInputBase = styled(Input)(({ theme }) => ({\n  width: '100%',\n  height: '50px',\n  position: 'relative',\n\n  '&:before, &:after': {\n    display: 'none',\n  },\n\n  '& .MuiInput-root, & .MuiInputBase-root, & .MuiOutlinedInput-root': {\n    border: 'none',\n    height: '50px',\n    borderRadius: '32px',\n  },\n\n  '& .MuiOutlinedInput-notchedOutline': {\n    border: 'none',\n  },\n\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1),\n    fontSize: '16px',\n    letterSpacing: '0.03125em',\n    lineHeight: '1.5em',\n    color: theme.palette.text.primary,\n\n    '&::placeholder': {\n      color: theme.palette.text.secondary,\n      opacity: 1,\n    },\n  },\n\n  '&.Mui-error': {\n    '& .MuiInputBase-input': {\n      border: `1px solid ${theme.palette.error.main}`,\n    },\n  },\n}));\n\nexport const FormHelperErrorText = styled(Text)(({ theme }) => ({\n  position: 'absolute',\n  marginTop: theme.spacing(1.5),\n  marginLeft: `-${theme.spacing(1)}`,\n  fontSize: '12px',\n  color: theme.palette.error.main,\n\n  [theme.breakpoints.down('sm')]: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\nexport const StyledTabsDesktop = styled(Tabs)(({ theme }) => ({\n  minHeight: 'unset',\n\n  '& .MuiTabs-indicator': {\n    display: 'none',\n  },\n}));\n\nexport const StyledTabDesktop = styled(Tab)(({ theme }) => ({\n  borderRadius: '60px',\n  padding: theme.spacing(0.5, 1.25),\n  marginRight: theme.spacing(1),\n  minHeight: 'unset',\n  fontSize: '14px',\n  fontWeight: 'bold',\n  lineHeight: '1.2em',\n  textTransform: 'none',\n  backgroundColor: theme.palette.background.default,\n\n  '& .MuiSvgIcon-root': {\n    fill: theme.palette.text.contrastText,\n    fontSize: '24px',\n  },\n\n  '& .MuiTab-iconWrapper': {\n    padding: '4px',\n    borderRadius: '50%',\n    backgroundColor: theme.palette.text.secondary,\n  },\n\n  '&.Mui-selected': {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n\n    '& .MuiSvgIcon-root': {\n      fill: theme.palette.primary.main,\n    },\n\n    '& .MuiTab-iconWrapper': {\n      borderRadius: '50%',\n      backgroundColor: theme.palette.text.contrastText,\n    },\n  },\n}));\n\nexport const StyledTabsMobile = styled(Tabs)(({ theme }) => ({\n  marginTop: theme.spacing(2.5),\n\n  '& .MuiTabs-indicator': {\n    display: 'none',\n  },\n\n  '& .MuiTabs-flexContainer': {\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n\n  [theme.breakpoints.down('sm')]: {\n    minHeight: 'unset',\n\n    '& .MuiTabs-flexContainer': {\n      gap: 0,\n    },\n  },\n}));\n\nexport const StyledTabMobile = styled(Tab)(({ theme }) => ({\n  borderRadius: 0,\n  padding: theme.spacing(0.375, 1, 1, 1),\n  minHeight: 'unset',\n  fontSize: '12px',\n  fontWeight: 'bold',\n  lineHeight: '1.333em',\n  textTransform: 'none',\n  color: theme.palette.text.secondary,\n  minWidth: 'auto',\n  whiteSpace: 'nowrap',\n  flexDirection: 'column',\n  alignItems: 'center',\n  gap: theme.spacing(0.5),\n\n  '&.Mui-selected': {\n    color: theme.palette.primary.main,\n    backgroundColor: 'transparent',\n    borderBottom: `1px solid ${theme.palette.primary.main}`,\n  },\n\n  '& .MuiTab-iconWrapper': {\n    marginBottom: theme.spacing(0.5),\n    marginRight: 0,\n    fontSize: '16px',\n  },\n\n  [theme.breakpoints.down('sm')]: {\n    flexShrink: 0,\n    flex: 1,\n    marginRight: 0,\n  },\n}));\n\nexport const HeaderText = styled(Text)(({ theme }) => ({\n  fontWeight: 700,\n  fontSize: '34px',\n  lineHeight: '1.412em',\n  textAlign: 'center',\n  color: theme.palette.text.primary,\n  marginBottom: theme.spacing(0.5),\n\n  [theme.breakpoints.down('sm')]: {\n    fontSize: '24px',\n  },\n}));\n\nexport const StyledSubheaderText = styled(Text)(({ theme }) => ({\n  fontWeight: 400,\n  fontSize: '14px',\n  lineHeight: '1.143em',\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n  marginBottom: theme.spacing(3),\n\n  [theme.breakpoints.down('sm')]: {\n    textAlign: 'left',\n    margin: 0,\n  },\n}));\n\nexport const DisclaimerText = styled(Box)(({ theme }) => ({\n  color: theme.palette.text.secondary,\n\n  '& .MuiTypography-root': {\n    lineHeight: '1em',\n    fontSize: '12px',\n  },\n}));\n\nexport const FloatingLabel = styled(InputLabel)(({ theme }) => ({\n  position: 'absolute',\n  top: '-12px',\n  left: '14px',\n  color: theme.palette.text.primary,\n  backgroundColor: theme.palette.background.paper,\n  padding: '0 4px',\n  fontSize: '14px',\n  zIndex: 1,\n  opacity: 0,\n  transform: 'translateY(10px)',\n  pointerEvents: 'none',\n  transition:\n    'transform 0.2s ease-out, opacity 0.2s ease-out, color 0.2s ease-out',\n\n  '&.error': {\n    color: theme.palette.error.main,\n  },\n\n  '&.focused': {\n    opacity: 1,\n    transform: 'translateY(0)',\n    pointerEvents: 'auto',\n  },\n}));\n\nexport const StyledSearchTypeSelect = styled(Select)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  fontSize: '14px',\n  fontWeight: 'bold',\n  color: theme.palette.text.secondary,\n  backgroundColor: theme.palette.background.default,\n\n  '&:hover': {\n    boxShadow: 'none',\n  },\n\n  '& .MuiSelect-icon': {\n    color: theme.palette.text.primary,\n    right: theme.spacing(1),\n  },\n\n  '&.MuiInputBase-root': {\n    '&:hover .MuiOutlinedInput-notchedOutline': {\n      border: 'none',\n      boxShadow: 'none',\n    },\n    '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n      border: 'none',\n      boxShadow: 'none',\n    },\n  },\n\n  '& .MuiOutlinedInput-notchedOutline': {\n    border: 'none',\n    padding: 0,\n  },\n\n  [theme.breakpoints.down('sm')]: {\n    width: '100%',\n    fontWeight: 500,\n    backgroundColor: theme.palette.background.paper,\n\n    '& .MuiSelect-select': {\n      width: '100%',\n    },\n  },\n}));\n\nexport const StyledSearchTypeSelectContainer = styled(FormControl)(\n  ({ theme }) => ({\n    '& .MuiOutlinedInput-notchedOutline': {\n      borderRight: `1px solid ${theme.palette.divider}`,\n    },\n\n    '& .MuiOutlinedInput-root': {\n      height: '100%',\n      borderRadius: '32px 0 0 32px',\n    },\n\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n\n      '& .MuiOutlinedInput-root': {\n        height: '100%',\n        borderRadius: '32px',\n      },\n    },\n  })\n);\n", "import { styled, Grid, Box } from '@ltvco/refresh-lib/theme';\n\nexport const PersonSearchFieldContainer = styled(Grid)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  border: `1px solid ${theme.palette.text.disabled}`,\n  borderRadius: '32px',\n  padding: theme.spacing(0.375, 1),\n  backgroundColor: theme.palette.background.paper,\n  width: '100%',\n  margin: theme.spacing(4, 0),\n\n  '&:focus-within': {\n    borderColor: theme.palette.primary.main,\n  },\n\n  '&.error': {\n    borderColor: theme.palette.error.main,\n  },\n\n  [theme.breakpoints.down('sm')]: {\n    margin: 0,\n  },\n}));\n\nexport const PersonFormContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  gap: theme.spacing(2),\n  width: '100%',\n}));", "import * as yup from 'yup';\n\nexport const schemaPersonSearchForm = yup.object({\n  name: yup\n    .string()\n    .required('Please enter a valid name to complete search.')\n    .trim(),\n});", "import React from 'react';\nimport { Box, InputAdornment, useTheme } from '@ltvco/refresh-lib/theme';\nimport {\n  Control,\n  Controller,\n  UseFormRegisterReturn,\n} from '@ltvco/refresh-lib/vendors';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { StyledInputBase } from './components';\n\nexport interface BaseSearchInputProps {\n  /**\n   * Registration object from react-hook-form\n   */\n  registerReturn: UseFormRegisterReturn;\n  /**\n   * Placeholder text for the input field\n   */\n  placeholder: string;\n  /**\n   * Current value of the input field\n   */\n  value: string;\n  /**\n   * Name of the field for error handling\n   */\n  fieldName: string;\n  /**\n   * Control object from react-hook-form\n   */\n  control: Control;\n  /**\n   * Whether to enable autofocus on the input\n   */\n  autoFocus?: boolean;\n  /**\n   * Additional props to pass to the input component\n   */\n  inputProps?: Record<string, unknown>;\n  /**\n   * Additional props to pass to the input component\n   */\n  InputProps?: Record<string, unknown>;\n  /**\n   * Whether the input has an error\n   */\n  hasError?: boolean;\n  /**\n   * Custom on change handler\n   */\n  customOnChange?: (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    field: { onChange: (value: string) => void }\n  ) => void;\n  /**\n   * Function to clear errors for the field\n   */\n  clearErrors?: (field?: string) => void;\n  /**\n   * Callback when input is focused\n   */\n  onFocus?: (e: React.FocusEvent<HTMLInputElement>) => void;\n  /**\n   * Callback when input loses focus\n   */\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n}\n\nexport const BaseSearchInput = React.memo(\n  ({\n    registerReturn,\n    placeholder,\n    value,\n    fieldName,\n    control,\n    autoFocus = false,\n    inputProps = {},\n    InputProps = {},\n    hasError = false,\n    customOnChange,\n    clearErrors,\n    onFocus,\n    onBlur,\n  }: BaseSearchInputProps) => {\n    const theme = useTheme();\n    const { ref } = registerReturn;\n    const handleInputChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n      field: { onChange: (value: string) => void }\n    ) => {\n      if (customOnChange) {\n        customOnChange(e, field);\n        return;\n      }\n\n      const value = e.target.value;\n      field.onChange(value);\n\n      // If there's any value, clear errors\n      if (clearErrors && value.trim()) {\n        clearErrors(fieldName);\n      }\n    };\n\n    return (\n      <Box sx={{ width: '100%' }}>\n        <Controller\n          control={control}\n          name={fieldName}\n          render={({ field }) => (\n            <StyledInputBase\n              inputRef={ref}\n              {...field}\n              onChange={(e) => handleInputChange(e, field)}\n              onFocus={onFocus}\n              onBlur={onBlur}\n              placeholder={placeholder}\n              fullWidth\n              error={hasError}\n              autoFocus={autoFocus}\n              inputProps={inputProps}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon\n                      sx={{\n                        color: hasError\n                          ? theme.palette.error.main\n                          : theme.palette.primary.main,\n                      }}\n                    />\n                  </InputAdornment>\n                ),\n                ...InputProps,\n              }}\n            />\n          )}\n        />\n      </Box>\n    );\n  }\n);", "import React from 'react';\n\n/**\n * Compose multiple higher-order components into a single higher-order component.\n * The composition follows from right to left (like pipe operator).\n *\n * @param {...Function} hocs The HOCs to compose\n * @returns {Function} A composed HOC\n *\n * @example\n * // Instead of this:\n * const EnhancedComponent = withA(withB(withC(BaseComponent)));\n *\n * // You can do this:\n * const enhance = composeHOC(withA, withB, withC);\n * const EnhancedComponent = enhance(BaseComponent);\n */\nexport const composeHOC = (\n  ...hocs: Array<\n    (Component: React.ComponentType<any>) => React.ComponentType<any>\n  >\n) => {\n  return (BaseComponent: React.ComponentType<any>) => {\n    return hocs.reduceRight(\n      (AccumulatedComponent, hoc) => hoc(AccumulatedComponent),\n      BaseComponent\n    );\n  };\n};\n", "import React from 'react';\nimport { Box } from '@ltvco/refresh-lib/theme';\nimport { FieldError } from '@ltvco/refresh-lib/vendors';\nimport { FormHelperErrorText } from '../components';\n\nexport interface WithErrorHandlingProps {\n  error?: FieldError;\n  name?: string;\n  className?: string;\n}\n\n/**\n * HOC that adds error handling capabilities to an input component\n *\n * @param Component The component to enhance with error handling\n * @returns A new component with error handling\n */\nexport const withErrorHandling = <P extends object>(\n  Component: React.ComponentType<P>\n): React.ComponentType<P & WithErrorHandlingProps> => {\n  return ({ error, className = '', ...props }: WithErrorHandlingProps & P) => {\n    const hasError = !!error;\n    const errorClassName = hasError ? 'error' : '';\n    const combinedClassName = `${className} ${errorClassName}`.trim();\n\n    return (\n      <Box className={combinedClassName} sx={{ width: '100%' }}>\n        <Component {...(props as P)} />\n        {error && <FormHelperErrorText>{error.message}</FormHelperErrorText>}\n      </Box>\n    );\n  };\n};\n", "import { IconButton, styled } from '@ltvco/refresh-lib/theme';\n\nexport const StyledClearIconButton = styled(IconButton)(({ theme }) => ({\n  color: theme.palette.text.contrastText,\n  backgroundColor: theme.palette.text.secondary,\n  borderRadius: '50%',\n  position: 'absolute',\n  right: 8,\n  top: '50%',\n  transform: 'translateY(-50%)',\n\n  '&:hover': {\n    backgroundColor: theme.palette.text.secondary,\n  },\n}));\n", "import React from 'react';\nimport { Box, SxProps } from '@ltvco/refresh-lib/theme';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { StyledClearIconButton } from './components';\n\nexport interface WithClearButtonProps {\n  value?: string;\n  onClear?: () => void;\n  showClearButton?: boolean;\n  clearButtonStyles?: SxProps;\n}\n\n/**\n * HOC that adds a clear button to an input component\n * The clear button appears when the input has a value\n *\n * @param Component The component to enhance with a clear button\n * @returns A new component with a clear button\n */\nexport const withClearButton = <P extends object>(\n  Component: React.ComponentType<P>\n): React.ComponentType<P & WithClearButtonProps> => {\n  return ({\n    value,\n    onClear,\n    showClearButton = true,\n    clearButtonStyles = {},\n    ...props\n  }: WithClearButtonProps & P) => {\n    const shouldShowClearButton = showClearButton && !!value;\n\n    return (\n      <Box sx={{ position: 'relative', width: '100%' }}>\n        <Component {...(props as P)} />\n\n        {shouldShowClearButton && onClear && (\n          <StyledClearIconButton\n            className=\"clear-button\"\n            onClick={onClear}\n            sx={{ ...clearButtonStyles }}\n            size=\"small\"\n            data-testid=\"clear-button\"\n          >\n            <CloseIcon fontSize=\"small\" />\n          </StyledClearIconButton>\n        )}\n      </Box>\n    );\n  };\n};\n", "import React, { useState } from 'react';\nimport { Box } from '@ltvco/refresh-lib/theme';\nimport { FloatingLabel } from '../components';\n\nexport interface WithFloatingLabelProps {\n  label?: string;\n  value?: string;\n  error?: any;\n  hideLabel?: boolean;\n}\n\n/**\n * HOC that adds a floating label to an input component\n * The label floats above the input when the input is focused or has a value\n *\n * @param Component The component to enhance with a floating label\n * @returns A new component with a floating label\n */\nexport const withFloatingLabel = <P extends object>(\n  Component: React.ComponentType<P>\n): React.ComponentType<P & WithFloatingLabelProps> => {\n  return ({\n    label = '',\n    value = '',\n    error,\n    hideLabel = false,\n    ...props\n  }: WithFloatingLabelProps & P) => {\n    const [isFocused, setIsFocused] = useState(false);\n\n    // Forward these event handlers to the wrapped component\n    const handleFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n      setIsFocused(true);\n      if ((props as any).onFocus) {\n        (props as any).onFocus(e);\n      }\n    };\n\n    const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n      if (!e.target.value) {\n        setIsFocused(false);\n      }\n      if ((props as any).onBlur) {\n        (props as any).onBlur(e);\n      }\n    };\n\n    // Label should be visible when input is focused or has a value\n    const shouldShowLabel = !hideLabel && (isFocused || !!value);\n    const hasError = !!error;\n\n    const enhancedProps = {\n      ...(props as P),\n      onFocus: handleFocus,\n      onBlur: handleBlur,\n    };\n\n    const labelClassName = [\n      shouldShowLabel ? 'focused' : '',\n      hasError ? 'error' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n\n    return (\n      <Box sx={{ position: 'relative', width: '100%' }}>\n        {label && (\n          <FloatingLabel shrink className={labelClassName}>\n            {label}\n          </FloatingLabel>\n        )}\n        <Component {...enhancedProps} />\n      </Box>\n    );\n  };\n};\n", "import React from 'react';\nimport {\n  Control,\n  FieldError,\n  UseFormRegisterReturn,\n} from '@ltvco/refresh-lib/vendors';\nimport { BaseSearchInput } from './BaseSearchInput';\nimport {\n  composeHOC,\n  withErrorHandling,\n  withClearButton,\n  withFloatingLabel,\n} from './hoc';\n\ninterface SearchInputProps {\n  /**\n   * Class name for the input field\n   */\n  className?: string;\n  /**\n   * Registration object from react-hook-form\n   */\n  registerReturn: UseFormRegisterReturn;\n  /**\n   * Label for the input field that appears when focused or filled\n   */\n  label: string;\n  /**\n   * Placeholder text for the input field\n   */\n  placeholder: string;\n  /**\n   * Field error object from react-hook-form\n   */\n  error?: FieldError;\n  /**\n   * Function to clear errors for the field\n   */\n  clearErrors: (field?: string) => void;\n  /**\n   * Function to call when the clear button is clicked\n   */\n  onClear: () => void;\n  /**\n   * Current value of the input field\n   */\n  value: string;\n  /**\n   * Name of the field for error handling\n   */\n  fieldName: string;\n  /**\n   * Control object from react-hook-form\n   */\n  control: Control;\n  /**\n   * Whether to enable autofocus on the input\n   */\n  autoFocus?: boolean;\n  /**\n   * Additional props to pass to the input component\n   */\n  inputProps?: Record<string, unknown>;\n  /**\n   * Additional props to pass to the input component\n   */\n  InputProps?: Record<string, unknown>;\n  /**\n   * Custom on change handler\n   */\n  customOnChange?: (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    field: { onChange: (value: string) => void }\n  ) => void;\n}\n\n// Create an enhanced search input by composing HOCs\nconst EnhancedSearchInput = composeHOC(\n  withErrorHandling,\n  withClearButton,\n  withFloatingLabel\n)(BaseSearchInput);\n\nexport const SearchInput = React.memo(\n  ({\n    className = '',\n    registerReturn,\n    label,\n    placeholder,\n    error,\n    clearErrors,\n    onClear,\n    value,\n    fieldName,\n    control,\n    autoFocus = false,\n    inputProps = {},\n    InputProps = {},\n    customOnChange,\n  }: SearchInputProps) => {\n    const hasError = !!error;\n\n    return (\n      <EnhancedSearchInput\n        className={`search-hub-variation-search-input ${className}`}\n        // Base input props\n        registerReturn={registerReturn}\n        placeholder={placeholder}\n        value={value}\n        fieldName={fieldName}\n        control={control}\n        autoFocus={autoFocus}\n        inputProps={inputProps}\n        InputProps={InputProps}\n        customOnChange={customOnChange}\n        clearErrors={clearErrors}\n        hasError={hasError}\n        // Error handling props\n        error={error}\n        // Clear button props\n        onClear={onClear}\n        // Floating label props\n        label={label}\n      />\n    );\n  }\n);", "import React from 'react';\nimport {\n  Control,\n  FieldErrors,\n  UseFormRegister,\n} from '@ltvco/refresh-lib/vendors';\nimport { SearchInput } from '../SearchInput';\nimport { PersonFormData } from './PersonSearch';\nimport { useScreenSize } from '@ltvco/refresh-lib/utils';\n\ninterface PersonSmartSearchInputProps {\n  register: UseFormRegister<PersonFormData>;\n  placeholder: string;\n  errors: FieldErrors<PersonFormData>;\n  clearErrors: (field?: string) => void;\n  onClear: () => void;\n  value: string;\n  control: Control<PersonFormData>;\n}\n\nexport const PersonSmartSearchInput = React.memo(\n  ({\n    register,\n    placeholder,\n    errors,\n    clearErrors,\n    onClear,\n    value,\n    control,\n  }: PersonSmartSearchInputProps) => {\n    const { isMobile } = useScreenSize();\n    const registerReturn = register('name');\n\n    return (\n      <SearchInput\n        registerReturn={registerReturn}\n        label={isMobile ? 'Person' : 'People'}\n        placeholder={placeholder}\n        error={errors.name}\n        clearErrors={clearErrors}\n        onClear={onClear}\n        value={value}\n        control={control as unknown as Control}\n        fieldName=\"name\"\n        autoFocus\n      />\n    );\n  }\n);", "import React, { useContext, useCallback, useEffect, useState } from 'react';\nimport { Box, Grid } from '@ltvco/refresh-lib/theme';\nimport { searchFormsRecyclingValidation } from '@ltvco/refresh-lib/utils';\nimport { AppConfig } from '@ltvco/refresh-lib/ctx';\nimport { useFeatureIsOn, useForm, yupResolver } from '@ltvco/refresh-lib/vendors';\nimport { useLLMSmartSearchV1 } from '@ltvco/refresh-lib/hooks';\nimport { PersonSmartSearchResult } from '@ltvco/refresh-lib/api';\nimport { useSession, useReportRedirect } from '@ltvco/refresh-lib/v1';\nimport { personFormsCollectionTypesRecords } from '@ltvco/refresh-lib/v2';\nimport { SearchButton } from '../components';\nimport { PersonFormContainer, PersonSearchFieldContainer } from './components';\nimport { schemaPersonSearchForm } from './utils';\nimport { PersonSmartSearchInput } from './PersonSmartSearchInput';\nimport { SearchProps } from '../utils';\n\ntype SmartSearchPersonParams = {\n  fn?: string;\n  ln?: string;\n  city?: string;\n  email?: string;\n  mn?: string;\n  phone?: string;\n  state?: string;\n  street?: string;\n  type?: string;\n  unit?: string;\n  zipcode?: string;\n  username?: string;\n};\n\nexport interface PersonFormData {\n  name: string;\n}\n\nexport const PersonSearch: React.FC<SearchProps> = ({\n  isMobile,\n  placeholderText,\n  onSearchSuccess,\n  placement = 'dashboard',\n}) => {\n  const {\n    session: { account },\n  } = useSession();\n  const { logError, trackEventGA4 } = useContext(AppConfig);\n  const { redirectToSearchPersonUrlv2 } = useReportRedirect();\n  const isInStreamlinedTestVariant = useFeatureIsOn(\"prop-2958\");\n  const [currentInputValue, setCurrentInputValue] = useState('');\n  const [noResults, setNoResults] = useState(false);\n\n  const {\n    handleSubmit,\n    register,\n    watch,\n    setValue,\n    setError,\n    clearErrors,\n    formState: { errors },\n    control,\n  } = useForm<PersonFormData>({\n    resolver: yupResolver(schemaPersonSearchForm),\n    defaultValues: {\n      name: '',\n    },\n  });\n\n  const name = watch('name');\n\n  const handleClearName = useCallback(() => {\n    setValue('name', '');\n    clearErrors('name');\n  }, [setValue, clearErrors]);\n\n  const redirectToConsolidatedPerson = (\n    results: Partial<PersonSmartSearchResult>[]\n  ) => {\n    const finalData = results.reduce(\n      (\n        acc: Record<string, string | string[]>,\n        curr: SmartSearchPersonParams\n      ) => {\n        for (const key in curr) {\n          const currentValue = curr[key as keyof SmartSearchPersonParams];\n          if (currentValue) {\n            acc[key] = currentValue;\n          }\n        }\n        return acc;\n      },\n      {}\n    );\n    const { street, city, state, fn, mn, ln, title, company, age } = finalData;\n    if (ln) {\n      let personInfo = {\n        age,\n        city,\n        state,\n        fName: fn,\n        lName: ln,\n        mname: mn,\n        fullName: fn && ln ? `${fn} ${ln}` : '',\n        company,\n        title,\n        address: street,\n      };\n\n      setNoResults(false);\n\n      if (isInStreamlinedTestVariant) {\n        redirectToSearchPersonUrlv2({\n          ...personInfo,\n          mName: mn,\n          advancedSearch: true,\n          source: Object.keys(personFormsCollectionTypesRecords),\n        });\n      } else {\n        redirectToSearchPersonUrlv2(personInfo);\n      }\n      \n      return;\n    }\n\n    setNoResults(true);\n  };\n\n  const { data } = useLLMSmartSearchV1('personSmartSearchV1', {\n    enabled: Boolean(currentInputValue),\n    searchValue: currentInputValue,\n  });\n\n  useEffect(() => {\n    if (data?.results?.length) {\n      redirectToConsolidatedPerson(data.results);\n    } else if (data?.contextId) {\n      setNoResults(true);\n    }\n  }, [data?.results, data?.contextId]);\n\n  useEffect(() => {\n    if (noResults) {\n      setError('name', { message: 'No results found, please try again' });\n    }\n  }, [noResults]);\n\n  const onPersonSearchSubmit = useCallback(\n    ({ name }: PersonFormData) => {\n      if (!searchFormsRecyclingValidation(account)) return;\n\n      trackEventGA4({\n        event_name: 'report_search',\n        report_type: 'people',\n        search_by: 'name',\n        search_from: `${placement}_search`,\n      });\n\n      setCurrentInputValue(name);\n    },\n    [account, trackEventGA4, setCurrentInputValue]\n  );\n\n  const renderMobileForm = useCallback(() => {\n    return (\n      <Grid container sx={{ mt: 2.5, mb: 2.5 }} gap={3}>\n        <PersonSearchFieldContainer className={errors.name ? 'error' : ''}>\n          <PersonSmartSearchInput\n            register={register}\n            placeholder={placeholderText}\n            errors={errors}\n            clearErrors={(field?: string) => clearErrors(field as 'name')}\n            onClear={handleClearName}\n            value={name}\n            control={control}\n          />\n        </PersonSearchFieldContainer>\n\n        <SearchButton type=\"submit\" fullWidth>\n          Search\n        </SearchButton>\n      </Grid>\n    );\n  }, [register, placeholderText, name, errors, clearErrors, handleClearName]);\n\n  const renderDesktopForm = useCallback(() => {\n    return (\n      <PersonFormContainer>\n        <Box flexGrow={1}>\n          <PersonSearchFieldContainer\n            container\n            className={errors.name ? 'error' : ''}\n          >\n            <Grid item xs={12} sx={{ display: 'flex', alignItems: 'center' }}>\n              <PersonSmartSearchInput\n                register={register}\n                placeholder={placeholderText}\n                errors={errors}\n                clearErrors={(field?: string) => clearErrors(field as 'name')}\n                onClear={handleClearName}\n                value={name}\n                control={control}\n              />\n            </Grid>\n          </PersonSearchFieldContainer>\n        </Box>\n        <SearchButton type=\"submit\">Search</SearchButton>\n      </PersonFormContainer>\n    );\n  }, [register, placeholderText, name, errors, clearErrors, handleClearName]);\n\n  return (\n    <form onSubmit={handleSubmit(onPersonSearchSubmit)} autoComplete=\"off\">\n      {isMobile ? renderMobileForm() : renderDesktopForm()}\n    </form>\n  );\n};", "import React from 'react';\nimport { Box } from '@ltvco/refresh-lib/theme';\nimport { Control, Controller } from '@ltvco/refresh-lib/vendors';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport {\n  StyledSearchTypeSelect,\n  StyledSearchTypeSelectContainer,\n} from './components';\n\ninterface SelectOption {\n  value: string;\n  label: string;\n}\n\ninterface SelectInputProps {\n  options: SelectOption[];\n  value: string;\n  onChange: (value: string) => void;\n  name: string;\n  control: Control<any>;\n  defaultOptionValue?: string;\n  disabled?: boolean;\n}\n\nexport const SelectInput = React.memo(\n  ({\n    options,\n    value,\n    onChange,\n    name,\n    control,\n    defaultOptionValue,\n    disabled,\n  }: SelectInputProps) => {\n    return (\n      <Box sx={{ minWidth: '100%', height: 'auto' }}>\n        <Controller\n          name={name}\n          control={control}\n          render={({ field }) => (\n            <StyledSearchTypeSelectContainer>\n              <StyledSearchTypeSelect\n                {...field}\n                id={`select-${name}`}\n                value={field.value || defaultOptionValue}\n                onChange={(e) => {\n                  const selectedValue = e.target.value as string;\n                  field.onChange(selectedValue);\n                  onChange(selectedValue);\n                }}\n                IconComponent={KeyboardArrowDownIcon}\n                options={options.map((option) => ({\n                  value: option.value,\n                  display: option.label,\n                }))}\n                disabled={disabled}\n              ></StyledSearchTypeSelect>\n            </StyledSearchTypeSelectContainer>\n          )}\n        />\n      </Box>\n    );\n  }\n);", "import { Theme } from '@ltvco/refresh-lib/theme';\n\nexport enum PROPERTY_SEARCH_TYPES {\n  ADDRESS_REPORT = 'addressReport',\n  PRE_FORECLOSURES = 'preForeclosures',\n}\n\nexport interface PropertyFormData {\n  address: string;\n  searchType: string;\n}\n\nexport type RapidsStateRef = {\n  getValue: () => string;\n  resetValue: () => void;\n};\n\nexport const searchTypeOptions = [\n  { value: PROPERTY_SEARCH_TYPES.ADDRESS_REPORT, label: 'Address Report' },\n  { value: PROPERTY_SEARCH_TYPES.PRE_FORECLOSURES, label: 'Pre-foreclosures' },\n];\n\nexport const getPlaceholderTextForPropertySearch = (\n  activeTab: string,\n  isMobile?: boolean\n): string => {\n  const placeholderText = {\n    [PROPERTY_SEARCH_TYPES.ADDRESS_REPORT]: 'e.g. 123 Main St. New York, NY',\n    [PROPERTY_SEARCH_TYPES.PRE_FORECLOSURES]: 'Enter a city, state or ZIP code',\n  };\n\n  const placeholderTextMobile = {\n    [PROPERTY_SEARCH_TYPES.ADDRESS_REPORT]: 'Address',\n    [PROPERTY_SEARCH_TYPES.PRE_FORECLOSURES]: 'New York, NY',\n  };\n\n  const placeholderMap = isMobile ? placeholderTextMobile : placeholderText;\n  return placeholderMap[activeTab as keyof typeof placeholderMap];\n};\n\nexport const rapidsInputCustomStyles = (theme: Theme) => ({\n  borderRadius: '32px',\n\n  '& .MuiAutocomplete-root': {\n    width: '100%',\n    height: '100%',\n\n    '& .address-input-container': {\n      [theme.breakpoints.down('sm')]: {\n        display: 'flex',\n        justifyContent: 'center',\n      },\n    },\n\n    '& .address-input': {\n      '& .MuiOutlinedInput-root': {\n        border: 'none',\n        borderRadius: '50px',\n      },\n\n      '& .MuiOutlinedInput-notchedOutline': {\n        height: '52px',\n        border: 'none',\n      },\n\n      '& .MuiAutocomplete-input': {\n        height: '32px',\n      },\n\n      // Hide default search clear buttons across browsers\n      '& input[type=\"search\"]::-webkit-search-cancel-button': {\n        WebkitAppearance: 'none',\n        appearance: 'none',\n        display: 'none',\n      },\n\n      // For Firefox\n      '& input[type=\"search\"]::-moz-search-clear': {\n        display: 'none',\n      },\n\n      // For IE\n      '& input[type=\"search\"]::-ms-clear': {\n        display: 'none',\n      },\n\n      // Generic\n      '& input[type=\"search\"]': {\n        appearance: 'none',\n      },\n\n      '& .rapids-search-icon': {\n        display: 'none',\n      },\n    },\n  },\n});", "import { Box, Grid, styled } from '@ltvco/refresh-lib/theme';\n\nexport const PropertySearchFieldContainer = styled(Grid)(({ theme }) => ({\n  height: '58px',\n  display: 'flex',\n  alignItems: 'center',\n  border: `1px solid ${theme.palette.text.disabled}`,\n  borderRadius: '32px',\n  backgroundColor: theme.palette.background.paper,\n  width: '100%',\n  margin: theme.spacing(4, 0),\n\n  '&:focus-within': {\n    borderColor: theme.palette.primary.main,\n  },\n\n  '&.error': {\n    borderColor: theme.palette.error.main,\n  },\n\n  [theme.breakpoints.down('sm')]: {\n    margin: 0,\n  },\n\n  '& .error .MuiTypography-root': {\n    left: '8px',\n\n    [theme.breakpoints.down('sm')]: {\n      left: '32px',\n    },\n  },\n}));\n\nexport const PropertyFormContainer = styled(Box)(({ theme }) => ({\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  gap: theme.spacing(2),\n}));\n\nexport const IntegratedSearchContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  width: '100%',\n  alignItems: 'center',\n  borderRadius: '32px',\n  flexDirection: 'row',\n  overflow: 'hidden',\n  backgroundColor: theme.palette.common.white,\n}));", "import React, { RefObject, useRef } from 'react';\nimport {\n  FieldErrors,\n  UseFormSetValue,\n  UseFormTrigger,\n} from '@ltvco/refresh-lib/vendors';\nimport { Box, InputAdornment, useTheme } from '@ltvco/refresh-lib/theme';\nimport { RapidsInput, RapidsSearchData } from '@ltvco/refresh-lib/v1';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { withErrorHandling, withClearButton, composeHOC } from '../hoc';\nimport {\n  PROPERTY_SEARCH_TYPES,\n  PropertyFormData,\n  rapidsInputCustomStyles,\n  RapidsStateRef,\n} from './utils';\n\ninterface PropertySearchInputProps {\n  placeholder: string;\n  errors: FieldErrors<PropertyFormData>;\n  clearErrors: (field?: string) => void;\n  onClear: () => void;\n  trigger: UseFormTrigger<PropertyFormData>;\n  onSubmit?: () => void;\n  onPropertyDataSelected: (data: RapidsSearchData) => void;\n  searchType: string;\n  setValue: UseFormSetValue<PropertyFormData>;\n  value: string;\n  rapidsStateRef: RefObject<RapidsStateRef>;\n}\n\nexport const PropertySearchInput = React.memo(\n  ({\n    placeholder,\n    errors,\n    clearErrors,\n    onClear,\n    trigger,\n    onSubmit,\n    onPropertyDataSelected,\n    searchType,\n    value,\n    setValue,\n    rapidsStateRef,\n  }: PropertySearchInputProps) => {\n    const theme = useTheme();\n    const propertyDataRef = useRef<RapidsSearchData | null>(null);\n\n    const handleRapidsDataSubmit = (propertyData: RapidsSearchData) => {\n      const { street_line, city, state, zipcode } = propertyData;\n      if (street_line.trim() || city.trim() || state.trim() || zipcode.trim()) {\n        clearErrors('address');\n      }\n\n      propertyDataRef.current = propertyData;\n      onPropertyDataSelected(propertyData);\n\n      const rapidsInputValue = rapidsStateRef.current?.getValue();\n      setValue('address', rapidsInputValue || '');\n\n      trigger().then((isValid) => {\n        if (isValid && onSubmit) {\n          onSubmit();\n        }\n      });\n    };\n\n    const onClearHandler = () => {\n      onClear();\n      propertyDataRef.current = null;\n      setValue('address', '');\n    };\n\n    const BaseRapidsInput = () => {\n      return (\n        <Box sx={{ width: '100%' }}>\n          <RapidsInput\n            rapidsStateRef={rapidsStateRef}\n            valueOveride={value}\n            addressOnly={searchType === PROPERTY_SEARCH_TYPES.ADDRESS_REPORT}\n            searchTypes={\n              searchType === PROPERTY_SEARCH_TYPES.PRE_FORECLOSURES\n                ? ['city', 'state', 'zip']\n                : []\n            }\n            parentFormSubmitHandler={handleRapidsDataSubmit}\n            inputOptions={{\n              hideInputLabel: true,\n              hideSearchButton: true,\n              autoFocus: true,\n              placeholder: placeholder,\n              inputWidth: { md: '99%', xs: '99%' },\n              customStyles: rapidsInputCustomStyles(theme),\n              InputProps: {\n                sx: { borderRadius: 3 },\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon\n                      sx={{\n                        color: errors.address\n                          ? theme.palette.error.main\n                          : theme.palette.primary.main,\n                      }}\n                    />\n                  </InputAdornment>\n                ),\n              },\n            }}\n          />\n        </Box>\n      );\n    };\n\n    const EnhancedRapidsInput = composeHOC(\n      withErrorHandling,\n      withClearButton\n    )(BaseRapidsInput);\n\n    return (\n      <EnhancedRapidsInput\n        className=\"property-search-input\"\n        error={errors.address}\n        clearErrors={clearErrors}\n        onClear={onClearHandler}\n        value={value}\n        fieldName=\"address\"\n        clearButtonStyles={{ right: 16 }}\n      />\n    );\n  }\n);\n", "import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n  useRef,\n} from 'react';\nimport { Box, Grid } from '@ltvco/refresh-lib/theme';\nimport { useForm, useMutation } from '@ltvco/refresh-lib/vendors';\nimport { searchFormsRecyclingValidation } from '@ltvco/refresh-lib/utils';\nimport { AppConfig, useAppConstantsContext } from '@ltvco/refresh-lib/ctx';\nimport {\n  addressSearch,\n  propertySearchParams,\n  AddressSearchParams,\n  SearchReportResponseData,\n  useSession,\n  useReportRedirect,\n  RapidsSearchData,\n} from '@ltvco/refresh-lib/v1';\nimport { SelectInput } from '../SelectInput';\nimport { SearchButton } from '../components';\nimport {\n  PropertyFormData,\n  PROPERTY_SEARCH_TYPES,\n  searchTypeOptions,\n  getPlaceholderTextForPropertySearch,\n  RapidsStateRef,\n} from './utils';\nimport {\n  IntegratedSearchContainer,\n  PropertyFormContainer,\n  PropertySearchFieldContainer,\n} from './components';\nimport { PropertySearchInput } from './PropertySearchInput';\nimport { SearchProps } from '../utils';\n\nexport const PropertySearch = React.memo(\n  ({\n    onSearchSuccess,\n    isMobile = false,\n    placement = 'dashboard',\n  }: SearchProps) => {\n    const {\n      session: { account },\n    } = useSession();\n    const {\n      featureFlags: { propertyReportFlags },\n    } = useAppConstantsContext();\n    const { redirectToSearchPropertyListingsUrl } = useReportRedirect();\n    const { logError, trackEventGA4 } = useContext(AppConfig);\n\n    const [customPlaceholderText, setCustomPlaceholderText] = useState('');\n    const selectedPropertyData = useRef<RapidsSearchData | null>(null);\n    const rapidsStateRef = useRef<RapidsStateRef>(null);\n\n    const {\n      handleSubmit,\n      control,\n      formState: { errors },\n      setValue,\n      setError,\n      clearErrors,\n      watch,\n      trigger,\n    } = useForm<PropertyFormData>({\n      mode: 'onSubmit',\n      reValidateMode: 'onChange',\n      defaultValues: {\n        address: '',\n        searchType: PROPERTY_SEARCH_TYPES.ADDRESS_REPORT,\n      },\n    });\n\n    const propertyQuery = useMutation<\n      SearchReportResponseData,\n      Error,\n      AddressSearchParams\n    >({\n      mutationFn: addressSearch,\n      onSuccess: (data, variables) => {\n        onSearchSuccess &&\n          onSearchSuccess({\n            permalink: data.report.permalink,\n            reportType: 'property',\n            searchParams: propertySearchParams(variables),\n          });\n      },\n      onError: (error) => {\n        logError('Email Search', error);\n      },\n    });\n\n    const searchTypeValue = watch('searchType');\n    const addressValue = watch('address');\n\n    useEffect(() => {\n      setCustomPlaceholderText(\n        getPlaceholderTextForPropertySearch(searchTypeValue, isMobile)\n      );\n    }, [searchTypeValue, isMobile]);\n\n    const handleSearchTypeChange = useCallback(\n      (value: string) => {\n        setValue('searchType', value);\n        clearErrors('address');\n      },\n      [setValue, clearErrors]\n    );\n\n    const handleClearAddress = useCallback(() => {\n      setValue('address', '');\n      clearErrors('address');\n      selectedPropertyData.current = null;\n      rapidsStateRef.current?.resetValue();\n    }, [setValue, clearErrors]);\n\n    const handlePropertyDataSelected = useCallback(\n      (data: RapidsSearchData) => {\n        selectedPropertyData.current = data;\n      },\n      [setValue]\n    );\n\n    const handleAddressReportSearch = useCallback(\n      (propertyData: RapidsSearchData) => {\n        const { street_line, city, state, zipcode } = propertyData;\n\n        const parsedAddress = {\n          address: street_line,\n          city: city,\n          state: state,\n          zipcode: zipcode,\n          report_flags: JSON.stringify(propertyReportFlags) || '',\n        };\n\n        const address = `${street_line}, ${city}, ${state}, ${zipcode}`;\n        setValue('address', address);\n\n        propertyQuery.mutate(parsedAddress);\n      },\n      [propertyQuery, propertyReportFlags]\n    );\n\n    const handlePreForeclosuresReportSearch = useCallback(\n      (propertyData: RapidsSearchData) => {\n        const { city, state, zipcode } = propertyData;\n        const personByAddressSearchParams: {\n          city?: string;\n          state?: string;\n          zip5?: string;\n        } = {};\n\n        let address = '';\n\n        if (city && state) {\n          personByAddressSearchParams.city = city;\n          personByAddressSearchParams.state = state;\n          address = `${city}, ${state}`;\n        }\n\n        if (zipcode) {\n          personByAddressSearchParams.zip5 = zipcode;\n          address = `${city}, ${state} ${zipcode}`;\n        }\n\n        setValue('address', address);\n\n        redirectToSearchPropertyListingsUrl(personByAddressSearchParams);\n      },\n      [propertyReportFlags, setValue]\n    );\n\n    const onPropertySearchSubmit = (data: PropertyFormData) => {\n      if (!searchFormsRecyclingValidation(account)) return;\n      const optionSelected = selectedPropertyData.current;\n\n      if (!optionSelected) {\n        const currentInputText = rapidsStateRef.current?.getValue();\n        let message = 'Please try searching for a valid street address.';\n\n        if (searchTypeValue === PROPERTY_SEARCH_TYPES.PRE_FORECLOSURES) {\n          message = 'Please try searching for a valid city, state or zip code.';\n        }\n\n        setValue('address', currentInputText || '');\n        setError('address', { message });\n        return;\n      }\n\n      const searchBy =\n        searchTypeValue === PROPERTY_SEARCH_TYPES.ADDRESS_REPORT\n          ? 'address'\n          : 'pre_foreclosure';\n\n      if (searchTypeValue === PROPERTY_SEARCH_TYPES.ADDRESS_REPORT) {\n        handleAddressReportSearch(optionSelected);\n      } else if (searchTypeValue === PROPERTY_SEARCH_TYPES.PRE_FORECLOSURES) {\n        handlePreForeclosuresReportSearch(optionSelected);\n      }\n\n      trackEventGA4({\n        event_name: 'report_search',\n        report_type: 'property',\n        search_by: searchBy,\n        search_from: `${placement}_search`,\n      });\n    };\n\n    const SearchInputComponent = () => {\n      return (\n        <PropertySearchInput\n          placeholder={customPlaceholderText}\n          errors={errors}\n          clearErrors={clearErrors as (field?: string) => void}\n          onClear={handleClearAddress}\n          trigger={trigger}\n          onSubmit={handleSubmit(onPropertySearchSubmit)}\n          onPropertyDataSelected={handlePropertyDataSelected}\n          searchType={searchTypeValue}\n          value={addressValue}\n          setValue={setValue}\n          rapidsStateRef={rapidsStateRef}\n        />\n      );\n    };\n\n    const SelectInputComponent = () => {\n      return (\n        <SelectInput\n          options={searchTypeOptions}\n          value={searchTypeValue}\n          onChange={handleSearchTypeChange}\n          name=\"searchType\"\n          control={control}\n        />\n      );\n    };\n\n    const renderMobileForm = useCallback(() => {\n      return (\n        <Grid container sx={{ mt: 2.5, mb: 2.5 }} gap={3}>\n          <PropertySearchFieldContainer>\n            <SelectInputComponent />\n          </PropertySearchFieldContainer>\n\n          <PropertySearchFieldContainer\n            className={errors.address ? 'error' : ''}\n          >\n            <SearchInputComponent />\n          </PropertySearchFieldContainer>\n\n          <SearchButton type=\"submit\" fullWidth>\n            Search\n          </SearchButton>\n        </Grid>\n      );\n    }, [\n      searchTypeValue,\n      errors,\n      customPlaceholderText,\n      clearErrors,\n      handleClearAddress,\n      handlePropertyDataSelected,\n      addressValue,\n      setValue,\n    ]);\n\n    const renderDesktopForm = useCallback(() => {\n      return (\n        <PropertyFormContainer>\n          <Box flexGrow={1}>\n            <PropertySearchFieldContainer\n              container\n              className={errors.address ? 'error' : ''}\n            >\n              <Grid\n                item\n                xs={12}\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  position: 'relative',\n                }}\n              >\n                <IntegratedSearchContainer>\n                  <Box>\n                    <SelectInputComponent />\n                  </Box>\n\n                  <SearchInputComponent />\n                </IntegratedSearchContainer>\n              </Grid>\n            </PropertySearchFieldContainer>\n          </Box>\n          <SearchButton type=\"submit\">Search</SearchButton>\n        </PropertyFormContainer>\n      );\n    }, [\n      searchTypeValue,\n      errors,\n      customPlaceholderText,\n      clearErrors,\n      handleClearAddress,\n      handlePropertyDataSelected,\n      addressValue,\n      setValue,\n    ]);\n\n    return (\n      <form onSubmit={handleSubmit(onPropertySearchSubmit)}>\n        {isMobile ? renderMobileForm() : renderDesktopForm()}\n      </form>\n    );\n  }\n);", "import { unformatPhone } from '@ltvco/refresh-lib/utils';\nimport * as yup from 'yup';\n\nconst PHONE_VALIDATION_REGEX =\n  /^(?:\\+?1?)[2-9]\\d{2}[2-9](?!(1)\\1)[\\d]{2}\\d{4}$/;\n\nexport const schemaPhoneSearchForm = yup.object({\n  phone: yup\n    .string()\n    .required('Please enter a valid phone number to complete search.')\n    .test(\n      'phone-search-validation',\n      'Please enter a valid phone number to complete search.',\n      (value) => {\n        return (\n          unformatPhone(value || '').match(PHONE_VALIDATION_REGEX) !== null\n        );\n      }\n    )\n    .trim(),\n});", "import React from 'react';\nimport {\n  Control,\n  FieldErrors,\n  UseFormRegister,\n} from '@ltvco/refresh-lib/vendors';\nimport { formatPhoneInput } from '@ltvco/refresh-lib/utils';\nimport { PhoneFormData } from './PhoneSearch';\nimport { SearchInput } from '../SearchInput';\n\ninterface PhoneInputProps {\n  register: UseFormRegister<PhoneFormData>;\n  placeholder: string;\n  errors: FieldErrors<PhoneFormData>;\n  clearErrors: (field?: string) => void;\n  onClear: () => void;\n  value: string;\n  control: Control<PhoneFormData>;\n  previousPhone: string;\n  setPreviousPhone: (phone: string) => void;\n}\n\nexport const PhoneInput = React.memo(\n  ({\n    register,\n    placeholder,\n    errors,\n    clearErrors,\n    onClear,\n    value,\n    control,\n    previousPhone,\n    setPreviousPhone,\n  }: PhoneInputProps) => {\n    const registerReturn = register('phone');\n\n    const handleInputChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n      field: { onChange: (value: string) => void }\n    ) => {\n      const input = e.target.value;\n      const { onChange } = field;\n      // If there's any value, clear phone errors\n      if (input.trim()) {\n        clearErrors('phone');\n      }\n\n      // Handle backspace/deletion case\n      if (input.length < previousPhone.length) {\n        onChange(input);\n        setPreviousPhone(input);\n        return;\n      }\n\n      // Format the phone number and update the field\n      const formattedInput = formatPhoneInput(input);\n      onChange(formattedInput);\n      setPreviousPhone(formattedInput);\n    };\n\n    return (\n      <SearchInput\n        registerReturn={registerReturn}\n        label=\"Phone\"\n        placeholder={placeholder}\n        error={errors.phone}\n        customOnChange={handleInputChange}\n        clearErrors={clearErrors}\n        onClear={onClear}\n        value={value}\n        fieldName=\"phone\"\n        control={control as unknown as Control}\n        autoFocus\n        inputProps={{\n          maxLength: 17,\n        }}\n      />\n    );\n  }\n);", "import { styled, Grid, Box } from '@ltvco/refresh-lib/theme';\n\nexport const PhoneSearchFieldContainer = styled(Grid)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  border: `1px solid ${theme.palette.text.disabled}`,\n  borderRadius: '32px',\n  padding: theme.spacing(0.375, 1),\n  backgroundColor: theme.palette.background.paper,\n  width: '100%',\n  margin: theme.spacing(4, 0),\n\n  '&:focus-within': {\n    borderColor: theme.palette.primary.main,\n  },\n\n  '&.error': {\n    borderColor: theme.palette.error.main,\n  },\n\n  [theme.breakpoints.down('sm')]: {\n    margin: 0,\n  },\n}));\n\nexport const PhoneFormContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  gap: theme.spacing(2),\n  width: '100%',\n}));", "import React, { useContext, useCallback, useState, useEffect } from 'react';\nimport { Box, Grid } from '@ltvco/refresh-lib/theme';\nimport {\n  searchFormsRecyclingValidation,\n  unformatPhone,\n} from '@ltvco/refresh-lib/utils';\nimport { AppConfig } from '@ltvco/refresh-lib/ctx';\nimport { useForm, useMutation, yupResolver } from '@ltvco/refresh-lib/vendors';\nimport {\n  SearchReportResponseData,\n  PhoneSearchParams,\n  useSession,\n  phoneSearch,\n} from '@ltvco/refresh-lib/v1';\nimport { SearchButton } from '../components';\nimport { schemaPhoneSearchForm } from './utils';\nimport { PhoneInput } from './PhoneInput';\nimport { PhoneFormContainer, PhoneSearchFieldContainer } from './components';\nimport { SearchProps } from '../utils';\n\nexport interface PhoneFormData {\n  phone: string;\n}\n\nexport const PhoneSearch: React.FC<SearchProps> = ({\n  isMobile,\n  placeholderText,\n  onSearchSuccess,\n  placement = 'dashboard',\n}) => {\n  const {\n    session: { account },\n  } = useSession();\n  const { logError, trackEventGA4 } = useContext(AppConfig);\n\n  const {\n    handleSubmit,\n    register,\n    watch,\n    setValue,\n    clearErrors,\n    control,\n    formState: { errors },\n  } = useForm<PhoneFormData>({\n    resolver: yupResolver(schemaPhoneSearchForm),\n    defaultValues: {\n      phone: '',\n    },\n  });\n\n  const phone = watch('phone');\n  const [previousPhone, setPreviousPhone] = useState('');\n\n  // Update previousPhone when phone changes\n  useEffect(() => {\n    if (phone !== previousPhone) {\n      setPreviousPhone(phone);\n    }\n  }, [phone]);\n\n  const handleClearPhone = useCallback(() => {\n    setValue('phone', '');\n    clearErrors('phone');\n    setPreviousPhone('');\n  }, [setValue, clearErrors]);\n\n  const phoneQuery = useMutation<\n    SearchReportResponseData,\n    Error,\n    PhoneSearchParams\n  >({\n    mutationFn: phoneSearch,\n    onSuccess: (data, variables) => {\n      onSearchSuccess &&\n        onSearchSuccess({\n          permalink: data.report.permalink,\n          reportType: 'phone',\n          searchParams: `phone=${encodeURIComponent(variables.phone)}`,\n        });\n    },\n    onError: (error) => {\n      logError('Phone Search', error);\n    },\n  });\n\n  const onPhoneSearchSubmit = useCallback(\n    ({ phone }: { phone: string }) => {\n      if (!searchFormsRecyclingValidation(account)) return;\n\n      trackEventGA4({\n        event_name: 'report_search',\n        report_type: 'phone',\n        search_by: 'phone',\n        search_from: `${placement}_search`,\n      });\n\n      phoneQuery.mutate({ phone: unformatPhone(phone) });\n    },\n    [account, trackEventGA4, phoneQuery]\n  );\n\n  const renderMobileForm = useCallback(() => {\n    return (\n      <Grid container sx={{ mt: 2.5, mb: 2.5 }} gap={3}>\n        <PhoneSearchFieldContainer className={errors.phone ? 'error' : ''}>\n          <PhoneInput\n            register={register}\n            placeholder={placeholderText}\n            errors={errors}\n            clearErrors={(field?: string) => clearErrors(field as 'phone')}\n            onClear={handleClearPhone}\n            value={phone}\n            control={control}\n            previousPhone={previousPhone}\n            setPreviousPhone={setPreviousPhone}\n          />\n        </PhoneSearchFieldContainer>\n\n        <SearchButton type=\"submit\" fullWidth>\n          Search\n        </SearchButton>\n      </Grid>\n    );\n  }, [\n    register,\n    placeholderText,\n    phone,\n    errors,\n    clearErrors,\n    handleClearPhone,\n    previousPhone,\n    control,\n  ]);\n\n  const renderDesktopForm = useCallback(() => {\n    return (\n      <PhoneFormContainer>\n        <Box flexGrow={1}>\n          <PhoneSearchFieldContainer\n            container\n            className={errors.phone ? 'error' : ''}\n          >\n            <Grid item xs={12} sx={{ display: 'flex', alignItems: 'center' }}>\n              <PhoneInput\n                register={register}\n                placeholder={placeholderText}\n                errors={errors}\n                clearErrors={(field?: string) => clearErrors(field as 'phone')}\n                onClear={handleClearPhone}\n                value={phone}\n                control={control}\n                previousPhone={previousPhone}\n                setPreviousPhone={setPreviousPhone}\n              />\n            </Grid>\n          </PhoneSearchFieldContainer>\n        </Box>\n        <SearchButton type=\"submit\">Search</SearchButton>\n      </PhoneFormContainer>\n    );\n  }, [\n    register,\n    placeholderText,\n    phone,\n    errors,\n    clearErrors,\n    handleClearPhone,\n    previousPhone,\n    control,\n  ]);\n\n  return (\n    <form onSubmit={handleSubmit(onPhoneSearchSubmit)}>\n      {isMobile ? renderMobileForm() : renderDesktopForm()}\n    </form>\n  );\n};", "import { styled, Select, Box, Grid } from '@ltvco/refresh-lib/theme';\n\nexport const SocialNetworkSelect = styled(Select)(({ theme }) => ({\n  height: '100%',\n  minWidth: '120px',\n  borderRadius: '0 32px 32px 0',\n  paddingLeft: '0',\n\n  '&:before, &:after': {\n    display: 'none',\n  },\n\n  '&:hover': {\n    boxShadow: 'none',\n  },\n\n  '& .MuiSelect-select': {\n    padding: theme.spacing(1, 1.5),\n    fontSize: '16px',\n    letterSpacing: '0.03125em',\n    lineHeight: '1.5em',\n    color: theme.palette.text.secondary,\n  },\n\n  '& .MuiOutlinedInput-notchedOutline': {\n    border: 'none',\n  },\n\n  [theme.breakpoints.down('sm')]: {\n    minWidth: '100%',\n    paddingLeft: '10px',\n    border: `1px solid ${theme.palette.text.disabled}`,\n    borderRadius: '32px',\n\n    '& .MuiSelect-select': {\n      padding: theme.spacing(1.5),\n    },\n  },\n}));\n\nexport const UsernameSearchFieldContainer = styled(Grid)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  border: `1px solid ${theme.palette.text.disabled}`,\n  borderRadius: '32px',\n  padding: theme.spacing(0.375, 1),\n  backgroundColor: theme.palette.background.paper,\n  width: '100%',\n  margin: theme.spacing(4, 0),\n\n  '&:focus-within': {\n    borderColor: theme.palette.primary.main,\n  },\n\n  '&.error': {\n    borderColor: theme.palette.error.main,\n  },\n\n  [theme.breakpoints.down('sm')]: {\n    margin: 0,\n  },\n}));\n\nexport const UsernameSearchDivider = styled(Box)(({ theme }) => ({\n  height: '50px',\n  width: '1px',\n  backgroundColor: theme.palette.divider,\n  margin: theme.spacing(0, 1),\n  [theme.breakpoints.down('sm')]: {\n    display: 'none',\n  },\n}));\n\nexport const UsernameFormContainer = styled(Box)(({ theme }) => ({\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  gap: theme.spacing(2),\n}));", "import * as yup from 'yup';\n\nexport const socialNetworks = [\n  { value: '', display: 'Social Network' },\n  { value: 'facebook', display: 'Facebook' },\n  { value: 'instagram', display: 'Instagram' },\n  { value: 'twitter', display: '𝕏' },\n  { value: 'linkedin', display: 'LinkedIn' },\n  { value: 'youtube', display: 'Youtube' },\n  { value: 'pinterest', display: 'Pinterest' },\n  { value: 'ebay', display: 'eBay' },\n  { display: 'Aboutme', value: 'aboutme' },\n  { display: 'Badoo', value: 'badoo' },\n  { display: 'Bebo', value: 'bebo' },\n  { display: 'Classmates', value: 'classmates' },\n  { display: 'CPF', value: 'cpf' },\n  { display: 'Cyworld', value: 'cyworld' },\n  { display: 'Delicious', value: 'delicious' },\n  { display: 'Deviantart', value: 'deviantart' },\n  { display: 'Diggtagged', value: 'diggtagged' },\n  { display: 'Douban', value: 'douban' },\n  { display: 'Flavorsme', value: 'flavorsme' },\n  { display: 'Flickr', value: 'flickr' },\n  { display: 'Flixster', value: 'flixster' },\n  { display: 'Foursquare', value: 'foursquare' },\n  { display: 'Freelancer', value: 'freelancer' },\n  { display: 'Friendster', value: 'friendster' },\n  { display: 'Gaia', value: 'gaia' },\n  { display: 'Github', value: 'github' },\n  { display: 'Goodreads', value: 'goodreads' },\n  { display: 'Google', value: 'google' },\n  { display: 'Gravatar', value: 'gravatar' },\n  { display: 'Habbo', value: 'habbo' },\n  { display: 'Hi5', value: 'hi5' },\n  { display: 'Hyves', value: 'hyves' },\n  { display: 'Imgur', value: 'imgur' },\n  { display: 'Lastfm', value: 'lastfm' },\n  { display: 'Livejournal', value: 'livejournal' },\n  { display: 'Meetup', value: 'meetup' },\n  { display: 'Myheritage', value: 'myheritage' },\n  { display: 'Mylife', value: 'mylife' },\n  { display: 'Myspace', value: 'myspace' },\n  { display: 'Myyearbook', value: 'myyearbook' },\n  { display: 'Netlog', value: 'netlog' },\n  { display: 'Ning', value: 'ning' },\n  { display: 'Odnoklassniki', value: 'odnoklassniki' },\n  { display: 'Orkut', value: 'orkut' },\n  { display: 'Quora', value: 'quora' },\n  { display: 'Qzone', value: 'qzone' },\n  { display: 'Renren', value: 'renren' },\n  { display: 'Sonico', value: 'sonico' },\n  { display: 'Soundcloud', value: 'soundcloud' },\n  { display: 'Stumbleupon', value: 'stumbleupon' },\n  { display: 'Tumblr', value: 'tumblr' },\n  { display: 'Viadeo', value: 'viadeo' },\n  { display: 'Vkontakte', value: 'vkontakte' },\n  { display: 'Weeworld', value: 'weeworld' },\n  { display: 'Xanga', value: 'xanga' },\n  { display: 'Xing', value: 'xing' },\n  { display: 'Yelp', value: 'yelp' },\n];\n\nexport const schemaUsernameSearchForm = yup.object({\n  username: yup\n    .string()\n    .required('Please enter a valid username to complete search.')\n    .trim(),\n});", "import React from 'react';\nimport {\n  Control,\n  FieldErrors,\n  UseFormRegister,\n} from '@ltvco/refresh-lib/vendors';\nimport { SearchInput } from '../SearchInput';\nimport { UsernameFormData } from './UsernameSearch';\n\ninterface UsernameInputProps {\n  register: UseFormRegister<{ username: string }>;\n  placeholder: string;\n  errors: FieldErrors<{ username: string }>;\n  clearErrors: (field?: string) => void;\n  onClear: () => void;\n  value: string;\n  control: Control<UsernameFormData>;\n}\n\nexport const UsernameInput = React.memo(\n  ({\n    register,\n    placeholder,\n    errors,\n    clearErrors,\n    onClear,\n    value,\n    control,\n  }: UsernameInputProps) => {\n    const registerReturn = register('username');\n\n    return (\n      <SearchInput\n        registerReturn={registerReturn}\n        label=\"Username\"\n        placeholder={placeholder}\n        error={errors.username}\n        clearErrors={clearErrors}\n        onClear={onClear}\n        value={value}\n        control={control as unknown as Control}\n        fieldName=\"username\"\n        autoFocus\n      />\n    );\n  }\n);\n", "import React, { useContext, useCallback } from 'react';\nimport { Box, Grid } from '@ltvco/refresh-lib/theme';\nimport { searchFormsRecyclingValidation } from '@ltvco/refresh-lib/utils';\nimport { AppConfig } from '@ltvco/refresh-lib/ctx';\nimport { useForm, useMutation, yupResolver } from '@ltvco/refresh-lib/vendors';\nimport {\n  SearchReportResponseData,\n  usernameSearch,\n  UsernameSearchParams,\n  useSession,\n} from '@ltvco/refresh-lib/v1';\nimport { SearchButton } from '../components';\nimport {\n  SocialNetworkSelect,\n  UsernameSearchFieldContainer,\n  UsernameSearchDivider,\n  UsernameFormContainer,\n} from './components';\nimport { socialNetworks, schemaUsernameSearchForm } from './utils';\nimport { UsernameInput } from './UsernameInput';\nimport { SearchProps } from '../utils';\n\nexport interface UsernameFormData {\n  username: string;\n  socialNetwork?: string;\n}\n\nexport const UsernameSearch: React.FC<SearchProps> = ({\n  isMobile,\n  placeholderText,\n  onSearchSuccess,\n  placement = 'dashboard',\n}) => {\n  const {\n    session: { account },\n  } = useSession();\n  const { logError, trackEventGA4 } = useContext(AppConfig);\n\n  const {\n    handleSubmit,\n    register,\n    watch,\n    setValue,\n    clearErrors,\n    formState: { errors },\n    control,\n  } = useForm<UsernameFormData>({\n    resolver: yupResolver(schemaUsernameSearchForm),\n    defaultValues: {\n      username: '',\n      socialNetwork: '',\n    },\n  });\n\n  const socialNetwork = watch('socialNetwork');\n  const username = watch('username');\n\n  const handleClearUsername = useCallback(() => {\n    setValue('username', '');\n    clearErrors('username');\n  }, [setValue, clearErrors]);\n\n  const usernameQuery = useMutation<\n    SearchReportResponseData,\n    Error,\n    UsernameSearchParams\n  >({\n    mutationFn: usernameSearch,\n    onSuccess: (data, variables) => {\n      onSearchSuccess &&\n        onSearchSuccess({\n          permalink: data.report.permalink,\n          reportType: 'username',\n          searchParams: `username=${encodeURIComponent(variables.username)}`,\n        });\n    },\n    onError: (error) => {\n      logError('Username Search', error);\n    },\n  });\n\n  const handleSocialNetworkChange = useCallback(\n    (value: string) => {\n      setValue('socialNetwork', value);\n    },\n    [setValue]\n  );\n\n  const onUsernameSearchSubmit = useCallback(\n    ({ username, socialNetwork }: UsernameFormData) => {\n      if (!searchFormsRecyclingValidation(account)) return;\n\n      if (socialNetwork !== '') {\n        username = `${username}@${socialNetwork}`;\n      }\n\n      trackEventGA4({\n        event_name: 'report_search',\n        report_type: 'username',\n        search_by: 'username',\n        search_from: `${placement}_search`,\n      });\n\n      usernameQuery.mutate({ username });\n    },\n    [account, trackEventGA4, usernameQuery]\n  );\n\n  const renderMobileForm = useCallback(() => {\n    return (\n      <Grid container sx={{ mt: 2.5, mb: 2.5 }} gap={3}>\n        <UsernameSearchFieldContainer\n          className={errors.username ? 'error' : ''}\n        >\n          <UsernameInput\n            register={register}\n            placeholder={placeholderText}\n            errors={errors}\n            clearErrors={(field?: string) => clearErrors(field as 'username')}\n            onClear={handleClearUsername}\n            value={username}\n            control={control}\n          />\n        </UsernameSearchFieldContainer>\n\n        <SocialNetworkSelect\n          id=\"mobile-social-network-select\"\n          options={socialNetworks}\n          value={socialNetwork}\n          onOptionSelect={handleSocialNetworkChange}\n          fullWidth\n        />\n\n        <SearchButton type=\"submit\" fullWidth>\n          Search\n        </SearchButton>\n      </Grid>\n    );\n  }, [\n    register,\n    placeholderText,\n    socialNetwork,\n    handleSocialNetworkChange,\n    username,\n    errors,\n    clearErrors,\n    handleClearUsername,\n  ]);\n\n  const renderDesktopForm = useCallback(() => {\n    return (\n      <UsernameFormContainer>\n        <Box flexGrow={1}>\n          <UsernameSearchFieldContainer\n            container\n            className={errors.username ? 'error' : ''}\n          >\n            <Grid\n              item\n              xs={7}\n              lg={9}\n              sx={{ display: 'flex', alignItems: 'center' }}\n            >\n              <UsernameInput\n                register={register}\n                placeholder={placeholderText}\n                errors={errors}\n                clearErrors={(field?: string) =>\n                  clearErrors(field as 'username')\n                }\n                onClear={handleClearUsername}\n                value={username}\n                control={control}\n              />\n            </Grid>\n            <Grid\n              item\n              xs={5}\n              lg={3}\n              sx={{ display: 'flex', alignItems: 'center' }}\n            >\n              <UsernameSearchDivider />\n\n              <SocialNetworkSelect\n                id=\"desktop-social-network-select\"\n                options={socialNetworks}\n                value={socialNetwork}\n                onOptionSelect={handleSocialNetworkChange}\n              />\n            </Grid>\n          </UsernameSearchFieldContainer>\n        </Box>\n        <SearchButton type=\"submit\">Search</SearchButton>\n      </UsernameFormContainer>\n    );\n  }, [\n    register,\n    placeholderText,\n    socialNetwork,\n    handleSocialNetworkChange,\n    username,\n    errors,\n    clearErrors,\n    handleClearUsername,\n  ]);\n\n  return (\n    <form onSubmit={handleSubmit(onUsernameSearchSubmit)}>\n      {isMobile ? renderMobileForm() : renderDesktopForm()}\n    </form>\n  );\n};", "import * as yup from 'yup';\n\nexport const schemaEmailSearchForm = yup.object({\n  email: yup\n    .string()\n    .required('Please enter a valid email to complete search.')\n    .email('Please enter a valid email to complete search.')\n    .trim(),\n});", "import React from 'react';\nimport {\n  Control,\n  FieldErrors,\n  UseFormRegister,\n} from '@ltvco/refresh-lib/vendors';\nimport { SearchInput } from '../SearchInput';\nimport { EmailFormData } from './EmailSearch';\n\ninterface EmailInputProps {\n  register: UseFormRegister<EmailFormData>;\n  placeholder: string;\n  errors: FieldErrors<EmailFormData>;\n  clearErrors: (field?: string) => void;\n  onClear: () => void;\n  value: string;\n  control: Control<EmailFormData>;\n}\n\nexport const EmailInput = React.memo(\n  ({\n    register,\n    placeholder,\n    errors,\n    clearErrors,\n    onClear,\n    value,\n    control,\n  }: EmailInputProps) => {\n    const registerReturn = register('email');\n\n    return (\n      <SearchInput\n        registerReturn={registerReturn}\n        label=\"Email\"\n        placeholder={placeholder}\n        error={errors.email}\n        clearErrors={clearErrors}\n        onClear={onClear}\n        value={value}\n        control={control as unknown as Control}\n        fieldName=\"email\"\n        autoFocus\n      />\n    );\n  }\n);", "import { styled, Box, Grid } from '@ltvco/refresh-lib/theme';\n\nexport const EmailSearchFieldContainer = styled(Grid)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  border: `1px solid ${theme.palette.text.disabled}`,\n  borderRadius: '32px',\n  padding: theme.spacing(0.375, 1),\n  backgroundColor: theme.palette.background.paper,\n  width: '100%',\n  margin: theme.spacing(4, 0),\n\n  '&:focus-within': {\n    borderColor: theme.palette.primary.main,\n  },\n\n  '&.error': {\n    borderColor: theme.palette.error.main,\n  },\n\n  [theme.breakpoints.down('sm')]: {\n    margin: 0,\n  },\n}));\n\nexport const EmailFormContainer = styled(Box)(({ theme }) => ({\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  gap: theme.spacing(2),\n}));", "import React, { useContext, useCallback } from 'react';\nimport { Box, Grid } from '@ltvco/refresh-lib/theme';\nimport { searchFormsRecyclingValidation } from '@ltvco/refresh-lib/utils';\nimport { AppConfig } from '@ltvco/refresh-lib/ctx';\nimport { useForm, useMutation, yupResolver } from '@ltvco/refresh-lib/vendors';\nimport {\n  SearchReportResponseData,\n  emailSearch,\n  EmailSearchParams,\n  useSession,\n} from '@ltvco/refresh-lib/v1';\nimport { SearchButton } from '../components';\nimport { schemaEmailSearchForm } from './utils';\nimport { EmailInput } from './EmailInput';\nimport { EmailFormContainer, EmailSearchFieldContainer } from './components';\nimport { SearchProps } from '../utils';\n\nexport interface EmailFormData {\n  email: string;\n}\n\nexport const EmailSearch: React.FC<SearchProps> = ({\n  isMobile,\n  placeholderText,\n  onSearchSuccess,\n  placement = 'dashboard',\n}) => {\n  const {\n    session: { account },\n  } = useSession();\n  const { logError, trackEventGA4 } = useContext(AppConfig);\n\n  const {\n    handleSubmit,\n    register,\n    watch,\n    setValue,\n    clearErrors,\n    formState: { errors },\n    control,\n  } = useForm<EmailFormData>({\n    resolver: yupResolver(schemaEmailSearchForm),\n    defaultValues: {\n      email: '',\n    },\n  });\n\n  const email = watch('email');\n\n  const handleClearEmail = useCallback(() => {\n    setValue('email', '');\n    clearErrors('email');\n  }, [setValue, clearErrors]);\n\n  const emailQuery = useMutation<\n    SearchReportResponseData,\n    Error,\n    EmailSearchParams\n  >({\n    mutationFn: emailSearch,\n    onSuccess: (data, variables) => {\n      onSearchSuccess &&\n        onSearchSuccess({\n          permalink: data.report.permalink,\n          reportType: 'email',\n          searchParams: `email=${encodeURIComponent(variables.email)}`,\n        });\n    },\n    onError: (error) => {\n      logError('Email Search', error);\n    },\n  });\n\n  const onEmailSearchSubmit = useCallback(\n    ({ email }: { email: string }) => {\n      if (!searchFormsRecyclingValidation(account)) return;\n\n      trackEventGA4({\n        event_name: 'report_search',\n        report_type: 'email',\n        search_by: 'email',\n        search_from: `${placement}_search`,\n      });\n\n      emailQuery.mutate({ email });\n    },\n    [account, trackEventGA4, emailQuery]\n  );\n\n  const renderMobileForm = useCallback(() => {\n    return (\n      <Grid container sx={{ mt: 2.5, mb: 2.5 }} gap={3}>\n        <EmailSearchFieldContainer className={errors.email ? 'error' : ''}>\n          <EmailInput\n            register={register}\n            placeholder={placeholderText}\n            errors={errors}\n            clearErrors={(field?: string) => clearErrors(field as 'email')}\n            onClear={handleClearEmail}\n            value={email}\n            control={control}\n          />\n        </EmailSearchFieldContainer>\n\n        <SearchButton type=\"submit\" fullWidth>\n          Search\n        </SearchButton>\n      </Grid>\n    );\n  }, [register, placeholderText, email, errors, clearErrors, handleClearEmail]);\n\n  const renderDesktopForm = useCallback(() => {\n    return (\n      <EmailFormContainer>\n        <Box flexGrow={1}>\n          <EmailSearchFieldContainer\n            container\n            className={errors.email ? 'error' : ''}\n          >\n            <Grid item xs={12} sx={{ display: 'flex', alignItems: 'center' }}>\n              <EmailInput\n                register={register}\n                placeholder={placeholderText}\n                errors={errors}\n                clearErrors={(field?: string) => clearErrors(field as 'email')}\n                onClear={handleClearEmail}\n                value={email}\n                control={control}\n              />\n            </Grid>\n          </EmailSearchFieldContainer>\n        </Box>\n        <SearchButton type=\"submit\">Search</SearchButton>\n      </EmailFormContainer>\n    );\n  }, [register, placeholderText, email, errors, clearErrors, handleClearEmail]);\n\n  return (\n    <form onSubmit={handleSubmit(onEmailSearchSubmit)}>\n      {isMobile ? renderMobileForm() : renderDesktopForm()}\n    </form>\n  );\n};", "import { Box, Grid, styled } from '@ltvco/refresh-lib/theme';\n\nexport const VehicleSearchFieldContainer = styled(Grid)(({ theme }) => ({\n  height: '58px',\n  display: 'flex',\n  alignItems: 'center',\n  border: `1px solid ${theme.palette.text.disabled}`,\n  borderRadius: '32px',\n  backgroundColor: theme.palette.background.paper,\n  width: '100%',\n  margin: theme.spacing(4, 0),\n\n  '&:focus-within': {\n    borderColor: theme.palette.primary.main,\n  },\n\n  '&.error': {\n    borderColor: theme.palette.error.main,\n  },\n\n  [theme.breakpoints.down('sm')]: {\n    margin: 0,\n  },\n}));\n\nexport const VehicleFormContainer = styled(Box)(({ theme }) => ({\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  gap: theme.spacing(2),\n}));\n\nexport const IntegratedSearchContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  width: '100%',\n  alignItems: 'center',\n  borderRadius: '32px',\n  flexDirection: 'row',\n  overflow: 'hidden',\n  backgroundColor: theme.palette.common.white,\n}));\n\nexport const StyledSelectInputContainer = styled(Box)(({ theme }) => ({\n  width: '100%',\n  textAlign: 'right',\n\n  '& .MuiFormControl-root': {\n    width: '100%',\n    borderLeft: `1px solid ${theme.palette.divider}`,\n\n    [theme.breakpoints.down('sm')]: {\n      borderLeft: 'none',\n    },\n  },\n\n  '& .MuiOutlinedInput-root': {\n    borderRadius: '0 32px 32px 0',\n    textAlign: 'left',\n\n    [theme.breakpoints.down('sm')]: {\n      borderRadius: '32px',\n    },\n  },\n\n  '& .MuiSelect-select': {\n    backgroundColor: theme.palette.background.paper,\n\n    [theme.breakpoints.down('sm')]: {\n      borderRadius: '32px',\n    },\n  },\n}));\n\nexport const VehicleInputsErrorTextPositionWrapper = styled(Box)(\n  ({ theme }) => ({\n    '& .error .MuiTypography-root': {\n      left: '8px',\n\n      [theme.breakpoints.down('sm')]: {\n        left: '32px',\n      },\n    },\n  })\n);\n\nexport const YMMSelectInputWrapper = styled(Grid)(({ theme }) => ({\n  borderLeft: `1px solid ${theme.palette.divider}`,\n\n  '&.MuiGrid-item': {\n    paddingLeft: 0,\n  },\n}));", "import React, { useMemo, useState } from 'react';\nimport {\n  FieldErrors,\n  UseFormRegister,\n  UseFormSetValue,\n  Control,\n  UseFormTrigger,\n  UseFormClearErrors,\n} from '@ltvco/refresh-lib/vendors';\nimport { Box, Button } from '@ltvco/refresh-lib/theme';\nimport { WhereIsMyVINModal } from '@ltvco/refresh-lib/v2';\nimport { HelpOutline } from '@mui/icons-material';\nimport { SearchInput } from '../SearchInput';\nimport { VehicleFormData } from './utils';\nimport {\n  VehicleInputsErrorTextPositionWrapper,\n  VehicleSearchFieldContainer,\n} from './components';\n\ninterface VINSearchInputProps {\n  placeholderText: string;\n  register: UseFormRegister<VehicleFormData>;\n  errors: FieldErrors<VehicleFormData>;\n  clearErrors: UseFormClearErrors<VehicleFormData>;\n  setValue: UseFormSetValue<VehicleFormData>;\n  control: Control<VehicleFormData>;\n  trigger: UseFormTrigger<VehicleFormData>;\n  value: string;\n  onSubmit?: () => void;\n  isMobile: boolean;\n}\n\nexport const VINSearchInput = React.memo(\n  ({\n    placeholderText,\n    register,\n    errors,\n    clearErrors,\n    setValue,\n    control,\n    trigger,\n    value,\n    onSubmit,\n    isMobile,\n  }: VINSearchInputProps) => {\n    const registerReturn = register('vin', { required: 'VIN is required' });\n    const [vinValue, setVinValue] = useState(value);\n    const [isVINModalOpen, setIsVINModalOpen] = useState(false);\n\n    const handleClear = () => {\n      setValue('vin', '');\n      clearErrors('vin');\n      setVinValue('');\n    };\n\n    const handleCustomChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n      field: { onChange: (value: string) => void }\n    ) => {\n      // Strip out non-alphanumeric characters and convert to uppercase\n      const sanitizedValue = e.target.value\n        .replace(/[^a-zA-Z0-9]/g, '')\n        .toUpperCase();\n      field.onChange(sanitizedValue);\n      setValue('vin', sanitizedValue);\n      setVinValue(sanitizedValue);\n    };\n\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter' && onSubmit) {\n        e.preventDefault();\n        trigger().then((isValid) => {\n          if (isValid) {\n            onSubmit();\n          }\n        });\n      }\n    };\n\n    const SearchInputComponent = () => {\n      return (\n        <VehicleInputsErrorTextPositionWrapper sx={{ width: '100%' }}>\n          <SearchInput\n            registerReturn={registerReturn}\n            label=\"\"\n            placeholder={placeholderText}\n            error={errors.vin}\n            clearErrors={clearErrors as unknown as (field?: string) => void}\n            onClear={handleClear}\n            value={vinValue}\n            fieldName=\"vin\"\n            control={control as unknown as Control}\n            autoFocus={true}\n            inputProps={{\n              maxLength: 17,\n              onKeyDown: handleKeyDown,\n            }}\n            InputProps={{\n              endAdornment: (\n                <Button\n                  variant=\"text\"\n                  onClick={() => setIsVINModalOpen(true)}\n                  sx={{\n                    color: 'text.secondary',\n                    '&:hover': { bgcolor: 'transparent' },\n                  }}\n                  disableRipple\n                >\n                  <HelpOutline sx={{ fontSize: 20 }} />\n                </Button>\n              ),\n            }}\n            customOnChange={handleCustomChange}\n          />\n        </VehicleInputsErrorTextPositionWrapper>\n      );\n    };\n\n    const errorClassName = useMemo(() => {\n      return Object.keys(errors).length > 0 ? 'error' : '';\n    }, [errors]);\n\n    return (\n      <>\n        <Box sx={{ width: '100%' }}>\n          {isMobile ? (\n            <VehicleSearchFieldContainer className={errorClassName}>\n              <SearchInputComponent />\n            </VehicleSearchFieldContainer>\n          ) : (\n            <SearchInputComponent />\n          )}\n        </Box>\n        <WhereIsMyVINModal\n          isOpen={isVINModalOpen}\n          handleClose={() => {\n            setIsVINModalOpen(false);\n          }}\n        />\n      </>\n    );\n  }\n);\n", "import { namesMatch } from '@ltvco/refresh-lib/utils';\nimport { searchReport } from '@ltvco/refresh-lib/v1';\nimport { yupResolver } from '@ltvco/refresh-lib/vendors';\nimport * as yup from 'yup';\n\nexport type VehicleSearchRequestBody = {\n  report_type: 'vehicle_report';\n  meta: {\n    vin?: string;\n    tag?: string;\n    year?: string;\n    make?: string;\n    model?: string;\n    trim?: string;\n    licensePlate?: string;\n    state?: string;\n    report_flags: unknown[];\n  };\n};\n\nexport interface SearchParams {\n  tag?: string;\n  vin?: string;\n  make?: string;\n  model?: string;\n  trim?: string;\n  year?: string;\n  licensePlate?: string;\n  state?: string;\n  ddPlan?: string;\n}\n\nexport interface VehicleFormData {\n  vin: string;\n  licensePlate: string;\n  state: string;\n  year: string;\n  make: string;\n  model: string;\n  trim: string;\n  searchType: VehicleSearchType;\n}\n\nexport enum VehicleSearchType {\n  VIN = 'VIN',\n  LICENSE_PLATE = 'LICENSE_PLATE',\n  YEAR_MAKE_MODEL = 'YEAR_MAKE_MODEL',\n}\n\nconst STANDARD_VIN_LENGTH = 17;\nconst MIN_NON_STANDARD_VIN_LENGTH = 5;\nconst MAX_NON_STANDARD_VIN_LENGTH = 16;\nconst ALPHANUMERIC_REGEX = new RegExp('^[a-zA-Z0-9]+$');\nconst VIN_VALIDATION_REGEX = new RegExp(\n  '^[A-HJ-NPR-Z0-9]{8}[0-9xX][A-HJ-NPR-Z0-9]{8}$'\n);\nconst LICENSE_PLATE_VALIDATION_REGEX = new RegExp(\n  '^(?=.*[a-zA-Z0-9])[a-zA-Z0-9-]{1,10}$'\n);\n\nexport const searchTypeOptions = [\n  { value: VehicleSearchType.VIN, label: 'VIN' },\n  { value: VehicleSearchType.LICENSE_PLATE, label: 'License Plate' },\n  { value: VehicleSearchType.YEAR_MAKE_MODEL, label: 'Year, Make, Model' },\n];\n\nexport const getPlaceholderTextForVehicleSearch = (\n  searchType: VehicleSearchType,\n  isMobile: boolean\n) => {\n  switch (searchType) {\n    case VehicleSearchType.VIN:\n      return isMobile ? 'VIN Number' : 'e.g. 1g1ze51234567';\n    case VehicleSearchType.LICENSE_PLATE:\n      return isMobile ? 'License Plate' : 'e.g. 12345';\n    case VehicleSearchType.YEAR_MAKE_MODEL:\n      return '';\n    default:\n      return 'Enter vehicle information';\n  }\n};\n\nexport const schemaVinSearchForm = yup\n  .object({\n    vin: yup\n      .string()\n      .required(\"We'll need a valid VIN to do a search.\")\n      .max(17)\n      .test(\n        'vin-validation',\n        \"We'll need a valid VIN to do a search.\",\n        (value) => {\n          return isValidVIN(value);\n        }\n      ),\n  })\n  .required();\n\nexport const schemaPlateSearchForm = yup\n  .object({\n    licensePlate: yup\n      .string()\n      .required(\"We'll need a valid License Plate to do a search.\")\n      .max(10)\n      .test(\n        'license-plate-validation',\n        \"We'll need a valid License Plate to do a search.\",\n        (value) => {\n          return isValidLicensePlate(value);\n        }\n      ),\n    state: yup.string().nullable().max(2).required('Select a state.'),\n  })\n  .required();\n\nexport const schemaYmmSearchForm = yup\n  .object({\n    year: yup.string().required('Select a valid year.'),\n    make: yup.string().required('Select a valid make.'),\n    model: yup.string().required('Select a valid model.'),\n    trim: yup.string().required('Select a valid trim.'),\n  })\n  .required();\n\n// Get resolver based on search type\nexport const getResolver = (searchType: VehicleSearchType) => {\n  switch (searchType) {\n    case VehicleSearchType.VIN:\n      return yupResolver(schemaVinSearchForm);\n    case VehicleSearchType.LICENSE_PLATE:\n      return yupResolver(schemaPlateSearchForm);\n    case VehicleSearchType.YEAR_MAKE_MODEL:\n      return yupResolver(schemaYmmSearchForm);\n  }\n};\n\n// Utility function for states\nexport const getAbbrStatesAsArray = (): string[] => {\n  return [\n    'All',\n    'AL',\n    'AK',\n    'AZ',\n    'AR',\n    'CA',\n    'CO',\n    'CT',\n    'DE',\n    'FL',\n    'GA',\n    'HI',\n    'ID',\n    'IL',\n    'IN',\n    'IA',\n    'KS',\n    'KY',\n    'LA',\n    'ME',\n    'MD',\n    'MA',\n    'MI',\n    'MN',\n    'MS',\n    'MO',\n    'MT',\n    'NE',\n    'NV',\n    'NH',\n    'NJ',\n    'NM',\n    'NY',\n    'NC',\n    'ND',\n    'OH',\n    'OK',\n    'OR',\n    'PA',\n    'RI',\n    'SC',\n    'SD',\n    'TN',\n    'TX',\n    'UT',\n    'VT',\n    'VA',\n    'WA',\n    'WV',\n    'WI',\n    'WY',\n    'DC',\n  ];\n};\n\nexport async function vehicleSearch(searchParams: SearchParams) {\n  const { vin, tag, make, year, trim, model, licensePlate, state, ddPlan } =\n    searchParams;\n  const body: VehicleSearchRequestBody = {\n    report_type: 'vehicle_report',\n    meta: {\n      report_flags: ddPlan ? [`dd_plan%3D${ddPlan}`] : [],\n      ...(vin && { vin }),\n      ...(tag && { tag }),\n      ...(trim && { trim }),\n      ...(make && year && model && { make, year, model }),\n      ...(licensePlate && state && { license_plate: licensePlate, state }),\n    },\n  };\n\n  return await searchReport(body);\n}\n\n// Utility functions for Year, Make, Model, Trim\nexport interface Make {\n  id: string;\n  name: string;\n  models: { id: string; name: string; trims: { id: string; name: string }[] }[];\n}\n\nexport function getYears() {\n  const years = [];\n  const startYear = 1980;\n  let nextYear = new Date().getFullYear() + 1;\n  while (nextYear >= startYear) {\n    years.push((nextYear--).toString());\n  }\n  return years;\n}\n\nexport function getMakes(makesObj: Make[]): string[] {\n  return makesObj.map((make) => {\n    return make.name;\n  });\n}\n\nexport function getModels(makeName: string, makes: Make[]): string[] {\n  if (makes && makeName) {\n    const make = makes.find((make) => namesMatch(make.name, makeName));\n    if (make && make.models) {\n      return make.models.map((model) => {\n        return model.name;\n      });\n    }\n  }\n  return [];\n}\n\nexport function getVehicleTrims(\n  makeName: string,\n  modelName: string,\n  makes: Make[]\n): string[] {\n  if (makes && makeName && modelName) {\n    const make = makes.find((make) => namesMatch(make.name, makeName));\n    if (make && make.models) {\n      const model = make.models.find((model) =>\n        namesMatch(model.name, modelName)\n      );\n      if (model && model.trims) {\n        return model.trims.map((trim) => {\n          return trim.name;\n        });\n      }\n    }\n  }\n  return [];\n}\n\nfunction checkDigitCheck(vin: string): boolean {\n  const transliteration: { [key: string]: number } = {\n    A: 1,\n    B: 2,\n    C: 3,\n    D: 4,\n    E: 5,\n    F: 6,\n    G: 7,\n    H: 8,\n    J: 1,\n    K: 2,\n    L: 3,\n    M: 4,\n    N: 5,\n    P: 7,\n    R: 9,\n    S: 2,\n    T: 3,\n    U: 4,\n    V: 5,\n    W: 6,\n    X: 7,\n    Y: 8,\n    Z: 9,\n    1: 1,\n    2: 2,\n    3: 3,\n    4: 4,\n    5: 5,\n    6: 6,\n    7: 7,\n    8: 8,\n    9: 9,\n    0: 0,\n  };\n\n  const weights = [8, 7, 6, 5, 4, 3, 2, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2];\n\n  const chars = vin.split('');\n  const product = chars.reduce((total, char, index) => {\n    return total + transliteration[char] * weights[index];\n  }, 0);\n\n  let expectedCheckDigit: number | 'X' = product % 11;\n  if (expectedCheckDigit === 10) {\n    expectedCheckDigit = 'X';\n  }\n\n  return expectedCheckDigit.toString() === chars[8];\n}\n\nexport function isValidVIN(input: string | undefined): boolean {\n  if (input) {\n    input = input.toUpperCase().trim();\n\n    // Standard VINs\n    if (input.length === STANDARD_VIN_LENGTH) {\n      return VIN_VALIDATION_REGEX.test(input) && checkDigitCheck(input);\n    }\n\n    // Non-standard VINs\n    if (\n      input.length >= MIN_NON_STANDARD_VIN_LENGTH &&\n      input.length <= MAX_NON_STANDARD_VIN_LENGTH\n    ) {\n      return ALPHANUMERIC_REGEX.test(input);\n    }\n\n    return false;\n  }\n\n  return false;\n}\n\nexport function isValidLicensePlate(input: string | undefined): boolean {\n  if (input) {\n    input = input.toUpperCase().trim();\n    return LICENSE_PLATE_VALIDATION_REGEX.test(input);\n  }\n\n  return false;\n}", "import React, { useState, useEffect } from 'react';\nimport {\n  FieldErrors,\n  UseFormClearErrors,\n  UseFormRegister,\n  UseFormSetValue,\n  Control,\n  UseFormTrigger,\n  useQuery,\n} from '@ltvco/refresh-lib/vendors';\nimport { Box, Grid } from '@ltvco/refresh-lib/theme';\nimport {\n  getYears,\n  getMakes,\n  getModels,\n  getVehicleTrims,\n  VehicleFormData,\n} from './utils';\nimport { SelectInput } from '../SelectInput';\nimport { vehicleSelections } from '@ltvco/refresh-lib/v1';\nimport {\n  StyledSelectInputContainer,\n  VehicleInputsErrorTextPositionWrapper,\n  VehicleSearchFieldContainer,\n  YMMSelectInputWrapper,\n} from './components';\nimport { VehicleSelection } from '@ltvco/refresh-lib/v1';\nimport { withErrorHandling } from '../hoc/withErrorHandling';\nimport { composeHOC } from '../hoc';\n\ninterface YMMSearchInputProps {\n  register: UseFormRegister<VehicleFormData>;\n  errors: FieldErrors<VehicleFormData>;\n  clearErrors: UseFormClearErrors<VehicleFormData>;\n  setValue: UseFormSetValue<VehicleFormData>;\n  control: Control<VehicleFormData>;\n  trigger: UseFormTrigger<VehicleFormData>;\n  yearValue: string;\n  makeValue: string;\n  modelValue: string;\n  trimValue: string;\n  onSubmit?: () => void;\n  isMobile?: boolean;\n}\n\ntype YMMPossibleFieldNames = 'year' | 'make' | 'model' | 'trim';\n\nexport const YMMSearchInput = React.memo(\n  ({\n    register,\n    errors,\n    clearErrors,\n    setValue,\n    control,\n    trigger,\n    yearValue,\n    makeValue,\n    modelValue,\n    trimValue,\n    onSubmit,\n    isMobile = false,\n  }: YMMSearchInputProps) => {\n    const years = getYears();\n    const [customYearValue, setCustomYearValue] = useState(yearValue);\n    const [customMakeValue, setCustomMakeValue] = useState(makeValue);\n    const [customModelValue, setCustomModelValue] = useState(modelValue);\n    const [customTrimValue, setCustomTrimValue] = useState(trimValue);\n    const [makes, setMakes] = useState<string[]>([]);\n    const [models, setModels] = useState<string[]>([]);\n    const [trims, setTrims] = useState<string[]>([]);\n    const [makesObj, setMakesObj] = useState<any[]>([]);\n    const [selectedMake, setSelectedMake] = useState(makeValue);\n    const [selectedModel, setSelectedModel] = useState(modelValue);\n    const [prioritizedError, setPrioritizedError] = useState<{\n      field: string;\n      message: string;\n    } | null>(null);\n\n    const { data } = useQuery<VehicleSelection>({\n      queryKey: ['vehicleSelections'],\n      queryFn: () => vehicleSelections(),\n    });\n\n    // Determine the most important error to display\n    useEffect(() => {\n      if (errors) {\n        if (errors.year) {\n          setPrioritizedError({\n            field: 'year',\n            message: errors.year.message || 'Year is required',\n          });\n        } else if (errors.make) {\n          setPrioritizedError({\n            field: 'make',\n            message: errors.make.message || 'Make is required',\n          });\n        } else if (errors.model) {\n          setPrioritizedError({\n            field: 'model',\n            message: errors.model.message || 'Model is required',\n          });\n        } else if (errors.trim) {\n          setPrioritizedError({\n            field: 'trim',\n            message: errors.trim.message || 'Trim is required',\n          });\n        } else {\n          setPrioritizedError(null);\n        }\n      } else {\n        setPrioritizedError(null);\n      }\n    }, [errors]);\n\n    useEffect(() => {\n      if (data?.selections) {\n        const { selections } = data;\n        setMakesObj(selections.makes);\n        setMakes(getMakes(selections.makes));\n      }\n    }, [data]);\n\n    useEffect(() => {\n      setModels(getModels(selectedMake, makesObj));\n      clearErrors('model');\n    }, [selectedMake, clearErrors, makesObj]);\n\n    useEffect(() => {\n      setTrims(getVehicleTrims(selectedMake, selectedModel, makesObj));\n    }, [selectedModel, makesObj, selectedMake]);\n\n    const clearAllErrors = () => {\n      clearErrors('year');\n      clearErrors('make');\n      clearErrors('model');\n      clearErrors('trim');\n      setPrioritizedError(null);\n    };\n\n    const handleOptionChange = (\n      value: string,\n      field: YMMPossibleFieldNames\n    ) => {\n      setValue(field, value);\n      clearErrors(field);\n\n      if (field === 'year') {\n        setCustomYearValue(value);\n        clearAllErrors();\n      }\n\n      if (field === 'make') {\n        setCustomMakeValue(value);\n        setSelectedMake(value);\n\n        setCustomModelValue('');\n        setValue('model', '');\n        setCustomTrimValue('');\n        setValue('trim', '');\n      }\n\n      if (field === 'model') {\n        setCustomModelValue(value);\n        setSelectedModel(value);\n\n        setCustomTrimValue('');\n        setValue('trim', '');\n      }\n\n      if (field === 'trim') {\n        setCustomTrimValue(value);\n      }\n    };\n\n    const EnhancedSelectInput = composeHOC(withErrorHandling)(SelectInput);\n\n    const yearsOptions = years.map((year) => ({ value: year, label: year }));\n\n    const YearSelectInput = () => {\n      return (\n        <StyledSelectInputContainer>\n          <EnhancedSelectInput\n            options={[{ value: '', label: 'Year' }, ...yearsOptions]}\n            value={customYearValue}\n            onChange={(value: string) => handleOptionChange(value, 'year')}\n            name=\"year\"\n            control={control}\n            defaultOptionValue={''}\n            error={\n              prioritizedError?.field === 'year'\n                ? { message: prioritizedError.message }\n                : undefined\n            }\n          />\n        </StyledSelectInputContainer>\n      );\n    };\n\n    const makesOptions = makes.map((make) => ({ value: make, label: make }));\n\n    const MakeSelectInput = () => {\n      return (\n        <StyledSelectInputContainer>\n          <EnhancedSelectInput\n            options={[{ value: '', label: 'Make' }, ...makesOptions]}\n            value={customMakeValue}\n            onChange={(value: string) => handleOptionChange(value, 'make')}\n            name=\"make\"\n            control={control}\n            defaultOptionValue={''}\n            error={\n              prioritizedError?.field === 'make'\n                ? { message: prioritizedError.message }\n                : undefined\n            }\n          />\n        </StyledSelectInputContainer>\n      );\n    };\n\n    const modelsOptions = models.map((model) => ({\n      value: model,\n      label: model,\n    }));\n\n    const ModelSelectInput = ({ disabled }: { disabled: boolean }) => {\n      return (\n        <StyledSelectInputContainer>\n          <EnhancedSelectInput\n            options={[{ value: '', label: 'Model' }, ...modelsOptions]}\n            value={customModelValue}\n            onChange={(value: string) => handleOptionChange(value, 'model')}\n            name=\"model\"\n            control={control}\n            defaultOptionValue={''}\n            disabled={disabled}\n            error={\n              prioritizedError?.field === 'model'\n                ? { message: prioritizedError.message }\n                : undefined\n            }\n          />\n        </StyledSelectInputContainer>\n      );\n    };\n\n    const trimsOptions = trims.map((trim) => ({ value: trim, label: trim }));\n\n    const TrimSelectInput = ({ disabled }: { disabled: boolean }) => {\n      return (\n        <StyledSelectInputContainer>\n          <EnhancedSelectInput\n            options={[{ value: '', label: 'Trim' }, ...trimsOptions]}\n            value={customTrimValue}\n            onChange={(value: string) => handleOptionChange(value, 'trim')}\n            name=\"trim\"\n            control={control}\n            defaultOptionValue={''}\n            disabled={disabled}\n            error={\n              prioritizedError?.field === 'trim'\n                ? { message: prioritizedError.message }\n                : undefined\n            }\n          />\n        </StyledSelectInputContainer>\n      );\n    };\n\n    const isModelDisabled = customMakeValue === '';\n    const isTrimDisabled = customMakeValue === '' || customModelValue === '';\n\n    const renderMobileInputs = () => {\n      const errorClassName = Object.keys(errors).length > 0 ? 'error' : '';\n\n      return (\n        <Grid container spacing={2} gap={1} flexDirection={'column'}>\n          <Grid item xs={12}>\n            <VehicleInputsErrorTextPositionWrapper>\n              <VehicleSearchFieldContainer\n                className={\n                  prioritizedError?.field === 'year' ? errorClassName : ''\n                }\n              >\n                <YearSelectInput />\n              </VehicleSearchFieldContainer>\n            </VehicleInputsErrorTextPositionWrapper>\n          </Grid>\n\n          <Grid item xs={12}>\n            <VehicleInputsErrorTextPositionWrapper>\n              <VehicleSearchFieldContainer\n                className={\n                  prioritizedError?.field === 'make' ? errorClassName : ''\n                }\n              >\n                <MakeSelectInput />\n              </VehicleSearchFieldContainer>\n            </VehicleInputsErrorTextPositionWrapper>\n          </Grid>\n\n          <Grid item xs={12}>\n            <VehicleInputsErrorTextPositionWrapper>\n              <VehicleSearchFieldContainer\n                className={\n                  prioritizedError?.field === 'model' ? errorClassName : ''\n                }\n              >\n                <ModelSelectInput disabled={isModelDisabled} />\n              </VehicleSearchFieldContainer>\n            </VehicleInputsErrorTextPositionWrapper>\n          </Grid>\n\n          <Grid item xs={12}>\n            <VehicleInputsErrorTextPositionWrapper>\n              <VehicleSearchFieldContainer\n                className={\n                  prioritizedError?.field === 'trim' ? errorClassName : ''\n                }\n              >\n                <TrimSelectInput disabled={isTrimDisabled} />\n              </VehicleSearchFieldContainer>\n            </VehicleInputsErrorTextPositionWrapper>\n          </Grid>\n        </Grid>\n      );\n    };\n\n    const renderDesktopInputs = () => {\n      return (\n        <VehicleInputsErrorTextPositionWrapper>\n          <Grid\n            container\n            spacing={1}\n            gap={0}\n            flexDirection={'row'}\n            className=\"ymm-search-container\"\n          >\n            <YMMSelectInputWrapper item xs={12} sm={3}>\n              <YearSelectInput />\n            </YMMSelectInputWrapper>\n\n            <YMMSelectInputWrapper item xs={12} sm={3}>\n              <MakeSelectInput />\n            </YMMSelectInputWrapper>\n\n            <YMMSelectInputWrapper item xs={12} sm={3}>\n              <ModelSelectInput disabled={isModelDisabled} />\n            </YMMSelectInputWrapper>\n\n            <YMMSelectInputWrapper item xs={12} sm={3}>\n              <TrimSelectInput disabled={isTrimDisabled} />\n            </YMMSelectInputWrapper>\n          </Grid>\n        </VehicleInputsErrorTextPositionWrapper>\n      );\n    };\n\n    return (\n      <Box sx={{ width: '100%' }}>\n        {isMobile ? renderMobileInputs() : renderDesktopInputs()}\n      </Box>\n    );\n  }\n);", "import React, { useCallback, useState } from 'react';\nimport {\n  FieldErrors,\n  UseFormRegister,\n  UseFormSetValue,\n  Control,\n  UseFormTrigger,\n  UseFormClearErrors,\n} from '@ltvco/refresh-lib/vendors';\nimport { Box, Grid } from '@ltvco/refresh-lib/theme';\nimport { SearchInput } from '../SearchInput';\nimport { getAbbrStatesAsArray } from './utils';\nimport { VehicleFormData } from './utils';\nimport { SelectInput } from '../SelectInput';\nimport {\n  StyledSelectInputContainer,\n  VehicleInputsErrorTextPositionWrapper,\n  VehicleSearchFieldContainer,\n} from './components';\n\ninterface LicensePlateSearchInputProps {\n  placeholderText: string;\n  register: UseFormRegister<VehicleFormData>;\n  errors: FieldErrors<VehicleFormData>;\n  clearErrors: UseFormClearErrors<VehicleFormData>;\n  setValue: UseFormSetValue<VehicleFormData>;\n  control: Control<VehicleFormData>;\n  trigger: UseFormTrigger<VehicleFormData>;\n  value: string;\n  stateValue: string;\n  onSubmit?: () => void;\n  isMobile?: boolean;\n}\n\nexport const LicensePlateSearchInput = React.memo(\n  ({\n    placeholderText,\n    register,\n    errors,\n    clearErrors,\n    setValue,\n    control,\n    trigger,\n    value,\n    stateValue,\n    onSubmit,\n    isMobile = false,\n  }: LicensePlateSearchInputProps) => {\n    const states = getAbbrStatesAsArray();\n    const registerReturn = register('licensePlate');\n    const [licensePlateValue, setLicensePlateValue] = useState(value);\n\n    const handleClear = () => {\n      setValue('licensePlate', '');\n      clearErrors('licensePlate');\n      setLicensePlateValue('');\n    };\n\n    const handleCustomChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n      field: { onChange: (value: string) => void }\n    ) => {\n      const sanitizedValue = e.target.value.toUpperCase();\n      field.onChange(sanitizedValue);\n      setValue('licensePlate', sanitizedValue);\n      setLicensePlateValue(sanitizedValue);\n    };\n\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter' && onSubmit) {\n        e.preventDefault();\n        trigger().then((isValid) => {\n          if (isValid) {\n            onSubmit();\n          }\n        });\n      }\n    };\n\n    const handleSearchTypeChange = (value: string) => {\n      setValue('state', value === 'All' ? '' : value);\n      clearErrors('state');\n    };\n\n    const options = states.map((state) => ({\n      label: state === 'All' ? 'State' : state,\n      value: state,\n    }));\n\n    const renderMobileInputs = () => {\n      const errorClassName = Object.keys(errors).length > 0 ? 'error' : '';\n\n      return (\n        <Grid container spacing={2} gap={1} flexDirection={'column'}>\n          <Grid item xs={12}>\n            <VehicleSearchFieldContainer className={errorClassName}>\n              {<SearchInputComponent />}\n            </VehicleSearchFieldContainer>\n          </Grid>\n\n          <Grid item xs={12}>\n            <VehicleSearchFieldContainer>\n              {<StateSelectInput />}\n            </VehicleSearchFieldContainer>\n          </Grid>\n        </Grid>\n      );\n    };\n\n    const renderDesktopInputs = () => {\n      return (\n        <Grid container spacing={1} gap={0} flexDirection={'row'}>\n          <Grid item xs={12} sm={9}>\n            {<SearchInputComponent />}\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            {<StateSelectInput />}\n          </Grid>\n        </Grid>\n      );\n    };\n\n    const SearchInputComponent = useCallback(() => {\n      return (\n        <VehicleInputsErrorTextPositionWrapper sx={{ width: '100%' }}>\n          <SearchInput\n            className=\"license-plate-search-input\"\n            registerReturn={registerReturn}\n            label=\"\"\n            placeholder={placeholderText}\n            error={errors.licensePlate}\n            clearErrors={clearErrors as unknown as (field?: string) => void}\n            onClear={handleClear}\n            value={licensePlateValue}\n            fieldName=\"licensePlate\"\n            control={control as unknown as Control}\n            inputProps={{\n              maxLength: 10,\n              onKeyDown: handleKeyDown,\n            }}\n            customOnChange={handleCustomChange}\n            autoFocus\n          />\n        </VehicleInputsErrorTextPositionWrapper>\n      );\n    }, [\n      registerReturn,\n      errors.licensePlate,\n      clearErrors,\n      licensePlateValue,\n      handleClear,\n      handleKeyDown,\n      handleCustomChange,\n      placeholderText,\n    ]);\n\n    const StateSelectInput = () => {\n      return (\n        <StyledSelectInputContainer\n          sx={{\n            '& .MuiFormControl-root': {\n              minWidth: '108px',\n            },\n          }}\n        >\n          <SelectInput\n            options={options}\n            value={stateValue}\n            onChange={handleSearchTypeChange}\n            name=\"state\"\n            control={control}\n            defaultOptionValue={'All'}\n          />\n        </StyledSelectInputContainer>\n      );\n    };\n\n    return (\n      <Box sx={{ width: '100%' }}>\n        {isMobile ? renderMobileInputs() : renderDesktopInputs()}\n      </Box>\n    );\n  }\n);\n", "import React, { useCallback, useContext, useState } from 'react';\nimport { Box, Grid } from '@ltvco/refresh-lib/theme';\nimport { useForm, useMutation } from '@ltvco/refresh-lib/vendors';\nimport { searchFormsRecyclingValidation } from '@ltvco/refresh-lib/utils';\nimport { AppConfig } from '@ltvco/refresh-lib/ctx';\nimport { SearchReportResponseData, useSession } from '@ltvco/refresh-lib/v1';\nimport { SelectInput } from '../SelectInput';\nimport { SearchButton } from '../components';\nimport { VINSearchInput } from './VINSearchInput';\nimport { YMMSearchInput } from './YMMSearchInput';\nimport { LicensePlateSearchInput } from './LicensePlateSearchInput';\nimport {\n  VehicleFormData,\n  VehicleSearchType,\n  searchTypeOptions,\n  getResolver,\n  vehicleSearch,\n  SearchParams,\n  getPlaceholderTextForVehicleSearch,\n} from './utils';\nimport {\n  VehicleSearchFieldContainer,\n  VehicleFormContainer,\n  IntegratedSearchContainer,\n} from './components';\nimport { SearchProps } from '../utils';\n\nexport const VehicleSearch = React.memo(\n  ({\n    onSearchSuccess,\n    isMobile = false,\n    placement = 'dashboard',\n  }: SearchProps) => {\n    const {\n      session: { account },\n    } = useSession();\n    const { logError, trackEventGA4 } = useContext(AppConfig);\n    const [searchType, setSearchType] = useState<VehicleSearchType>(\n      VehicleSearchType.VIN\n    );\n    const [customPlaceholderText, setCustomPlaceholderText] = useState(\n      getPlaceholderTextForVehicleSearch(VehicleSearchType.VIN, isMobile)\n    );\n    const searchFrom = `${placement}_search`;\n\n    const {\n      handleSubmit,\n      control,\n      formState: { errors },\n      setValue,\n      setError,\n      clearErrors,\n      watch,\n      trigger,\n      register,\n      reset,\n    } = useForm<VehicleFormData>({\n      resolver: getResolver(searchType),\n      defaultValues: {\n        vin: '',\n        licensePlate: '',\n        state: 'All',\n        year: '',\n        make: '',\n        model: '',\n        trim: '',\n        searchType: VehicleSearchType.VIN,\n      },\n    });\n\n    const vehicleQuery = useMutation<\n      SearchReportResponseData,\n      Error,\n      SearchParams\n    >({\n      mutationFn: vehicleSearch,\n      onSuccess: (data) => {\n        onSearchSuccess &&\n          onSearchSuccess({\n            permalink: data.report.permalink,\n            reportType: 'vehicle',\n            searchParams: '',\n          });\n      },\n      onError: (error) => {\n        logError('Vehicle Search', error);\n\n        if (searchType === VehicleSearchType.VIN) {\n          setError('vin', {\n            message: 'We could not find any information for this VIN',\n          });\n        } else if (searchType === VehicleSearchType.LICENSE_PLATE) {\n          setError('licensePlate', {\n            message: 'We could not find any information for this license plate',\n          });\n        } else if (searchType === VehicleSearchType.YEAR_MAKE_MODEL) {\n          if (!yearValue) {\n            setError('year', { message: 'Year is required' });\n          } else if (!makeValue) {\n            setError('make', { message: 'Make is required' });\n          } else if (!modelValue) {\n            setError('model', { message: 'Model is required' });\n          } else if (!trimValue) {\n            setError('trim', { message: 'Trim is required' });\n          }\n        }\n      },\n    });\n\n    const vinValue = watch('vin');\n    const licensePlateValue = watch('licensePlate');\n    const stateValue = watch('state');\n    const yearValue = watch('year');\n    const makeValue = watch('make');\n    const modelValue = watch('model');\n    const trimValue = watch('trim');\n\n    const handleSearchTypeChange = useCallback(\n      (value: string) => {\n        const searchTypeValue = value as VehicleSearchType;\n        setSearchType(searchTypeValue);\n        setCustomPlaceholderText(\n          getPlaceholderTextForVehicleSearch(searchTypeValue, isMobile)\n        );\n        reset({\n          vin: '',\n          licensePlate: '',\n          state: 'All',\n          year: '',\n          make: '',\n          model: '',\n          trim: '',\n          searchType: searchTypeValue,\n        });\n        clearErrors();\n      },\n      [setValue, clearErrors, reset, isMobile]\n    );\n\n    const validateYMMFields = () => {\n      if (!yearValue) {\n        setError('year', { message: 'Year is required' });\n        return false;\n      }\n\n      if (!makeValue) {\n        setError('make', { message: 'Make is required' });\n        return false;\n      }\n\n      if (!modelValue) {\n        setError('model', { message: 'Model is required' });\n        return false;\n      }\n\n      return true;\n    };\n\n    const handleVINSearch = useCallback(\n      (data: VehicleFormData) => {\n        if (!searchFormsRecyclingValidation(account)) return;\n\n        trackEventGA4({\n          event_name: 'report_search',\n          report_type: 'vehicle',\n          search_by: 'vin',\n          search_from: searchFrom,\n        });\n\n        vehicleQuery.mutate({ vin: data.vin });\n      },\n      [account, vehicleQuery, trackEventGA4, searchFrom]\n    );\n\n    const handleLicensePlateSearch = useCallback(\n      (data: VehicleFormData) => {\n        if (!searchFormsRecyclingValidation(account)) return;\n\n        trackEventGA4({\n          event_name: 'report_search',\n          report_type: 'vehicle',\n          search_by: 'license_plate',\n          search_from: searchFrom,\n        });\n\n        vehicleQuery.mutate({\n          licensePlate: data.licensePlate,\n          state: data.state,\n        });\n      },\n      [account, vehicleQuery, trackEventGA4, searchFrom]\n    );\n\n    const handleYMMSearch = useCallback(\n      (data: VehicleFormData) => {\n        if (!searchFormsRecyclingValidation(account)) return;\n\n        if (!validateYMMFields()) {\n          return;\n        }\n\n        trackEventGA4({\n          event_name: 'report_search',\n          report_type: 'vehicle',\n          search_by: 'year_make_model',\n          search_from: searchFrom,\n        });\n\n        vehicleQuery.mutate({\n          year: data.year,\n          make: data.make,\n          model: data.model,\n          trim: data.trim || '',\n        });\n      },\n      [account, vehicleQuery, trackEventGA4, searchFrom]\n    );\n\n    const onVehicleSearchSubmit = (data: VehicleFormData) => {\n      switch (searchType) {\n        case VehicleSearchType.VIN:\n          handleVINSearch(data);\n          break;\n        case VehicleSearchType.LICENSE_PLATE:\n          handleLicensePlateSearch(data);\n          break;\n        case VehicleSearchType.YEAR_MAKE_MODEL:\n          handleYMMSearch(data);\n          break;\n      }\n    };\n\n    const renderSearchInput = () => {\n      switch (searchType) {\n        case VehicleSearchType.VIN:\n          return (\n            <VINSearchInput\n              placeholderText={customPlaceholderText}\n              register={register}\n              errors={errors}\n              clearErrors={clearErrors}\n              setValue={setValue}\n              control={control}\n              trigger={trigger}\n              value={vinValue}\n              onSubmit={handleSubmit(onVehicleSearchSubmit)}\n              isMobile={isMobile}\n            />\n          );\n        case VehicleSearchType.LICENSE_PLATE:\n          return (\n            <LicensePlateSearchInput\n              placeholderText={customPlaceholderText}\n              register={register}\n              errors={errors}\n              clearErrors={clearErrors}\n              setValue={setValue}\n              control={control}\n              trigger={trigger}\n              value={licensePlateValue}\n              stateValue={stateValue}\n              onSubmit={handleSubmit(onVehicleSearchSubmit)}\n              isMobile={isMobile}\n            />\n          );\n        case VehicleSearchType.YEAR_MAKE_MODEL:\n          return (\n            <YMMSearchInput\n              register={register}\n              errors={errors}\n              clearErrors={clearErrors}\n              setValue={setValue}\n              control={control}\n              trigger={trigger}\n              yearValue={yearValue}\n              makeValue={makeValue}\n              modelValue={modelValue}\n              trimValue={trimValue}\n              onSubmit={handleSubmit(onVehicleSearchSubmit)}\n              isMobile={isMobile}\n            />\n          );\n        default:\n          return null;\n      }\n    };\n\n    const renderMobileForm = useCallback(() => {\n      return (\n        <Grid container sx={{ mt: 2.5, mb: 2.5 }} gap={3}>\n          <VehicleSearchFieldContainer>\n            <SelectInput\n              options={searchTypeOptions}\n              value={searchType}\n              onChange={handleSearchTypeChange}\n              name=\"searchType\"\n              control={control}\n            />\n          </VehicleSearchFieldContainer>\n\n          <Box flexGrow={1}>{renderSearchInput()}</Box>\n\n          <SearchButton type=\"submit\" fullWidth>\n            Search\n          </SearchButton>\n        </Grid>\n      );\n    }, [searchType, errors, handleSearchTypeChange, control]);\n\n    const renderDesktopForm = useCallback(() => {\n      return (\n        <VehicleFormContainer>\n          <Box flexGrow={1}>\n            <VehicleSearchFieldContainer\n              container\n              className={Object.keys(errors).length > 0 ? 'error' : ''}\n            >\n              <Grid\n                item\n                xs={12}\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  position: 'relative',\n                }}\n              >\n                <IntegratedSearchContainer>\n                  <Box\n                    sx={{\n                      '& .MuiFormControl-root': {\n                        minWidth: '190px',\n                      },\n                    }}\n                  >\n                    <SelectInput\n                      options={searchTypeOptions}\n                      value={searchType}\n                      onChange={handleSearchTypeChange}\n                      name=\"searchType\"\n                      control={control}\n                    />\n                  </Box>\n\n                  {renderSearchInput()}\n                </IntegratedSearchContainer>\n              </Grid>\n            </VehicleSearchFieldContainer>\n          </Box>\n          <SearchButton type=\"submit\">Search</SearchButton>\n        </VehicleFormContainer>\n      );\n    }, [searchType, errors, handleSearchTypeChange, control]);\n\n    return (\n      <form onSubmit={handleSubmit(onVehicleSearchSubmit)}>\n        {isMobile ? renderMobileForm() : renderDesktopForm()}\n      </form>\n    );\n  }\n);\n", "import React, { ReactElement } from 'react';\nimport { SearchData } from '@ltvco/refresh-lib/v1';\nimport { Link } from '@ltvco/refresh-lib/theme';\nimport { PersonRounded } from '@mui/icons-material/';\nimport PhoneFilled from '@mui/icons-material/Phone';\nimport HomeFilled from '@mui/icons-material/Home';\nimport EmailFilled from '@mui/icons-material/Email';\nimport AlternateEmailFilled from '@mui/icons-material/AlternateEmail';\nimport DriveEtaFilled from '@mui/icons-material/DriveEta';\nimport { PersonSearch } from './Person/PersonSearch';\nimport { PropertySearch } from './Property/PropertySearch';\nimport { PhoneSearch } from './Phone/PhoneSearch';\nimport { UsernameSearch } from './Username/UsernameSearch';\nimport { EmailSearch } from './Email/EmailSearch';\nimport { VehicleSearch } from './Vehicle/VehicleSearch';\nimport { StyledSubheaderText } from './components';\n\nexport interface SearchTabType {\n  id: string;\n  displayName: string;\n  icon: React.ReactElement;\n  subheaderText: string;\n}\n\nexport interface SearchProps {\n  isMobile: boolean;\n  placeholderText: string;\n  onSearchSuccess: (data: SearchData) => void;\n  placement: string;\n}\n\nexport interface SubheaderTextProps {\n  subheaderText: string;\n  isVehicleTab?: boolean;\n  setIsVINModalOpen?: (isOpen: boolean) => void;\n}\n\nexport const decorateSearchTabs = (searchTabs: any): SearchTabType[] => {\n  const subHeaderTextByTab = {\n    peopleTab:\n      'Use the last known city or state where a person resided to help narrow results.',\n    phoneTab:\n      'Enter a phone number to search for a possible owner, associated address, carrier details, photos, additional contact info and much more.',\n    propertyTab:\n      'Enter a full property address to access ownership details, deed records, tax history, and more.',\n    emailTab:\n      'Enter an email address to search for a possible owner, photos, social networks and more.',\n    usernameTab:\n      'Enter a username or social media profile to see information about the potential owner.',\n    vehicleTab:\n      'Search by VIN, License Plate, or Make to get a full vehicle history report.',\n  };\n\n  const iconByTab = {\n    peopleTab: <PersonRounded fontSize=\"small\" />,\n    phoneTab: <PhoneFilled fontSize=\"small\" />,\n    propertyTab: <HomeFilled fontSize=\"small\" />,\n    emailTab: <EmailFilled fontSize=\"small\" />,\n    usernameTab: <AlternateEmailFilled fontSize=\"small\" />,\n    vehicleTab: <DriveEtaFilled fontSize=\"small\" />,\n  };\n\n  return searchTabs.map((tab: any) => ({\n    id: tab.id,\n    displayName: tab.displayName,\n    icon: iconByTab[tab.id as keyof typeof iconByTab],\n    subheaderText:\n      subHeaderTextByTab[tab.id as keyof typeof subHeaderTextByTab],\n  }));\n};\n\nexport const getPlaceholderText = (\n  activeTab: string,\n  isMobile?: boolean\n): string => {\n  const placeholderText = {\n    peopleTab: 'e.g. John Smith in New York, NY Age 45',\n    phoneTab: 'e.g. (123)456-7890 ',\n    propertyTab: 'e.g. 123 Main St. New York, NY',\n    emailTab: 'e.g. jsmith@example.com',\n    usernameTab: 'e.g. beenverified',\n    vehicleTab: 'e.g. 1g1ze51234567',\n  };\n\n  const placeholderTextMobile = {\n    peopleTab: 'Person',\n    phoneTab: 'Phone',\n    propertyTab: 'Property',\n    emailTab: 'Email',\n    usernameTab: 'Username',\n    vehicleTab: 'VIN',\n  };\n\n  const placeholderMap = isMobile ? placeholderTextMobile : placeholderText;\n  return placeholderMap[activeTab as keyof typeof placeholderMap];\n};\n\nexport const handleFormSubmit = (\n  event: React.FormEvent,\n  searchValue: string,\n  activeTab: string,\n  onSearchSuccess: (data: SearchData) => void\n) => {\n  event.preventDefault();\n\n  if (!searchValue.trim()) {\n    return;\n  }\n\n  // This will be replaced with actual API call implementation\n  // Mock success data for testing\n  const mockData = {\n    reportType: activeTab,\n    searchParams: `query=${encodeURIComponent(searchValue)}`,\n    permalink: 'permalink1',\n  };\n\n  onSearchSuccess(mockData);\n};\n\nexport const renderSearchForm = (\n  activeTab: string = '',\n  placeholderText: string,\n  onSearchSuccess: (data: SearchData) => void,\n  placement: string = 'dashboard',\n  isMobile: boolean\n): ReactElement | null => {\n  if (activeTab === 'peopleTab') {\n    return (\n      <PersonSearch\n        placement={placement}\n        isMobile={isMobile}\n        placeholderText={placeholderText}\n        onSearchSuccess={onSearchSuccess}\n      />\n    );\n  }\n\n  if (activeTab === 'propertyTab') {\n    return (\n      <PropertySearch\n        placement={placement}\n        isMobile={isMobile}\n        placeholderText={placeholderText}\n        onSearchSuccess={onSearchSuccess}\n      />\n    );\n  }\n\n  if (activeTab === 'phoneTab') {\n    return (\n      <PhoneSearch\n        placement={placement}\n        isMobile={isMobile}\n        placeholderText={placeholderText}\n        onSearchSuccess={onSearchSuccess}\n      />\n    );\n  }\n\n  if (activeTab === 'usernameTab') {\n    return (\n      <UsernameSearch\n        placement={placement}\n        isMobile={isMobile}\n        placeholderText={placeholderText}\n        onSearchSuccess={onSearchSuccess}\n      />\n    );\n  }\n\n  if (activeTab === 'emailTab') {\n    return (\n      <EmailSearch\n        placement={placement}\n        isMobile={isMobile}\n        placeholderText={placeholderText}\n        onSearchSuccess={onSearchSuccess}\n      />\n    );\n  }\n\n  if (activeTab === 'vehicleTab') {\n    return (\n      <VehicleSearch\n        placement={placement}\n        isMobile={isMobile}\n        placeholderText={placeholderText}\n        onSearchSuccess={onSearchSuccess}\n      />\n    );\n  }\n\n  return null;\n};\n\nexport const SubheaderText = ({\n  subheaderText,\n  isVehicleTab,\n  setIsVINModalOpen,\n}: SubheaderTextProps) => {\n  if (isVehicleTab && setIsVINModalOpen) {\n    return (\n      <StyledSubheaderText variant=\"body2\">\n        {subheaderText}{' '}\n        <Link\n          style={{\n            cursor: 'pointer',\n            color: 'inherit',\n            textDecorationColor: 'inherit',\n          }}\n          onClick={() => setIsVINModalOpen(true)}\n        >\n          Where\n        </Link>{' '}\n        can I find my VIN?\n      </StyledSubheaderText>\n    );\n  }\n\n  return (\n    <StyledSubheaderText variant=\"body2\">{subheaderText}</StyledSubheaderText>\n  );\n};\n", "import React, { useState, useEffect } from 'react';\nimport { Grid, Stack } from '@ltvco/refresh-lib/theme';\nimport { FcraWarning, SearchData } from '@ltvco/refresh-lib/v1';\nimport { WhereIsMyVINModal } from '@ltvco/refresh-lib/v2';\nimport { useAppConstantsContext } from '@ltvco/refresh-lib/ctx';\nimport {\n  DisclaimerText,\n  HeaderText,\n  SearchHubContainer,\n  StyledTabDesktop,\n  StyledTabsDesktop,\n} from './components';\nimport {\n  SearchTabType,\n  getPlaceholderText,\n  renderSearchForm,\n  SubheaderText,\n} from './utils';\n\ninterface DesktopSearchHubProps {\n  onSearchSuccess: (data: SearchData) => void;\n  placement?: string;\n  searchTabs: SearchTabType[];\n  activeTab?: string;\n  handleTabChange?: (event: React.SyntheticEvent, newValue: string) => void;\n}\n\nexport const DesktopSearchHub: React.FC<DesktopSearchHubProps> = ({\n  onSearchSuccess,\n  placement = 'dashboard',\n  searchTabs,\n  activeTab,\n  handleTabChange,\n}) => {\n  const [placeholderText, setPlaceholderText] = useState<string>('');\n  const [subheaderText, setSubheaderText] = useState<string>('');\n  const [isVINModalOpen, setIsVINModalOpen] = useState<boolean>(false);\n  const {\n    data: { brandName },\n    links: { fcraLink, tosLink },\n  } = useAppConstantsContext();\n  const displayDisclaimer = activeTab === 'peopleTab';\n  const isVehicleTab = activeTab === 'vehicleTab';\n\n  useEffect(() => {\n    if (searchTabs.length > 0) {\n      updateTabContent(activeTab, searchTabs);\n    }\n  }, [activeTab, searchTabs]);\n\n  const updateTabContent = (tabId: string = '', tabs: SearchTabType[]) => {\n    const activeTabData = tabs.find((tab) => tab.id === tabId);\n    if (activeTabData) {\n      setSubheaderText(activeTabData.subheaderText);\n      setPlaceholderText(getPlaceholderText(tabId));\n    }\n  };\n\n  return (\n    <SearchHubContainer>\n      <HeaderText variant=\"h1\">What will you search for?</HeaderText>\n      <SubheaderText\n        subheaderText={subheaderText}\n        isVehicleTab={isVehicleTab}\n        setIsVINModalOpen={setIsVINModalOpen}\n      />\n\n      <Stack direction=\"column\" justifyContent=\"center\">\n        <Grid container justifyContent=\"center\">\n          <Grid item xs={12}>\n            <StyledTabsDesktop\n              value={activeTab}\n              onChange={handleTabChange}\n              variant=\"scrollable\"\n              scrollButtons=\"auto\"\n              centered\n            >\n              {searchTabs.map((tab) => (\n                <StyledTabDesktop\n                  key={tab.id}\n                  value={tab.id}\n                  label={tab.displayName}\n                  icon={tab.icon}\n                  iconPosition=\"start\"\n                />\n              ))}\n            </StyledTabsDesktop>\n          </Grid>\n        </Grid>\n\n        {renderSearchForm(\n          activeTab,\n          placeholderText,\n          onSearchSuccess,\n          placement,\n          false\n        )}\n      </Stack>\n\n      {displayDisclaimer && (\n        <DisclaimerText>\n          <FcraWarning\n            fcraLink={fcraLink}\n            tosLink={tosLink}\n            brandName={brandName}\n          />\n        </DisclaimerText>\n      )}\n\n      <WhereIsMyVINModal\n        isOpen={isVINModalOpen}\n        handleClose={() => {\n          setIsVINModalOpen(false);\n        }}\n      />\n    </SearchHubContainer>\n  );\n};", "import React, { useState, useEffect } from 'react';\nimport { Stack, Box } from '@ltvco/refresh-lib/theme';\nimport { FcraWarning, SearchData } from '@ltvco/refresh-lib/v1';\nimport { WhereIsMyVINModal } from '@ltvco/refresh-lib/v2';\nimport { useAppConstantsContext } from '@ltvco/refresh-lib/ctx';\nimport {\n  DisclaimerText,\n  HeaderText,\n  SearchHubContainer,\n  StyledTabMobile,\n  StyledTabsMobile,\n} from './components';\nimport {\n  SearchTabType,\n  getPlaceholderText,\n  renderSearchForm,\n  SubheaderText,\n} from './utils';\n\ninterface MobileSearchHubProps {\n  onSearchSuccess: (data: SearchData) => void;\n  placement?: string;\n  searchTabs: SearchTabType[];\n  activeTab?: string;\n  handleTabChange?: (event: React.SyntheticEvent, newValue: string) => void;\n}\n\nexport const MobileSearchHub: React.FC<MobileSearchHubProps> = ({\n  onSearchSuccess,\n  placement = 'dashboard',\n  searchTabs,\n  activeTab,\n  handleTabChange,\n}) => {\n  const [placeholderText, setPlaceholderText] = useState<string>('');\n  const [subheaderText, setSubheaderText] = useState<string>('');\n  const [isVINModalOpen, setIsVINModalOpen] = useState<boolean>(false);\n  const {\n    data: { brandName },\n    links: { fcraLink, tosLink },\n  } = useAppConstantsContext();\n  const displayDisclaimer = activeTab === 'peopleTab';\n  const isVehicleTab = activeTab === 'vehicleTab';\n\n  useEffect(() => {\n    if (searchTabs.length > 0) {\n      updateTabContent(activeTab, searchTabs);\n    }\n  }, [activeTab, searchTabs]);\n\n  const updateTabContent = (tabId: string = '', tabs: SearchTabType[]) => {\n    const activeTabData = tabs.find((tab) => tab.id === tabId);\n    if (activeTabData) {\n      setSubheaderText(activeTabData.subheaderText);\n      setPlaceholderText(getPlaceholderText(tabId, true));\n    }\n  };\n\n  const tabDisplayName = (displayName: string) => {\n    if (displayName.toLocaleLowerCase() === 'people') {\n      return 'Person';\n    }\n\n    return displayName;\n  };\n\n  return (\n    <Stack spacing={2} mx={0} my={1.5}>\n      <SearchHubContainer>\n        <HeaderText variant=\"h1\">What will you search for?</HeaderText>\n\n        <Box sx={{ width: '100%' }}>\n          <StyledTabsMobile\n            value={activeTab}\n            onChange={handleTabChange}\n            variant=\"fullWidth\"\n            scrollButtons={false}\n            TabIndicatorProps={{ style: { display: 'none' } }}\n          >\n            {searchTabs.map((tab) => (\n              <StyledTabMobile\n                key={tab.id}\n                value={tab.id}\n                label={tabDisplayName(tab.displayName)}\n                icon={tab.icon}\n                disableRipple\n              />\n            ))}\n          </StyledTabsMobile>\n        </Box>\n\n        {renderSearchForm(\n          activeTab,\n          placeholderText,\n          onSearchSuccess,\n          placement,\n          true\n        )}\n\n        <SubheaderText\n          subheaderText={subheaderText}\n          isVehicleTab={isVehicleTab}\n          setIsVINModalOpen={setIsVINModalOpen}\n        />\n      </SearchHubContainer>\n\n      {displayDisclaimer && (\n        <DisclaimerText>\n          <FcraWarning\n            fcraLink={fcraLink}\n            tosLink={tosLink}\n            brandName={brandName}\n          />\n        </DisclaimerText>\n      )}\n\n      <WhereIsMyVINModal\n        isOpen={isVINModalOpen}\n        handleClose={() => {\n          setIsVINModalOpen(false);\n        }}\n      />\n    </Stack>\n  );\n};", "import { useScreenSize } from '@ltvco/refresh-lib/utils';\nimport { SearchData } from '@ltvco/refresh-lib/v1';\nimport { DesktopSearchHub } from './Desktop';\nimport { MobileSearchHub } from './Mobile';\nimport { SearchTabType } from './utils';\n\ninterface SearchHubVariationProps {\n  onSearchSuccess: (data: SearchData) => void;\n  placement?: string;\n  searchTabs: SearchTabType[];\n  activeTab?: string;\n  handleTabChange?: (event: React.SyntheticEvent, newValue: string) => void;\n}\n\nexport const SearchHubVariation: React.FC<SearchHubVariationProps> = (\n  props\n) => {\n  const { isMobile } = useScreenSize();\n\n  return isMobile ? (\n    <MobileSearchHub {...props} />\n  ) : (\n    <DesktopSearchHub {...props} />\n  );\n};\n\nexport { DesktopSearchHub } from './Desktop';\nexport { MobileSearchHub } from './Mobile';\nexport * from './components';\nexport * from './utils';\n", "import { Box, Divider, Tab, Tabs, useTheme } from '@ltvco/refresh-lib/theme';\nimport { useScreenSize } from '@ltvco/refresh-lib/utils';\nimport { SearchData } from '@ltvco/refresh-lib/v1';\nimport { useFeatureIsOn } from '@ltvco/refresh-lib/vendors';\nimport {\n  MobileTabsToggle,\n  SearchFormsContainer,\n  useSearchFormContext,\n} from '@ltvco/refresh-lib/v2';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { SearchHubVariation, decorateSearchTabs } from './variation';\n\ntype SearchHubProps = {\n  searchFrom?: string;\n};\n\nexport const SearchHub = ({ searchFrom }: SearchHubProps) => {\n  const { useSearchForm } = useSearchFormContext();\n  const theme = useTheme();\n  const {\n    handleOpenFormContainer,\n    searchTabs,\n    activeFormTab,\n    handleTabChange,\n    setActiveFormTab,\n  } = useSearchForm(true);\n  const isInStreamlinedTestVariant = useFeatureIsOn('prop-2958');\n\n  const navigate = useNavigate();\n  const handleSearchSuccess = ({\n    reportType,\n    searchParams,\n    permalink,\n  }: SearchData) => {\n    const url = `/report/${reportType}?${searchParams}&permalink=${permalink}`;\n    navigate(url);\n  };\n  const { isTablet } = useScreenSize();\n  const handleTabClick = (tabId: string) => {\n    setActiveFormTab(tabId);\n  };\n\n  if (isInStreamlinedTestVariant) {\n    const variationSearchTabs = decorateSearchTabs(searchTabs);\n\n    return (\n      <SearchHubVariation\n        onSearchSuccess={handleSearchSuccess}\n        placement={'dashboard'}\n        searchTabs={variationSearchTabs}\n        activeTab={activeFormTab}\n        handleTabChange={handleTabChange}\n      />\n    );\n  }\n\n  return (\n    <Box\n      bgcolor=\"background.default\"\n      borderRadius={2}\n      border=\"1px solid\"\n      borderColor=\"divider\"\n    >\n      {!isTablet && (\n        <>\n          <Tabs\n            value={activeFormTab}\n            onChange={handleTabChange}\n            TabIndicatorProps={{\n              sx: {\n                top: 60,\n                backgroundColor: 'text.primary',\n              },\n            }}\n            centered\n          >\n            {searchTabs.map((tab) => (\n              <Tab\n                disableRipple\n                label={tab.displayName}\n                key={tab.id}\n                value={tab.id}\n                icon={React.cloneElement(tab.icon, {\n                  color: theme.palette.text.primary,\n                })}\n                iconPosition=\"start\"\n                onClick={() => handleTabClick(tab.id)}\n                sx={{\n                  color: 'text.primary',\n                  '&.Mui-selected': { color: 'text.primary' },\n                }}\n              />\n            ))}\n          </Tabs>\n          <Divider sx={{ position: 'relative', top: -10 }} />\n        </>\n      )}\n      {isTablet && (\n        <Box bgcolor=\"background.paper\">\n          <MobileTabsToggle\n            activeTab={activeFormTab}\n            tabs={searchTabs}\n            handleTabChange={handleTabChange}\n          />\n        </Box>\n      )}\n      <SearchFormsContainer\n        activeTab={activeFormTab}\n        searchTabs={searchTabs}\n        onSearchSuccess={handleSearchSuccess}\n        closeForm={handleOpenFormContainer}\n        searchFrom={searchFrom}\n        placement={'dashboard'}\n      />\n    </Box>\n  );\n};\n", "import { Stack, Button, Text } from '@ltvco/refresh-lib/theme';\nimport { publish } from '@ltvco/refresh-lib';\nimport { SearchReport } from 'icons';\n\nexport function NullState() {\n  return (\n    <Stack spacing={3.5}>\n      <Stack spacing={1}>\n        <Text variant=\"body2\" fontWeight=\"bold\">\n          No reports found\n        </Text>\n        <Stack spacing={0.5}>\n          <Text variant=\"body2\">You haven't viewed any reports yet.</Text>\n          <Text variant=\"body2\">\n            Start exploring by using the search bar above to find and view\n            reports.\n          </Text>\n          <Text variant=\"body2\">\n            Once you've viewed a report, it will appear here for easy access in\n            the future.\n          </Text>\n        </Stack>\n      </Stack>\n      <Stack\n        direction={{ md: 'row', xs: 'column' }}\n        width=\"100%\"\n        justifyContent={{ md: 'space-between' }}\n        spacing={{ xs: 1.5 }}\n        alignItems=\"center\"\n        border=\"1px solid #DDDDDD\"\n        borderRadius={4}\n        paddingBlock={{ md: 0.5, xs: 1.5 }}\n        paddingTop={{ xs: 0.5 }}\n        paddingInline={1.5}\n      >\n        <Stack\n          direction={{ md: 'row', xs: 'column' }}\n          width=\"100%\"\n          spacing={2.5}\n          alignItems=\"center\"\n        >\n          <SearchReport sx={{ fontSize: '7.25rem' }} />\n          <Stack spacing={1}>\n            <Text variant=\"body2\" fontWeight=\"bold\">\n              Tips to get started:\n            </Text>\n            <Stack spacing={0.5} paddingLeft={0.5}>\n              <Text>\n                <Text component=\"span\" marginRight={1}>\n                  •\n                </Text>\n                <Text variant=\"body2\" component=\"span\">\n                  Use specific keywords related to the report you're looking\n                  for.\n                </Text>\n              </Text>\n              <Text>\n                <Text component=\"span\" marginRight={1}>\n                  •\n                </Text>\n                <Text variant=\"body2\" component=\"span\">\n                  Try adding filters to narrow down results.\n                </Text>\n              </Text>\n              <Text>\n                <Text component=\"span\" marginRight={1}>\n                  •\n                </Text>\n                <Text variant=\"body2\" component=\"span\">\n                  Browse through categories to discover new reports.\n                </Text>\n              </Text>\n            </Stack>\n          </Stack>\n        </Stack>\n        <Button\n          variant=\"contained\"\n          sx={{\n            height: 46,\n            minWidth: 115,\n            fontWeight: 'bold',\n            paddingInline: 1.75,\n            paddingBlock: 1.5,\n          }}\n          onClick={() => publish('openPersonSearch')}\n        >\n          Search now\n        </Button>\n      </Stack>\n    </Stack>\n  );\n}\n", "import {\n  QueryParams,\n  FilterTypeOption,\n  ReportFilter,\n  SortBy,\n  SortDirection,\n  SearchComponent,\n  FiltersComponent,\n  SortComponent,\n} from '@ltvco/refresh-lib/v2';\nimport { Stack } from '@ltvco/refresh-lib/theme';\n\ntype SearchAndFilterControlsProps = {\n  queryParams: QueryParams;\n  setQueryParams: any;\n  reportTypeFilterOptions: { [key: string]: FilterTypeOption };\n  filterTypes: ReportFilter[];\n  setFilterTypes: (reportTypes: ReportFilter[]) => void;\n  sort_by: SortBy;\n  sort_direction: SortDirection;\n};\n\nexport function SearchAndFilterControls({\n  queryParams,\n  setQueryParams,\n  reportTypeFilterOptions,\n  filterTypes,\n  setFilterTypes,\n  sort_by,\n  sort_direction,\n}: SearchAndFilterControlsProps) {\n  return (\n    <Stack direction={{ xl: 'row', xs: 'column' }} spacing={1.5}>\n      <SearchComponent\n        queryParams={queryParams}\n        setQueryParams={setQueryParams}\n      />\n      <Stack direction=\"row\" spacing={1.5}>\n        <FiltersComponent\n          reportTypeOptions={reportTypeFilterOptions}\n          reportTypes={filterTypes}\n          setReportTypes={setFilterTypes}\n        />\n        <SortComponent\n          currentSort={{ sort_by, sort_direction }}\n          setQueryParams={setQueryParams}\n        />\n      </Stack>\n    </Stack>\n  );\n}\n", "import { Box, LoadingReportCard } from '@ltvco/refresh-lib/theme';\n\nexport function LoadingReports() {\n  return (\n    <Box mt={2.5}>\n      <LoadingReportCard />\n      <LoadingReportCard />\n      <LoadingReportCard />\n    </Box>\n  );\n}\n", "import { Divider, Text, Stack } from '@ltvco/refresh-lib/theme';\nimport { useScreenSize } from '@ltvco/refresh-lib/utils';\n\ninterface DescriptionDatesProps {\n  isOnDashboard: boolean;\n  updatedDate: string;\n  createdDate: string;\n  lastViewedDate: string;\n}\n\nexport const DescriptionDates = ({\n  isOnDashboard,\n  updatedDate,\n  createdDate,\n  lastViewedDate,\n}: DescriptionDatesProps) => {\n  const { isMobile } = useScreenSize();\n  const textVariant = isMobile ? 'body2' : undefined;\n\n  if (isOnDashboard) {\n    return (\n      <Stack direction=\"column\" spacing={1}>\n        <Stack direction=\"row\" spacing={1}>\n          <Text variant={textVariant}>Updated {updatedDate}</Text>\n        </Stack>\n        <Stack direction=\"row\" spacing={1}>\n          <Text variant={textVariant}>Created {createdDate}</Text>\n        </Stack>\n      </Stack>\n    );\n  }\n  return (\n    <Stack direction=\"row\" spacing={1}>\n      <Text variant={textVariant}>Updated {updatedDate}</Text>\n      <Divider\n        orientation=\"vertical\"\n        flexItem\n        sx={{ borderColor: 'text.secondary' }}\n      />\n      <Text variant={textVariant}>Created {createdDate}</Text>\n      <Divider\n        orientation=\"vertical\"\n        flexItem\n        sx={{ borderColor: 'text.secondary' }}\n      />\n      <Text variant={textVariant}>Viewed {lastViewedDate}</Text>\n    </Stack>\n  );\n};\n", "import { Text } from '@ltvco/refresh-lib/theme';\n\ntype PropertySizeDisplayProps = {\n  details?: {\n    square_footage?: number;\n    beds?: number;\n    baths?: number;\n  };\n};\n\nexport const PropertySizeDisplay: React.FC<PropertySizeDisplayProps> = ({\n  details,\n}) => {\n  if (!details) return null;\n\n  const displayParts: string[] = [];\n\n  // Add square footage if truthy\n  if (details.square_footage) {\n    displayParts.push(`${details.square_footage} sq ft`);\n  }\n\n  // Add beds and baths together only if both are truthy\n  if (details.beds && details.baths) {\n    displayParts.push(\n      `${details.beds} bed${details.beds > 1 ? 's' : ''} and ${\n        details.baths\n      } bath${details.baths > 1 ? 's' : ''}`\n    );\n  }\n\n  // Return null if no truthy values\n  if (displayParts.length === 0) return null;\n\n  return <Text>{displayParts.join(' | ')}</Text>;\n};\n", "import type { Session } from '@ltvco/refresh-lib/v1';\nimport type { RecentReportSerialized } from '@ltvco/refresh-lib/v2';\n\nexport function hasRunReports({ session }: { session: Session }) {\n  const retentionInfo = session?.account?.account?.retention_info;\n  if (retentionInfo) {\n    return (\n      retentionInfo.ran_email_search ||\n      retentionInfo.ran_people_search ||\n      retentionInfo.ran_property_search ||\n      retentionInfo.ran_reverse_phone_search ||\n      retentionInfo.ran_username_search ||\n      retentionInfo.ran_vehicle_search\n    );\n  }\n\n  return false;\n}\n\nexport function generateReportSubtitle(\n  report: RecentReportSerialized,\n  reportType: string,\n  isInDataVariation: boolean\n): string {\n  let subtitle = report.detailsCityState || '';\n\n  if (reportType === 'vehicle') {\n    subtitle = report.reportData;\n  }\n\n  if (reportType === 'phone') {\n    if (report.firstName && report.lastName && report.detailsCityState) {\n      subtitle = `${report.firstName} ${report.lastName} - ${report.detailsCityState}`;\n    } else if (report.firstName && report.lastName) {\n      subtitle = `${report.firstName} ${report.lastName}`;\n    }\n  }\n\n  if (isInDataVariation) {\n    if (reportType === 'person') {\n      const address = report.details.address;\n      if (address && typeof address === 'string') {\n        subtitle = address;\n      }\n    } else if (reportType === 'contact pro' && report.details.location) {\n      subtitle += `, ${report.details.location}`;\n    }\n  }\n\n  return subtitle;\n}\n", "import { Stack, Text } from '@ltvco/refresh-lib/theme';\nimport {\n  ListAction,\n  MenuItem,\n  MonitorAction,\n  MoreAction,\n  PdfAction,\n  RecentReportSerialized,\n  SaveAction,\n  RECENT_REPORTS_DATA_MATCHER,\n} from '@ltvco/refresh-lib/v2';\nimport { DescriptionDates } from './DescriptionDates';\nimport { useFeatureIsOn } from '@ltvco/refresh-lib/vendors';\nimport { PropertySizeDisplay } from './PropertySizeDisplay';\nimport { generateReportSubtitle } from '../utils';\n\ntype RecentReportsCardDescriptionProps = {\n  report: RecentReportSerialized;\n  deleteCurrentReport: (permalink: string) => void;\n  hideRats?: boolean;\n  isOnDashboard?: boolean;\n};\n\nconst hidePDFReportTypes = [\n  'username',\n  'obituary',\n  'unclaimed money',\n  'ancestor',\n];\n\nconst hideNotesReportTypes = ['unclaimed money'];\n\nconst fraudReportTypes = [\n  'phone fraud',\n  'email fraud',\n  'ip fraud',\n  'url fraud',\n];\n\nexport const RecentReportsCardDescription: React.FC<\n  RecentReportsCardDescriptionProps\n> = ({\n  report,\n  deleteCurrentReport,\n  hideRats = false,\n  isOnDashboard = false,\n}) => {\n  const { reportTypeFormatted, id: reportPermaLink, reportData } = report;\n  const reportType = reportTypeFormatted.toLowerCase();\n  const hidePDF =\n    fraudReportTypes.includes(reportType.toLocaleLowerCase()) ||\n    hidePDFReportTypes.includes(reportType.toLocaleLowerCase());\n  const hideNotes = hideNotesReportTypes.includes(\n    reportType.toLocaleLowerCase()\n  );\n\n  const isInDataVariation = useFeatureIsOn('OAR-1540');\n\n  const shouldShowPropertySizeData =\n    reportType === 'property' && isInDataVariation;\n\n  const subtitle = generateReportSubtitle(\n    report,\n    reportType,\n    isInDataVariation\n  );\n  const isInListV2Variation = useFeatureIsOn('prop-2834');\n\n  const filterMenuItems = (items: MenuItem[]) => {\n    return items.filter(\n      (item) =>\n        (item.display === 'Notes' && !hideNotes) || item.display === 'Delete'\n    );\n  };\n\n  const hideMonitorForMultiState =\n    reportType === 'unclaimed money' && reportPermaLink.length > 54;\n\n  const buildReportDataForListV2 = () => {\n    const matcher = RECENT_REPORTS_DATA_MATCHER[reportType];\n    if (matcher) {\n      return matcher(report);\n    }\n  };\n\n  return (\n    <Stack spacing={1}>\n      <Stack spacing={0.5}>\n        {subtitle && <Text>{subtitle}</Text>}\n        {shouldShowPropertySizeData && (\n          <PropertySizeDisplay details={report.details} />\n        )}\n        <Text>{report.reportTypeFormatted} Report</Text>\n        <DescriptionDates\n          updatedDate={report.updatedDate}\n          createdDate={report.createdDate}\n          isOnDashboard={isOnDashboard}\n          lastViewedDate={report.lastViewedDate}\n        />\n      </Stack>\n      <Stack direction=\"row\" spacing={1} ml={'-7px !important'}>\n        {!hideRats && (\n          <>\n            <SaveAction\n              reportPermaLink={reportPermaLink}\n              onReportCard\n              disableCollapse\n              reportType={reportType}\n              section=\"recent_reports_rats\"\n              eventName=\"feature_engagement\"\n              reportDataForListV2={\n                isInListV2Variation ? buildReportDataForListV2() : null\n              }\n            />\n            {reportType !== 'username' && !hideMonitorForMultiState && (\n              <MonitorAction\n                reportPermaLink={reportPermaLink}\n                reportType={reportType}\n                onReportCard\n                disableCollapse\n                section=\"recent_reports_rats\"\n                eventName=\"feature_engagement\"\n              />\n            )}\n            <ListAction\n              reportTitle={\n                reportTypeFormatted.toLowerCase() === 'vehicle' &&\n                report.detailsCityState\n                  ? report.detailsCityState\n                  : reportData\n              }\n              reportPermalink={reportPermaLink}\n              onReportCard\n              disableCollapse\n              reportType={reportType}\n              section=\"recent_reports_rats\"\n              eventName=\"feature_engagement\"\n              reportDataForListV2={\n                isInListV2Variation ? buildReportDataForListV2() : null\n              }\n            />\n            {!hidePDF && (\n              <PdfAction\n                reportPermalink={reportPermaLink}\n                onReportCard\n                disableCollapse\n                reportType={reportType}\n                section=\"recent_reports_rats\"\n                eventName=\"feature_engagement\"\n              />\n            )}\n            <MoreAction\n              filterMenuItems={filterMenuItems}\n              deleteCurrentReport={deleteCurrentReport as () => void}\n              reportPermaLink={reportPermaLink}\n              reportType={reportType}\n              onReportCard\n              disableCollapse\n              section=\"recent_reports_rats\"\n              eventName=\"feature_engagement\"\n              reportDataForListV2={\n                isInListV2Variation ? buildReportDataForListV2() : null\n              }\n            />\n          </>\n        )}\n      </Stack>\n    </Stack>\n  );\n};\n", "import { ValidReportTypes } from '@ltvco/refresh-lib/utils';\nimport { Stack, Text, Button, Box } from '@ltvco/refresh-lib/theme';\nimport {\n  useReportRedirect,\n  mapReportTypesToReportParams,\n} from '@ltvco/refresh-lib/v1';\nimport {\n  RecentReportSerialized,\n  ReportCard,\n  useRecentReports,\n} from '@ltvco/refresh-lib/v2';\nimport { useNavigate } from 'react-router-dom';\nimport { RecentReportsCardDescription } from 'routes/Dashboard/RecentReports/components';\nimport { useQueryParams } from 'use-query-params';\nimport {\n  generateQueryConfig,\n  stringifyParams,\n} from '../../../../components/BBQ';\nimport { ChevronRight } from '@mui/icons-material';\n\nconst queryConfig = generateQueryConfig();\n\nexport function DashboardRecentReports() {\n  const navigate = useNavigate();\n  const [queryParams] = useQueryParams(queryConfig);\n  const filteredParams = stringifyParams(queryParams);\n  const { data: queryData } = useRecentReports(filteredParams);\n  const reports = (queryData?.reports as RecentReportSerialized[]) || [];\n\n  if (!reports.length) return null;\n\n  return (\n    <>\n      <Stack\n        display=\"flex\"\n        alignItems=\"center\"\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n      >\n        <Text variant=\"h3\" margin={0}>\n          My Recent Reports\n        </Text>\n        <Button\n          variant=\"text\"\n          endIcon={<ChevronRight />}\n          sx={{\n            '&:hover': {\n              background: 'none',\n              textDecoration: 'underline',\n            },\n          }}\n          onClick={() => navigate('/dashboard/reports')}\n          disableRipple\n          disableTouchRipple\n        >\n          View all\n        </Button>\n      </Stack>\n      <Stack\n        direction=\"row\"\n        columnGap={1}\n        sx={{\n          width: '100%',\n          overflowX: 'auto',\n          '&::-webkit-scrollbar': {\n            display: 'none',\n          },\n          msOverflowStyle: 'none',\n          scrollbarWidth: 'none',\n        }}\n      >\n        {reports.slice(0, 5).map((report) => {\n          const {\n            reportType,\n            reportData,\n            reportTypeFormatted,\n            id: reportPermaLink,\n            detailsCityState,\n          } = report;\n          const { redirectToReportUrl } = useReportRedirect();\n          return (\n            <Box\n              key={reportPermaLink}\n              sx={{\n                minWidth: 'calc(100% / 4.5)',\n                flexShrink: 0,\n              }}\n            >\n              <ReportCard\n                title={\n                  reportTypeFormatted.toLowerCase() === 'vehicle' &&\n                  detailsCityState\n                    ? detailsCityState\n                    : reportData\n                }\n                description={\n                  <RecentReportsCardDescription\n                    report={report}\n                    deleteCurrentReport={() => null}\n                    hideRats\n                    isOnDashboard\n                  />\n                }\n                reportType={\n                  mapReportTypesToReportParams[\n                    reportType as keyof typeof mapReportTypesToReportParams\n                  ] as ValidReportTypes\n                }\n                clickAction={() => {\n                  redirectToReportUrl(\n                    mapReportTypesToReportParams[\n                      reportType as keyof typeof mapReportTypesToReportParams\n                    ] as ValidReportTypes,\n                    reportPermaLink\n                  );\n                }}\n                actionPosition=\"hidden\"\n                containerStyles={{ minHeight: 160 }}\n              />\n            </Box>\n          );\n        })}\n      </Stack>\n    </>\n  );\n}\n", "export default \"__VITE_ASSET__D8PViahb__\"", "export default \"__VITE_ASSET__Bb__pc1I__\"", "import { Stack, Text, Box, Button } from '@ltvco/refresh-lib/theme';\nimport FamilyTreeCtaIcon from './img/FamilyTreeCtaICon.svg';\nimport FamilyTreeCtaTree from './img/FamilyTreeCtaTree.svg';\nimport { useNavigate } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { AppConfig } from '@ltvco/refresh-lib/ctx';\n\nexport function FamilyTreeCta() {\n  const { trackEventGA4 } = useContext(AppConfig);\n  const navigate = useNavigate();\n\n  function handleGetStarted() {\n    trackEventGA4({\n      event_name: 'feature_engagement',\n      type: 'family_tree',\n      interacted_from: 'home',\n    });\n\n    navigate('/family-tree');\n  }\n\n  return (\n    <Stack\n      alignItems=\"center\"\n      flexDirection=\"row\"\n      justifyContent={{ xs: 'center', md: 'space-between' }}\n      sx={{\n        px: 5,\n        py: 2.5,\n        borderRadius: '8px',\n        border: (theme) => `1px solid ${theme.palette.divider}`,\n      }}\n    >\n      <Box\n        height={'100%'}\n        sx={{\n          textAlign: { xs: 'center', md: 'left' },\n        }}\n      >\n        <Stack\n          flexDirection=\"row\"\n          mb={2}\n          alignItems=\"center\"\n          justifyContent={{ xs: 'center', md: 'start' }}\n        >\n          <img src={FamilyTreeCtaIcon} width={'60px'} height={'60px'} />\n          <Text variant=\"h1\" m=\"0 0 0 8px\">\n            Family Tree\n          </Text>\n        </Stack>\n        <Box display={{ xs: 'block', md: 'none' }} mb={2}>\n          <img src={FamilyTreeCtaTree} />\n        </Box>\n        <Text variant=\"h3\" mb={0.5}>\n          Start building your family tree!\n        </Text>\n        <Text variant=\"body1\" mb={2}>\n          Search for relative and ancestors and organize your information now.\n        </Text>\n        <Button\n          variant=\"contained\"\n          onClick={handleGetStarted}\n          sx={{ width: { xs: '100%', md: 'unset' } }}\n        >\n          Get Started\n        </Button>\n      </Box>\n      <Box display={{ xs: 'none', md: 'block' }}>\n        <img src={FamilyTreeCtaTree} />\n      </Box>\n    </Stack>\n  );\n}\n", "import type { RawReportType, ReportMonitor } from '@ltvco/refresh-lib/v1';\n\nexport const filterAndSortReports = (reports: ReportMonitor[]) => {\n  const claimedReports = reports.filter((report) => report.is_claimed);\n\n  const sortedClaimedReports: {\n    [key in RawReportType as string]: ReportMonitor[];\n  } = {};\n\n  claimedReports.forEach((report) => {\n    if (sortedClaimedReports[report.report_type]) {\n      sortedClaimedReports[report.report_type] = [\n        ...sortedClaimedReports[report.report_type],\n        report,\n      ];\n    } else {\n      sortedClaimedReports[report.report_type] = [report];\n    }\n  });\n\n  return sortedClaimedReports;\n};\n", "import { Button, Text, Modal, IconButton } from '@ltvco/refresh-lib/theme';\nimport { Close } from '@mui/icons-material';\n\nexport interface ModalProps {\n  open: boolean;\n  handleClose: () => void;\n  customTitle?: JSX.Element;\n  description?: string | JSX.Element;\n  returnButtonText?: string;\n}\n\nexport const CustomModal = ({\n  open,\n  handleClose,\n  customTitle,\n  description,\n  returnButtonText,\n}: ModalProps) => {\n  return (\n    <Modal\n      open={open}\n      hasCloseIcon={false}\n      disableScrollLock\n      data-testid=\"custom-modal\"\n      sx={{\n        '.MuiDialog-paper': {\n          width: '480px',\n        },\n      }}\n      onClose={handleClose}\n      id=\"custom-modal\"\n    >\n      {customTitle}\n      <Text variant=\"body2\" m=\"1rem 0\" textAlign=\"center\">\n        {description}\n      </Text>\n      <Button\n        variant=\"contained\"\n        sx={{ display: 'flex', m: '2rem auto 0' }}\n        onClick={handleClose}\n      >\n        {returnButtonText}\n      </Button>\n      <IconButton\n        sx={{\n          position: 'absolute',\n          top: '5px',\n          right: '5px',\n        }}\n        onClick={handleClose}\n      >\n        <Close sx={{ fontSize: '24px' }} />\n      </IconButton>\n    </Modal>\n  );\n};\n", "import {\n  Grid,\n  PureTextButton,\n  Stack,\n  Text,\n  styled,\n} from '@ltvco/refresh-lib/theme';\nimport {\n  DirectionsCar,\n  Email,\n  Help,\n  Home,\n  PetsRounded,\n  PhoneIphone,\n} from '@mui/icons-material';\nimport { IdentityCard, FootprintCard } from '@ltvco/refresh-lib/v2';\nimport { useReportMonitors, useSession } from '@ltvco/refresh-lib/v1';\nimport { useMemo, useState } from 'react';\nimport { filterAndSortReports } from 'routes/Dashboard/IdentityHub/utils';\nimport { useScreenSize } from '@ltvco/refresh-lib/utils';\nimport { ManageReportMonitorsModal } from 'components/idMonitor/ClaimedReportMonitorsContainer/ManageReportMonitorsModal';\nimport { CustomModal } from './CustomModal';\n\nconst StyledStack = styled(Stack)(() => ({\n  display: 'flex',\n  alignItems: 'center',\n}));\n\nfunction DashboardDigitialFoorprint() {\n  const { isMobile } = useScreenSize();\n  const { currentMonitors } = useReportMonitors();\n  const {\n    session: { account },\n  } = useSession();\n\n  const { first_name, last_name } = account?.account?.user_info || {};\n\n  const [footprintModalOpen, setFootprintModalOpen] = useState(false);\n  const [footprintModalTitle, setFootprintModalTitle] = useState<\n    JSX.Element | undefined\n  >();\n  const [footprintModalDescription, setFootprintModalDescription] =\n    useState('');\n\n  const filteredAndSortedReports = useMemo(\n    () => filterAndSortReports(currentMonitors || []),\n    [currentMonitors]\n  );\n  const claimedPersonReports =\n    filteredAndSortedReports['detailed_person_report'];\n  const claimedPropertyReports = filteredAndSortedReports['property_report'];\n  const claimedVehicleReports = filteredAndSortedReports['vehicle_report'];\n  const claimedEmailReports = filteredAndSortedReports['social_network_report'];\n  const claimedPhoneReports = filteredAndSortedReports['reverse_phone_report'];\n\n  const REPORTVARIATION = {\n    phone: {\n      title: 'Phone Number',\n      icon: <PhoneIphone sx={{ color: '#0052FF' }} fontSize=\"small\" />,\n      type: 'phone',\n      claimedReports: claimedPhoneReports,\n    },\n    email: {\n      title: 'Email Address',\n      icon: <Email sx={{ color: '#0052FF' }} fontSize=\"small\" />,\n      type: 'email',\n      claimedReports: claimedEmailReports,\n    },\n    vehicle: {\n      title: 'Vehicle',\n      icon: <DirectionsCar sx={{ color: '#0052FF' }} fontSize=\"small\" />,\n      type: 'vehicle',\n      claimedReports: claimedVehicleReports,\n    },\n    property: {\n      title: 'Home Address',\n      icon: <Home sx={{ color: '#0052FF' }} fontSize=\"small\" />,\n      type: 'property',\n      claimedReports: claimedPropertyReports,\n    },\n  };\n\n  function handleClickWhatIsDigitalFootprint() {\n    setFootprintModalTitle(\n      <Text textAlign=\"center\" fontWeight=\"normal\" variant=\"h2\" m={0}>\n        <PetsRounded\n          sx={{\n            fontSize: '24px',\n            color: '#0052FF',\n            marginRight: 2,\n          }}\n        />\n        Your Digital Footprint\n      </Text>\n    );\n    setFootprintModalDescription(\n      'Your digital footprint is composed of data that is publicly available on the internet. BeenVerified allows you to monitor this data for changes, or when new information becomes available.'\n    );\n    setFootprintModalOpen(!footprintModalOpen);\n  }\n\n  return (\n    <>\n      <StyledStack direction=\"row\" gap={1}>\n        <PetsRounded\n          sx={{\n            fontSize: '24px',\n            color: '#0052FF',\n          }}\n        />\n        <Text variant=\"h3\" margin={0}>\n          Your Digital Footprint\n        </Text>\n\n        <PureTextButton\n          onClick={() => handleClickWhatIsDigitalFootprint()}\n          sx={{\n            '&.MuiButton-root': {\n              padding: 0,\n            },\n          }}\n        >\n          <Help fontSize=\"small\" sx={{ mr: 1 }} />\n        </PureTextButton>\n      </StyledStack>\n\n      <StyledStack\n        width=\"100%\"\n        gap={1}\n        height={isMobile ? '' : 255}\n        direction={isMobile ? 'column' : 'row'}\n      >\n        <IdentityCard\n          firstName={first_name || ''}\n          lastName={last_name || ''}\n          claimedPersonReports={claimedPersonReports}\n        />\n        <Grid\n          container\n          spacing={1}\n          width={isMobile ? '100%' : '60%'}\n          flexWrap=\"wrap\"\n        >\n          {Object.values(REPORTVARIATION).map((item: any) => (\n            <Grid item xs={12} sm={6}>\n              <FootprintCard\n                title={item?.title}\n                icon={item?.icon}\n                type={item?.type}\n                claimedReports={item?.claimedReports}\n                Modal={ManageReportMonitorsModal}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </StyledStack>\n\n      <CustomModal\n        open={footprintModalOpen}\n        customTitle={footprintModalTitle}\n        description={footprintModalDescription}\n        handleClose={() => setFootprintModalOpen(!footprintModalOpen)}\n        returnButtonText=\"Return to Dashboard\"\n      />\n    </>\n  );\n}\n\nexport default DashboardDigitialFoorprint;\n", "import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useScreenSize } from '@ltvco/refresh-lib/utils';\nimport { Text, Grid, Box } from '@ltvco/refresh-lib/theme';\nimport { checkPlanVariations } from 'utils/checkPlanVariations';\nimport { SearchHub } from '../SearchHub/SearchHub';\nimport { FeatureCard } from '@ltvco/refresh-lib/v2';\n\nimport {\n  FamilyThree,\n  UnclaimedMoney,\n  DarkWebScan,\n  Monitoring,\n  MemberPerks,\n  FraudScan,\n  Identity,\n  TheftInsurance,\n} from 'icons';\nimport {\n  useAccount,\n  PremiumDataModal,\n  usePremiumDataModal,\n} from '@ltvco/refresh-lib/v1';\nimport { PremiumPaymentSuccessModal } from '@ltvco/refresh-lib/payments';\nimport { DashboardRecentReports } from './components/DashboardRecentReports';\nimport { FamilyTreeCta } from './components/FamilyTreeCta';\nimport { useFeatureIsOn } from '@ltvco/refresh-lib/vendors';\nimport DashboardDigitialFoorprint from './components/DashboardDigitialFoorprint';\n\nexport function DashboardPage() {\n  useEffect(() => {\n    document.title = 'Dashboard - BeenVerified';\n  }, []);\n  const { isMobile } = useScreenSize();\n  const navigate = useNavigate();\n  const { data: account } = useAccount(true);\n  const { isModalOpen, closeModal, triggerModal } = usePremiumDataModal();\n  const [searchType, setSearchType] = useState('');\n  const [isInSingleReportVariation, setIsInSingleReportVariation] =\n    useState(false);\n  const [paymentShowModalNumber, setPaymentShowModalNumber] =\n    useState<number>(0);\n  const [isSuccessModaVisible, setIsSuccessModaVisible] =\n    useState<boolean>(false);\n\n  const openSuccessModal = () => {\n    setIsSuccessModaVisible(true);\n  };\n\n  const closeModals = () => {\n    setIsSuccessModaVisible(false);\n    setPaymentShowModalNumber(0);\n  };\n\n  const onSuccessPaymentHandler = () => {\n    closeModals();\n    navigate('/dashboard');\n  };\n\n  useEffect(() => {\n    if (!account) return;\n    const planName =\n      account.account.subscription_info.subscription_plan_unique_name;\n    const { isInSingleReportVariation } = checkPlanVariations(planName);\n    setIsInSingleReportVariation(isInSingleReportVariation);\n  }, [account]);\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const isFallFromCTAEmail = urlParams.get('premiumData');\n\n    if (isInSingleReportVariation && isFallFromCTAEmail === 'true') {\n      triggerModal(true, isInSingleReportVariation);\n    }\n  }, [isInSingleReportVariation]);\n\n  const memberId = account?.account.user_info?.user_code || '';\n\n  const featureAction = (str: string) => {\n    setSearchType(str);\n    triggerModal(true, isInSingleReportVariation);\n  };\n\n  const planName =\n    account?.account?.subscription_info?.subscription_plan_unique_name ?? '';\n  const { isInInternationalLanguageTest, isInternationalVinTest } =\n    checkPlanVariations(planName);\n\n  const features = [\n    {\n      title: 'Family Tree',\n      description:\n        'Start building your family tree! Organize your information now',\n      icon: <FamilyThree />,\n      action: () =>\n        isInSingleReportVariation\n          ? featureAction('family-tree')\n          : navigate('/family-tree'),\n    },\n    {\n      title: 'Unclaimed Money',\n      description: 'Find out what money you may be owed',\n      icon: <UnclaimedMoney />,\n      action: () =>\n        isInSingleReportVariation\n          ? featureAction('unclaimed money')\n          : navigate('/dashboard/unclaimed-money'),\n    },\n    {\n      title: 'Dark Web Scan',\n      description: 'Check if your email was potentially leaked',\n      icon: <DarkWebScan />,\n      action: () =>\n        isInSingleReportVariation\n          ? featureAction('dark web')\n          : navigate('/dashboard/dark-web'),\n    },\n    {\n      title: 'Identity & Credit Alerts',\n      description: 'Monitor potential identity and credit record activity',\n      icon: <Identity />,\n      action: () =>\n        isInSingleReportVariation\n          ? featureAction('identity & credit alerts')\n          : navigate('/dashboard/id-monitor?escalated=true'),\n    },\n    {\n      title: 'Monitor your reports',\n      description: 'Receive updates if we detect changes',\n      icon: <Monitoring />,\n      action: () => navigate('/dashboard/monitoring'),\n    },\n    {\n      title: 'Member Perks',\n      description:\n        'Savings may be available through gift cards, discounts, and more',\n      icon: <MemberPerks />,\n      action: () => navigate('/dashboard/rewards'),\n    },\n    {\n      title: '$1M ID Theft Insurance',\n      description:\n        'Protect your identity with identity theft insurance and restoration services',\n      icon: <TheftInsurance />,\n      action: () =>\n        isInSingleReportVariation\n          ? featureAction('identity theft insurance')\n          : navigate('/dashboard/id-monitor?escalated=true'),\n    },\n    {\n      title: 'FraudScan',\n      description:\n        'Check phone numbers and emails for threats and fraudulent info',\n      icon: <FraudScan />,\n      action: () => navigate('/dashboard/fraud'),\n    },\n  ];\n\n  const isOnDigitalFootprint = useFeatureIsOn('RFRSH-2758');\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" rowGap={2.5}>\n      <SearchHub />\n      {isOnDigitalFootprint ? (\n        <DashboardDigitialFoorprint />\n      ) : (\n        <DashboardRecentReports />\n      )}\n      <FamilyTreeCta />\n      {isInternationalVinTest || isInInternationalLanguageTest ? null : (\n        <Grid container direction=\"column\">\n          <Grid item>\n            <Text variant=\"h3\" mb={3} mt={2}>\n              Explore New Features\n            </Text>\n          </Grid>\n          <Grid container spacing={isMobile ? 1.5 : 2}>\n            {features.map((feature) => (\n              <Grid item xs={12} sm={6} md={4} key={feature.title}>\n                <FeatureCard\n                  title={feature.title}\n                  description={feature.description}\n                  icon={feature.icon}\n                  action={feature.action}\n                  width={'100%'}\n                  height={120}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      )}\n      {isInSingleReportVariation && (\n        <PremiumDataModal\n          isOpen={isModalOpen}\n          onClose={closeModal}\n          searchType={searchType}\n          paymentShowModalNumber={paymentShowModalNumber}\n          setPaymentShowModalNumber={setPaymentShowModalNumber}\n          openSuccessModal={openSuccessModal}\n        />\n      )}\n      <PremiumPaymentSuccessModal\n        open={isSuccessModaVisible}\n        onClose={closeModals}\n        onAccept={onSuccessPaymentHandler}\n      />\n    </Box>\n  );\n}\n", "import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { MonitoringOverview, useSriracha } from '@ltvco/refresh-lib/v1';\nimport { checkPlanVariations } from 'utils/checkPlanVariations';\nimport {\n  PremiumDataModal,\n  usePremiumDataModal,\n  useAccount,\n} from '@ltvco/refresh-lib/v1';\nimport { PremiumPaymentSuccessModal } from '@ltvco/refresh-lib/payments';\n\nexport function Monitoring() {\n  const { data } = useSriracha();\n  const notifications = data || [];\n  const navigate = useNavigate();\n\n  const { data: account } = useAccount(true);\n  const { isModalOpen, closeModal, triggerModal } = usePremiumDataModal();\n  const [searchType, setSearchType] = useState('');\n  const [isInSingleReportVariation, setIsInSingleReportVariation] =\n    useState(false);\n  const [paymentShowModalNumber, setPaymentShowModalNumber] =\n    useState<number>(0);\n  const [isSuccessModaVisible, setIsSuccessModaVisible] =\n    useState<boolean>(false);\n\n  const openSuccessModal = () => {\n    setIsSuccessModaVisible(true);\n  };\n\n  const closeModals = () => {\n    setIsSuccessModaVisible(false);\n    setPaymentShowModalNumber(0);\n  };\n\n  const onSuccessPaymentHandler = () => {\n    closeModals();\n    navigate('/dashboard');\n  };\n\n  const onClickHandler = () => {\n    if (isInSingleReportVariation) {\n      triggerModal(true, isInSingleReportVariation);\n    }\n  };\n\n  useEffect(() => {\n    if (!account) return;\n    const planName =\n      account.account.subscription_info.subscription_plan_unique_name;\n    const { isInSingleReportVariation } = checkPlanVariations(planName);\n    setIsInSingleReportVariation(isInSingleReportVariation);\n  }, [account]);\n\n  return (\n    <>\n      <MonitoringOverview\n        notifications={notifications}\n        onClickHandler={onClickHandler}\n      />\n      {isInSingleReportVariation && (\n        <PremiumDataModal\n          isOpen={isModalOpen}\n          onClose={closeModal}\n          searchType={searchType}\n          paymentShowModalNumber={paymentShowModalNumber}\n          setPaymentShowModalNumber={setPaymentShowModalNumber}\n          openSuccessModal={openSuccessModal}\n        />\n      )}\n      <PremiumPaymentSuccessModal\n        open={isSuccessModaVisible}\n        onClose={closeModals}\n        onAccept={onSuccessPaymentHandler}\n      />\n    </>\n  );\n}\n", "import { useFeatureIsOn } from '@ltvco/refresh-lib/vendors';\nimport { useAccountLists, AccountLists } from '@ltvco/refresh-lib/v1';\nimport { useEffect } from 'react';\nimport { ListLandingPage } from '@ltvco/refresh-lib/v2';\n\nexport function Lists() {\n  const { data: lists, isLoading } = useAccountLists();\n  const isInListV2Variation = useFeatureIsOn('prop-2834');\n\n  useEffect(() => {\n    document.title = 'Report Lists - BeenVerified';\n  }, []);\n\n  if (isInListV2Variation) {\n    return <ListLandingPage lists={lists || []} isLoading={isLoading} />;\n  }\n\n  return <AccountLists lists={lists || []} isBrandLoading={isLoading} />;\n}\n", "import imgExpiredTime from '../../../images/img_expired_time.svg';\nimport imgStates from '../../../images/img_states.svg';\nimport imgGroupPeople from '../../../images/img_group_people.svg';\n\nexport const unclaimedMoneyFaq = [\n  {\n    id: '0',\n    question: 'What is unclaimed money?',\n    answer: `Unclaimed money, also called unclaimed property, is money that is held by the state after the rightful owner fails to collect it, typically within the period of a year. There are many reasons why there may be money that you have not yet claimed: switching bank accounts, moving, and overpaying a bill are just some of the common reasons why money that is rightfully yours may not have been able to be returned to you. The average amount of money unclaimed by an individual tends to be between $50 to $100.`,\n  },\n  {\n    id: '1',\n    question: 'Where does it come from?',\n    answer: `Your state of residence may be holding your unclaimed money for any of the following reasons:`,\n    list: [\n      'Overpaying a bill, then relocating: The state will collect and safeguard your money if a company cannot locate you or doesn’t know your new address.',\n      'Switching bank accounts during a move.',\n      'Bank failures.',\n      'Unpaid wages or unclaimed pensions.',\n      'Tax refunds: If your refund was unclaimed or undelivered, the state may keep it until you claim it.',\n      'Inheritance: The state may safeguard your inheritance if you do not claim it.',\n    ],\n  },\n  {\n    id: '2',\n    question: 'How does this unclaimed money search work?',\n    answer:\n      'Simply search your first and last name plus any state you’ve ever lived in. If you find unclaimed money associated with your name, we will try and redirect you to the applicable, official state website to start the claims process, which is typically free.',\n  },\n  {\n    id: '3',\n    question: 'Do I have to pay to claim my money?',\n    answer: 'Typically, you won’t need to pay a fee to claim your money.',\n  },\n  {\n    id: '4',\n    question: 'How do I file a claim?',\n    answer:\n      'We offer an easy way to search for unclaimed money in different states from one website. Once you are ready to file a claim, each state has their own claims process that may vary in complexity, so you may have to consult your state’s laws and regulations. Each state has its own rules on how to retrieve unclaimed money, such as whether or not you can do it online, or if you have to do it by mail. You will also likely have to prove that the money is yours by presenting a form of identification. Please review each state’s requirements carefully when filing your claim.',\n  },\n  {\n    id: '5',\n    question: 'How long does it take to get my money?',\n    answer:\n      'The time it will take to get your money depends on the state. Some states can process claims in as little as 2 weeks, whereas others may take as long as 6 months. For more detailed information, you may want to inquire about the timeline and whether or not you will be able to check up on the status of the claim online.',\n  },\n];\n\nexport const unclaimedMoneyHelpfulTips = [\n  {\n    id: '0',\n    text: `Unclaimed money doesn't expire, so search every state you've lived or done business in.`,\n    icon: imgExpiredTime,\n  },\n  {\n    id: '1',\n    text: 'State databases are updated frequently, so check back monthly.',\n    icon: imgStates,\n  },\n  {\n    id: '2',\n    text: 'With unclaimed money you can search for yourself, relatives or your friends with ease.',\n    icon: imgGroupPeople,\n  },\n];\n", "import { Text, Grid, Card, styled } from '@ltvco/refresh-lib/theme';\nimport {\n  unclaimedMoneyFaq,\n  unclaimedMoneyHelpfulTips,\n} from './unclaimedMoneyConstants';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  HelpfulTips,\n  Faq,\n  UnclaimedMoneyHeader,\n  SearchNewUnclaimedMoneyForm,\n} from '@ltvco/refresh-lib/v1';\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n  backgroundColor: '#F9F7FF',\n  border: '0.5px solid',\n  // TODO REVIEW TO CORRECT COLOR\n  borderColor: theme.palette.text.primary,\n  padding: '15px',\n  boxShadow: theme.palette.background.light,\n}));\n\nfunction useQueryParams(params: string) {\n  return useMemo(() => new URLSearchParams(params), [params]);\n}\n\nexport function UnclaimedMoney() {\n  const { search } = useLocation();\n  const queryParams = useQueryParams(search);\n  const fname = queryParams.get('fname') || '';\n  const lname = queryParams.get('lname') || '';\n  const state = queryParams.get('state') || '';\n  const [stateList, setStateList] = useState<string[]>(state ? [state] : []);\n\n  useEffect(() => {\n    document.title = 'Unclaimed Money - BeenVerified';\n  }, []);\n\n  return (\n    <>\n      <UnclaimedMoneyHeader />\n      <StyledCard>\n        <Grid container direction=\"row\" justifyContent=\"space-between\">\n          <Grid item width={'100%'}>\n            <Text variant=\"h5\" sx={{ fontWeight: 'bold', mt: 2.5, mb: 1.5 }}>\n              There’s an estimated $70 billion worth of unclaimed money in the\n              United States.\n            </Text>\n            <Text variant=\"h2\">How much could be yours?</Text>\n          </Grid>\n        </Grid>\n        <SearchNewUnclaimedMoneyForm\n          fname={fname}\n          lname={lname}\n          stateList={stateList}\n        />\n        <br />\n        <br />\n        <br />\n        <HelpfulTips tips={unclaimedMoneyHelpfulTips} />\n      </StyledCard>\n      <br />\n      <br />\n      <Faq faqItems={unclaimedMoneyFaq} />\n    </>\n  );\n}\n", "export const darkWebScanFaq = [\n  {\n    id: '0',\n    question: 'What is dark web scan?',\n    answer: `A dark web scan is a search for your personal information on the Dark Web — the deepest recesses of the Internet where many criminals are reputed to operate. The Dark Web is not easily accessed and may require some additional software to search, and if information like your email is available on the Dark Web, your identity could be used to commit fraud. A BeenVerified Dark Web Scan searches web pages for any of your email addresses that may have been compromised.`,\n  },\n  {\n    id: '1',\n    question: 'What is a breach?',\n    answer: `Breaches are incidents where personal information like emails, usernames, and passwords are inadvertently exposed on the dark web, usually due to a weak security system on the site that was breached. The Dark Web Scan aggregates breaches so that you may assess where your personal data may have been exposed.`,\n  },\n  {\n    id: '2',\n    question: 'What do I do if some of my accounts have been compromised?',\n    answer: `If one or several of your accounts have been compromised, there are several actions you should consider taking immediately:\n        - Change your passwords and make them stronger by using different characters, symbols, and numbers.\n        - Check your credit report regularly.\n        - Monitor your accounts from fraudulent activity, such as any statements or changes you don't recognize.\n        - Use a service to scan the Dark Web regularly for your information.`,\n  },\n  {\n    id: '3',\n    question: 'Some Dark Web stats',\n    answer:\n      'The Dark Web sounds like a scary place, and when your information finds itself there, it may be vulnerable for use in connection with committing crimes. The Dark Web only comprises 3% of the internet, but is incredibly popular with criminals: according to the Identity Theft Resource Center, system-wide data breaches in the United States in 2016 hit an all-time high of 1,093. That’s a 40% increase over the previous year. When your personal data is sold on the Dark Web, it’s sold for cheap: it can cost just $1 to obtain your SSN, $1 to set up a fake Facebook account with 15 friends, $50 for your medical records, and $60 for your credit card details. Please bear in mind that, at present, a BeenVerified Dark Web Scan can only search for your email address.',\n  },\n  {\n    id: '4',\n    question: `My email was not found - does that mean my email hasn't been compromised?`,\n    answer: `In short, no. We update our data as frequently as we can, but some information breaches can still go undetected. Even if your email address hasn't been found on the Dark Web after a successful scan, that doesn't necessarily mean that it hasn't been compromised or that you shouldn't take precautionary, preventive measures to regularly protect yourself.`,\n  },\n  {\n    id: '5',\n    question:\n      'Why do I see my email as breached on a service I never signed up to?',\n    answer:\n      'There are several reasons why you may see your email listed as having been breached on a service you ostensibly never signed up for. One possible answer may be because your data was acquired by another service. Another may be that you signed up for a service that rebranded itself. Perhaps another person signed you up for that service using your email address, or you may have forgotten that you had signed up for that particular service.',\n  },\n];\n", "import { darkWebScanFaq } from './darkWebScanConstants';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport {\n  type SearchData,\n  useSession,\n  useDarkWebReport,\n  ReportLoading,\n  DarkWebHeader,\n  DarkWebBreaches,\n  type SerializedDarkWebBreach,\n  DarkWebFindOutWhatElse,\n  Faq,\n} from '@ltvco/refresh-lib/v1';\n\nexport function DarkWebScan() {\n  const {\n    session: { account },\n  } = useSession();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    document.title = 'Dark Web Scan - BeenVerified';\n  }, []);\n\n  const { data, isLoading } = useDarkWebReport({\n    email: account?.account.user_info?.email as string,\n  });\n\n  if (isLoading) return <ReportLoading />;\n\n  const breaches = data?.data?.breaches;\n  const updatedAt = data?.data?.rawData?.meta?.updated_at;\n\n  return (\n    <>\n      <DarkWebHeader updatedAt={updatedAt || ''} />\n      <DarkWebBreaches breaches={breaches as SerializedDarkWebBreach[]} />\n      <DarkWebFindOutWhatElse\n        onSuccess={({ reportType, searchParams, permalink }: SearchData) => {\n          const url = `/report/${reportType}?${searchParams}&permalink=${permalink}`;\n          navigate(url);\n        }}\n      />\n      <Faq faqItems={darkWebScanFaq} />\n    </>\n  );\n}\n", "import { Dispatch, SetStateAction, useContext } from 'react';\nimport { NavigateFunction } from 'react-router-dom';\nimport { constants } from 'appConstants';\nimport { publish } from '@ltvco/refresh-lib';\nimport { useSession } from '@ltvco/refresh-lib/v1';\nimport { AppConfig } from '@ltvco/refresh-lib/ctx';\nimport { useFeatureIsOn, useFeatureValue } from '@ltvco/refresh-lib/vendors';\nimport {\n  FamilyThree,\n  Monitoring,\n  FraudScan,\n  IdentityBg,\n  TheftInsurance,\n} from 'icons';\nimport { useScreenSize } from '@ltvco/refresh-lib/utils';\n\nexport const AccountInformationOptions = [\n  {\n    name: 'Edit Name',\n    display: 'Edit Name',\n    value: 'Edit Name',\n    constantValue: 'EDIT_NAME',\n  },\n  {\n    name: 'Edit Email',\n    display: 'Edit Email',\n    value: 'Edit Email',\n    constantValue: 'EDIT_EMAIL',\n  },\n  {\n    name: 'Add Phone Number',\n    display: 'Edit Phone Number',\n    value: 'Add Phone Number',\n    constantValue: 'ADD_PHONE_NUMBER',\n  },\n  {\n    name: 'Change Password',\n    display: 'Change Password',\n    value: 'Change Password',\n    constantValue: 'CHANGE_PASSWORD',\n  },\n  {\n    name: 'Edit Payment Info',\n    display: 'Edit Payment Info',\n    value: 'Edit Payment Info',\n    constantValue: 'EDIT_PAYMENT_INFO',\n  },\n  {\n    name: 'Cancel My Account',\n    display: 'Cancel My Account',\n    value: 'Cancel My Account',\n    constantValue: 'CANCEL_MY_ACCOUNT',\n  },\n];\n\nexport const editOptionClicked = (\n  editing: string | null,\n  openModal: (open: boolean) => void,\n  setEditing: Dispatch<SetStateAction<string | null>>,\n  customOptions?: {\n    name: string;\n    display: string;\n    value: string;\n    constantValue: string;\n  }[]\n) => {\n  const options = customOptions || AccountInformationOptions;\n  if (editing === 'Edit Payment Info') {\n    openModal(true);\n  } else {\n    setEditing(\n      options.find((option) => {\n        return option.name === editing;\n      })?.constantValue || editing\n    );\n  }\n};\n\nexport const GenericCtaCardProps = (\n  navigate: NavigateFunction,\n  isInVariation: boolean,\n  onVariationCtaClick: (text: string) => void\n) => {\n  // has_sso_connections\n  const {\n    session: { account },\n  } = useSession();\n  const { trackEventGA4 } = useContext(AppConfig);\n\n  const has_sso_connections = account?.account?.user_info?.has_sso_connections;\n\n  // AB Tests\n  const tabsVariation = useFeatureValue('OAR-1504', '');\n  const isInDashboardFeaturesVariation =\n    useFeatureIsOn('OAR-1410') ||\n    ['OAR-1504_variation_1', 'OAR-1504_variation_2'].includes(tabsVariation);\n\n  const { isMobile } = useScreenSize();\n\n  const handleCtaClick = (\n    ctaLabel: string,\n    actionParam: string,\n    eventSite: string,\n    isPublish: boolean\n  ) => {\n    trackEventGA4({\n      event_name: 'navigation_click',\n      type: eventSite,\n      interacted_from: 'my_account',\n    });\n\n    isInVariation\n      ? onVariationCtaClick(ctaLabel)\n      : isPublish\n      ? publish(actionParam)\n      : navigate(actionParam);\n  };\n\n  // Google-enabled brands: BeenVerified, Bumper, MoneyBot5000, NeighborWho, Number Guru, Ownerly, PeopleLooker, PeopleSmart, ReversePhone, Wingmate LC 04/07/25\n  // Apple-enabled brands: BeenVerified, Bumper, NeighborWho, Number Guru, PeopleLooker, Wingmate LC 04/07/25\n  const sso_enabled = {\n    google: true,\n    apple: true,\n  };\n\n  const props = [\n    {\n      headerText: `${\n        has_sso_connections ? '' : 'Connect or '\n      } Edit Login Options`,\n      bodyText: `Add ${has_sso_connections ? 'or remove' : ''} your ${\n        sso_enabled.google && sso_enabled.apple\n          ? 'Google or Apple'\n          : sso_enabled.google\n          ? 'Google'\n          : sso_enabled.apple\n          ? 'Apple'\n          : ''\n      } Login ${\n        has_sso_connections ? '' : 'on top of your account password & email'\n      }`,\n      buttonText: 'Edit Login Options',\n      imgUrl: constants.images.imgSingleSignOnCta,\n      onCtaClick: () =>\n        window.open('https://www.beenverified.com/sso_connections', '_blank'),\n      dataCy: 'login_options_cta',\n    },\n    {\n      headerText: 'Search property reports',\n      bodyText: 'Search an address to find out home value, ownership and more',\n      buttonText: 'Search an address now',\n      imgUrl: constants.images.imgAddressGeneric,\n      onCtaClick: () =>\n        handleCtaClick(\n          'property report',\n          'openPropertySearch',\n          'property',\n          true\n        ),\n    },\n    {\n      headerText: 'Search background reports',\n      bodyText: 'Find arrest records, contact information and more',\n      buttonText: 'Search by name now',\n      imgUrl: constants.images.imgSpecializedBackgroundCheck,\n\n      onCtaClick: () =>\n        handleCtaClick(\n          ' background report',\n          'openPersonSearch',\n          'people',\n          true\n        ),\n    },\n    //TODO: Uncomment when these features are ready\n    // {\n    //   headerText: 'Monitor 10 different reports',\n    //   bodyText: 'Get alerted about new data on reports as we become aware',\n    //   buttonText: 'See more',\n    //   imgUrl: constants.imgBell,\n\n    //   onCtaClick: () => navigate('/dashboard/alertme'),\n    // },\n    // {\n    //   headerText: 'Monitor your online identity',\n    //   bodyText:\n    //     'Monitor your online identity to get notified if any changes are detected',\n    //   buttonText: 'Start monitoring now',\n    //   imgUrl: constants.imgIdHub,\n    //   onCtaClick: () => navigate('/dashboard/identity-hub'),\n    // },\n    {\n      headerText: 'Dark Web Scan',\n      bodyText:\n        'See if the email you signed up with may have been leaked in a data breach',\n      buttonText: 'Scan now',\n      imgUrl: constants.images.imgDarkWebScan,\n      onCtaClick: () =>\n        handleCtaClick('dark web', '/dashboard/dark-web', 'dark_web', false),\n      dataCy: 'dark_web_cta',\n    },\n    {\n      headerText: 'Unclaimed Money',\n      bodyText: 'Did you know 1 in 10 Americans have unclaimed Money?',\n      buttonText: 'Find out now',\n      imgUrl: constants.images.imgSpecializedUnclaimedMoney,\n      onCtaClick: () =>\n        handleCtaClick(\n          'unclaimed money',\n          '/dashboard/unclaimed-money',\n          'unclaimed_money',\n          false\n        ),\n      dataCy: 'unclaimed_cta',\n    },\n  ];\n\n  const dashboardFeaturesprops = [\n    {\n      headerText: 'Search property reports',\n      bodyText: 'Search an address to find out home value, ownership and more',\n      buttonText: isMobile ? 'Search now' : 'Search an address now',\n      imgUrl: constants.images.imgAddressGeneric,\n      onCtaClick: () =>\n        handleCtaClick(\n          'property report',\n          'openPropertySearch',\n          'property',\n          true\n        ),\n    },\n    {\n      headerText: 'Search background reports',\n      bodyText: 'Find arrest records, contact information and more',\n      buttonText: isMobile ? 'Search now' : 'Search by name now',\n      imgUrl: constants.images.imgSpecializedBackgroundCheck,\n\n      onCtaClick: () =>\n        handleCtaClick(\n          ' background report',\n          'openPersonSearch',\n          'people',\n          true\n        ),\n    },\n    {\n      headerText: `${\n        has_sso_connections ? '' : 'Connect or '\n      } Edit Login Options`,\n      bodyText: `Add ${has_sso_connections ? 'or remove' : ''} your ${\n        sso_enabled.google && sso_enabled.apple\n          ? 'Google or Apple'\n          : sso_enabled.google\n          ? 'Google'\n          : sso_enabled.apple\n          ? 'Apple'\n          : ''\n      } Login ${\n        has_sso_connections ? '' : 'on top of your account password & email'\n      }`,\n      buttonText: 'Edit Login Options',\n      imgUrl: constants.images.imgSingleSignOnCta,\n      onCtaClick: () =>\n        window.open('https://www.beenverified.com/sso_connections', '_blank'),\n      dataCy: 'login_options_cta',\n    },\n    {\n      headerText: 'Family Tree',\n      bodyText:\n        'Start building your family tree! Organize your information now',\n      buttonText: 'Learn more',\n      icon: FamilyThree,\n      onCtaClick: () =>\n        handleCtaClick('family-tree', '/family-tree', 'family', false),\n    },\n    {\n      headerText: 'Identity & Credit Alerts',\n      bodyText: 'Monitor potential identity and credit record activity',\n      buttonText: 'Learn more',\n      icon: IdentityBg,\n      onCtaClick: () =>\n        handleCtaClick(\n          'identity & credit alerts',\n          '/dashboard/id-monitor?escalated=true',\n          'identity',\n          false\n        ),\n    },\n    {\n      headerText: 'Monitor Your Reports',\n      bodyText: 'Receive updates if we detect changes',\n      buttonText: 'Search now',\n      icon: Monitoring,\n      onCtaClick: () =>\n        handleCtaClick(\n          'monitor reports',\n          '/dashboard/monitoring',\n          'reports',\n          false\n        ),\n    },\n    {\n      headerText: 'Fraud Scan',\n      bodyText:\n        'Check phone numbers and emails for threats and fraudulent info',\n      buttonText: 'Scan now',\n      icon: FraudScan,\n      onCtaClick: () =>\n        handleCtaClick('fraud scan', '/dashboard/fraud', 'fraud', false),\n    },\n    {\n      headerText: '$1M ID Theft Insurance',\n      bodyText:\n        'Protect your identity with identity theft insurance and restoration services',\n      buttonText: 'Learn more',\n      icon: TheftInsurance,\n      onCtaClick: () =>\n        handleCtaClick(\n          'identity theft insurance',\n          '/dashboard/id-monitor?escalated=true',\n          'insurance',\n          false\n        ),\n    },\n  ];\n\n  const selectedProps = isInDashboardFeaturesVariation\n    ? dashboardFeaturesprops\n    : props;\n\n  return {\n    ctaCardProps: selectedProps,\n    length: selectedProps.length,\n  };\n};\n", "import {\n  AccountInformation,\n  GenericCtaCard,\n  LimitedPlanProgress,\n  LimitedPlanProgressVIN,\n  MyAccountHeader,\n  PremiumDataModal,\n  usePremiumDataModal,\n  useSession,\n} from '@ltvco/refresh-lib/v1';\nimport { Grid, Box } from '@ltvco/refresh-lib/theme';\nimport { constants } from 'appConstants';\nimport { useEffect, useState } from 'react';\nimport {\n  AccountInformationOptions,\n  GenericCtaCardProps,\n  editOptionClicked,\n} from './BillingConstants';\nimport { useNavigate } from 'react-router-dom';\nimport { useLimitedPlanInfo } from 'utils/useLimitedPlanInfo';\nimport { checkPlanVariations } from 'utils/checkPlanVariations';\nimport { DateUtil } from '@ltvco/refresh-lib/utils';\nimport {\n  AccountEditModals,\n  ManageSubscriptions,\n  MyAccountComponents,\n  MyAccountTabs,\n} from '@ltvco/refresh-lib/v2';\nimport { useFeatureIsOn, useFeatureValue } from '@ltvco/refresh-lib/vendors';\nimport {\n  PaymentsSelectionModal,\n  PayPalRedirectionModal,\n  RadioPaymentsModal,\n  ViewOrderHistory,\n} from '@ltvco/refresh-lib/payments';\nimport { usePreferredLanguage } from '@ltvco/refresh-lib/hooks';\n\nexport function Billing({\n  onCancelConfirmCancelModal,\n}: {\n  onCancelConfirmCancelModal?: () => void;\n}) {\n  const navigate = useNavigate();\n  const dateUtil = new DateUtil();\n  const {\n    session: { account },\n  } = useSession();\n\n  useEffect(() => {\n    document.title = 'My Account - BeenVerified';\n  }, []);\n\n  const {\n    isLimitedUser,\n    isUnlimitedUser,\n    reportLimit,\n    reportsRun,\n    reportsRunPercentage,\n    isLoading,\n    planName,\n    nextRenewalDate,\n  } = useLimitedPlanInfo();\n\n  const tabsVariation = useFeatureValue('OAR-1504', '');\n  const isInTabsVariation = tabsVariation === 'OAR-1504_variation_1';\n  const isInSingleTabVariation = tabsVariation === 'OAR-1504_variation_2';\n  const isNotInSingleTabVariation = !isInSingleTabVariation;\n\n  const isInDashboardFeaturesVariation =\n    useFeatureIsOn('OAR-1410') || isInTabsVariation || isInSingleTabVariation;\n\n  const isLanguageVariationEnabled = useFeatureIsOn('OAR-1502');\n  const preferredLanguage = usePreferredLanguage();\n  const isEnglishPreferred = preferredLanguage.includes('en');\n  const shouldShowSubscriptionsVariantForLanguage =\n    isLanguageVariationEnabled && !isEnglishPreferred;\n\n  const [openPaymentsSelectionModal, setOpenPaymentsSelectionModal] =\n    useState<boolean>(false);\n\n  const [openPaymentsUpdateModal, setOpenPaymentsUpdateModal] =\n    useState<boolean>(false);\n\n  //Paypal Redirection modal\n  const [openPaypalRedirection, setOpenPaypalRedirection] =\n    useState<boolean>(false);\n  const [paypalState, setPaypalState] = useState<'success' | 'canceled'>(\n    'success'\n  );\n  const togglePaypalRedirectionModal = () =>\n    setOpenPaypalRedirection(!openPaypalRedirection);\n\n  const [editing, setEditing] = useState<string | null>('');\n\n  const { isModalOpen, closeModal, triggerModal } = usePremiumDataModal();\n  const [searchType, setSearchType] = useState('');\n\n  const {\n    isInSingleReportVariation,\n    isInInternationalLanguageTest,\n    isInternationalVinTest,\n  } = checkPlanVariations(planName);\n\n  const onVariationCtaClick = (text?: string) => {\n    setSearchType(text || '');\n    triggerModal(true, isInSingleReportVariation);\n  };\n\n  const { ctaCardProps, length } = GenericCtaCardProps(\n    navigate,\n    isInSingleReportVariation,\n    onVariationCtaClick\n  );\n\n  const togglePaymentsSelectionModal = () =>\n    setOpenPaymentsSelectionModal(!openPaymentsSelectionModal);\n\n  const togglePaymentsUpdateModal = () => {\n    setOpenPaymentsUpdateModal(!openPaymentsUpdateModal);\n    if (!openPaymentsSelectionModal) {\n      togglePaymentsSelectionModal();\n    }\n  };\n  const CancelMyAccount = {\n    name: 'Cancel My Account',\n    display: 'Cancel My Account',\n    value: 'Cancel My Account',\n    constantValue: 'CANCEL_MY_ACCOUNT',\n  };\n  const IsinCancelVariation = useFeatureValue('OAR-1326', '');\n  const isInCancelMenuVariation_3 =\n    IsinCancelVariation === 'OAR-1326_variation_3';\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    if (urlParams.get('bvppcanc')) {\n      setPaypalState('canceled');\n      setOpenPaypalRedirection(true);\n      return;\n    }\n    if (urlParams.get('bvpp') && urlParams.get('token')) {\n      setPaypalState('success');\n      setOpenPaypalRedirection(true);\n    }\n    if (isInCancelMenuVariation_3) {\n      const exist = AccountInformationOptions.find(\n        (option) => option.value === 'Cancel My Account'\n      );\n      if (!exist) AccountInformationOptions.push(CancelMyAccount);\n    }\n  }, []);\n\n  const finishEditing = () => {\n    setEditing('');\n  };\n\n  function handleAddPaymentMethod() {\n    setOpenPaymentsSelectionModal(false);\n    setOpenPaymentsUpdateModal(true);\n  }\n\n  const has_sso_connections = account?.account?.user_info?.has_sso_connections;\n\n  let updatedItems = has_sso_connections\n    ? AccountInformationOptions.filter(\n        (item) => item.constantValue !== 'CHANGE_PASSWORD'\n      )\n    : AccountInformationOptions;\n\n  if (has_sso_connections) {\n    updatedItems.push({\n      name: 'Send Password Reset Email',\n      display: 'Send Password Reset Email',\n      value: 'Send Password Reset Email',\n      constantValue: 'PASSWORD_RESET_EMAIL',\n    });\n  }\n\n  return (\n    <>\n      <MyAccountHeader isUnlimited={isUnlimitedUser} />\n      {isInTabsVariation ? (\n        <MyAccountTabs\n          accountInformationOptions={AccountInformationOptions}\n          togglePaymentsSelectionModal={togglePaymentsSelectionModal}\n          editOptionClicked={editOptionClicked}\n          reportLimit={reportLimit}\n          reportsRun={reportsRun}\n          reportsRunPercentage={reportsRunPercentage}\n          length={length}\n          ctaCardProps={ctaCardProps}\n        />\n      ) : (\n        <>\n          {isLimitedUser &&\n            !isLoading &&\n            !isInInternationalLanguageTest &&\n            (isInternationalVinTest ? (\n              <LimitedPlanProgressVIN\n                progressValue={reportsRunPercentage}\n                reportsLimit={reportLimit}\n                reportsRun={reportsRun}\n                nextRenewalDate={\n                  dateUtil?.parseDateFromString(\n                    nextRenewalDate,\n                    'MMMM dd, yyyy'\n                  ) || ''\n                }\n              />\n            ) : (\n              <LimitedPlanProgress\n                plansWithout5ReportBlocker={\n                  constants?.data?.plansWithout5ReportBlocker\n                }\n                validReportCountThreshold={\n                  constants?.data?.validReportCountThreshold\n                }\n                progressValue={reportsRunPercentage}\n                reportsLimit={reportLimit}\n                reportsRun={reportsRun}\n                link=\"/upgrade/plan\"\n                blockUpgradeWindowThreshold={\n                  constants?.data?.blockUpgradeWindowThreshold\n                }\n              />\n            ))}\n\n          {shouldShowSubscriptionsVariantForLanguage && <ManageSubscriptions />}\n\n          {isInSingleTabVariation && <MyAccountComponents />}\n          {isInInternationalLanguageTest || isInternationalVinTest ? null : (\n            <Grid container spacing={2} justifyContent=\"center\">\n              {[...Array(length)].map((_x, index) => (\n                <Grid\n                  item\n                  xs={isInDashboardFeaturesVariation ? 6 : 12}\n                  md={isInDashboardFeaturesVariation ? 4 : 6}\n                  key={index}\n                >\n                  <GenericCtaCard\n                    {...ctaCardProps[index]}\n                    isInDashboardFeaturesVariation={\n                      isInDashboardFeaturesVariation\n                    }\n                  />\n                </Grid>\n              ))}\n            </Grid>\n          )}\n\n          <PremiumDataModal\n            isOpen={isModalOpen}\n            onClose={closeModal}\n            searchType={searchType}\n          />\n\n          <AccountEditModals\n            editing={editing}\n            finishEditing={finishEditing}\n            onCancelConfirmCancelModal={onCancelConfirmCancelModal}\n          />\n          {isNotInSingleTabVariation && (\n            <Box\n              mt={2.5}\n              nonce={undefined}\n              onResize={undefined}\n              onResizeCapture={undefined}\n            >\n              <AccountInformation\n                editOptions={updatedItems}\n                editOptionClick={(value: string | null) => {\n                  editOptionClicked(\n                    value,\n                    setOpenPaymentsSelectionModal,\n                    setEditing,\n                    updatedItems\n                  );\n                }}\n              />\n            </Box>\n          )}\n          <ViewOrderHistory />\n          {isInSingleTabVariation &&\n            !shouldShowSubscriptionsVariantForLanguage && (\n              <ManageSubscriptions />\n            )}\n        </>\n      )}\n\n      <PaymentsSelectionModal\n        open={openPaymentsSelectionModal}\n        onClose={togglePaymentsSelectionModal}\n        onAddPaymentMethod={handleAddPaymentMethod}\n      />\n      <RadioPaymentsModal\n        isOpen={openPaymentsUpdateModal}\n        onCloseHandle={togglePaymentsUpdateModal}\n      />\n\n      <PayPalRedirectionModal\n        paypalState={paypalState}\n        isOpen={openPaypalRedirection}\n        onCloseHandle={togglePaypalRedirectionModal}\n      />\n    </>\n  );\n}\n", "import {\n  useRecentReports,\n  stringifyParams,\n  generateQueryConfig,\n  ReportList,\n  type ReportType,\n  type ReportFilter,\n  DeleteAllButton,\n  useReportDeleteAll,\n  DeleteModal,\n  type RecentReportSerialized,\n} from '@ltvco/refresh-lib/v2';\nimport { Stack, Text, Divider, Pagination } from '@ltvco/refresh-lib/theme';\nimport { useQueryParams } from 'use-query-params';\nimport { useContext, useEffect, useState, useRef, useMemo } from 'react';\nimport {\n  LoadingReports,\n  NullState,\n  SearchAndFilterControls,\n  RecentReportsCardDescription,\n} from './components';\nimport { hasRunReports } from './utils';\nimport { useSession } from '@ltvco/refresh-lib/v1';\n\nimport { useLimitedPlanInfo } from 'utils/useLimitedPlanInfo';\nimport { checkPlanVariations } from 'utils/checkPlanVariations';\nimport { AppConstants } from '@ltvco/refresh-lib/ctx';\nimport { pluralizeString } from '@ltvco/refresh-lib/utils';\nimport { HistoryRounded } from '@mui/icons-material';\n\nconst queryConfig = generateQueryConfig();\n\nexport const RecentReports: React.FC = () => {\n  const {\n    config: { reportTypeFilterOptions },\n  } = useContext(AppConstants);\n  const { session } = useSession();\n  const [queryParams, setQueryParams] = useQueryParams(queryConfig);\n  const { sort_by, sort_direction } = queryParams;\n  const filteredParams = stringifyParams(queryParams);\n  const { data: queryData, isLoading } = useRecentReports(filteredParams);\n  const { planName } = useLimitedPlanInfo();\n  const { isInternationalVinTest } = checkPlanVariations(planName);\n  const [filterTypes, setFilterTypes] = useState<ReportFilter[]>(\n    queryParams.report_type || []\n  );\n\n  const reportTypes: ReportType[] = filterTypes.filter(\n    (type) => type !== 'monitored_report'\n  );\n\n  const totalReportsRef = useRef<number | null>(null);\n  const totalReports = useMemo(() => {\n    if (isLoading && totalReportsRef.current !== null) {\n      return totalReportsRef.current;\n    }\n    return queryData?.meta?.report_quantities?.total_reports_count || 0;\n  }, [queryData, isLoading]);\n\n  useEffect(() => {\n    if (!isLoading) {\n      totalReportsRef.current = totalReports;\n    }\n  }, [totalReports, isLoading]);\n  const totalFilteredReports =\n    queryData?.meta?.report_quantities?.filtered_reports_count || 0;\n  const pageCount = Math.ceil(totalFilteredReports / 20);\n\n  const reports = (queryData?.reports as RecentReportSerialized[]) || [];\n\n  const [deleteAllReportsModalOpen, setDeleteAllReportsModalOpen] =\n    useState(false);\n\n  const [currentReports, setCurrentReports] = useState(reports);\n\n  const hasZeroReports = totalReports === 0;\n  useEffect(() => {\n    setQueryParams({\n      report_type: reportTypes,\n      page: 1,\n    });\n  }, [\n    setQueryParams,\n    filterTypes,\n    hasZeroReports,\n    queryParams.search_by,\n    queryParams.sort_by,\n    queryParams.sort_direction,\n  ]);\n\n  let availableFilterTypeOptions = { ...reportTypeFilterOptions };\n\n  const deleteAllMutation = useReportDeleteAll(setCurrentReports);\n  const deleteAll = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    deleteAllMutation.mutate();\n    setDeleteAllReportsModalOpen(false);\n  };\n\n  const handleGoBack = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.stopPropagation();\n    event.preventDefault();\n    setDeleteAllReportsModalOpen(false);\n  };\n\n  const deleteCurrentReport = (permalink: string) =>\n    setCurrentReports(\n      currentReports.filter(\n        (report: RecentReportSerialized) => report.id !== permalink\n      )\n    );\n\n  const handlePageChange = (page: number) => {\n    setQueryParams({ page });\n    window.scrollTo(0, 0);\n  };\n\n  useEffect(() => {\n    setCurrentReports(reports);\n  }, [reports]);\n\n  useEffect(() => {\n    document.title = 'Recent Reports - BeenVerified';\n  }, []);\n\n  if (!isLoading && reports.length === 0 && !hasRunReports({ session })) {\n    return (\n      <Stack spacing={3.5}>\n        <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n          <HistoryRounded sx={{ fontSize: '1.25rem' }} />\n          <Text variant=\"h3\">Recent Reports</Text>\n        </Stack>\n        <NullState />\n      </Stack>\n    );\n  }\n\n  return (\n    <>\n      <Stack spacing={3.5} padding={2.5} paddingTop={1}>\n        <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n          <HistoryRounded sx={{ fontSize: '1.25rem' }} />\n          <Text variant=\"h3\">Recent Reports</Text>\n        </Stack>\n        <SearchAndFilterControls\n          filterTypes={filterTypes}\n          setFilterTypes={(filterTypes) => {\n            setFilterTypes(filterTypes);\n          }}\n          queryParams={queryParams}\n          setQueryParams={setQueryParams}\n          reportTypeFilterOptions={\n            isInternationalVinTest\n              ? {\n                  vehicle_report: availableFilterTypeOptions.vehicle_report,\n                }\n              : availableFilterTypeOptions\n          }\n          sort_by={sort_by}\n          sort_direction={sort_direction}\n        />\n        <Stack spacing={1.5} direction=\"row\">\n          <Text variant=\"caption\">\n            {currentReports.length}{' '}\n            {pluralizeString('report', currentReports.length)} viewed\n          </Text>\n          <Divider\n            sx={{ borderColor: 'text.primary' }}\n            orientation=\"vertical\"\n            flexItem\n          />\n          <DeleteAllButton\n            setDeleteAllReportsModalOpen={setDeleteAllReportsModalOpen}\n          />\n        </Stack>\n        {isLoading ? (\n          <LoadingReports />\n        ) : (\n          <ReportList\n            reportList={currentReports}\n            deleteCurrentReport={deleteCurrentReport}\n            RecentReportsCardDescription={RecentReportsCardDescription}\n          />\n        )}\n        {!isLoading && pageCount > 1 && (\n          <Stack\n            spacing={2}\n            direction={'row'}\n            sx={{ justifyContent: 'center' }}\n          >\n            <Pagination\n              page={queryParams.page}\n              count={pageCount}\n              onChange={(_: any, page: number) => handlePageChange(page)}\n              variant=\"outlined\"\n              shape=\"rounded\"\n              sx={{\n                '& .MuiPaginationItem-page, & .MuiPaginationItem-ellipsis': {\n                  display: 'none',\n                },\n              }}\n            />\n          </Stack>\n        )}\n        <>\n          <DeleteModal\n            isOpen={deleteAllReportsModalOpen}\n            setIsOpen={handleGoBack}\n            deleteMutation={deleteAll}\n            title={'Delete all reports confirmation'}\n            confirmationText=\"Are you sure you want to delete ALL of your reports?\"\n            deleteText=\"Delete all\"\n          />\n        </>\n      </Stack>\n    </>\n  );\n};\n", "import { Box, Divider, type TabData, Text } from '@ltvco/refresh-lib/theme';\nimport {\n  type SearchData,\n  type supportingTypes,\n  type serializedTypes,\n  EmptyNeighborhoodReportPage,\n  type RecentReportSerialized,\n  type TopHapProperty,\n} from '@ltvco/refresh-lib/v1';\n\ntype generateTabsProps = {\n  tabsReports: RecentReportSerialized[];\n  reportDetails: TopHapProperty;\n  address: string;\n  sexOffenders: supportingTypes.SexOffenders;\n  propertyReportGeoLat?: number;\n  propertyReportGeoLong?: number;\n  //Commenting out the allWidgetsData as tophap widgets are not working\n  // allWidgetsData: WidgetsWithSectionTitleProps[];\n  // topHapInstance: Tophap;\n};\n\nexport type ExtendedTabData = TabData & {\n  permalink: string;\n};\n\nexport const getReportDetails = (\n  property: serializedTypes.SerializedProperty\n): TopHapProperty => {\n  const reportDetails = {\n    fullAddress: property?.parcel_address?.full || '',\n    city: property?.parcel_address?.parts?.city || '',\n    house_number: property?.parcel_address?.parts?.house_number || '',\n    state: property?.parcel_address?.parts?.state || '',\n    streetName: property?.parcel_address?.parts?.streetName || '',\n    streetType: property?.parcel_address?.parts?.streetType || '',\n    title: property?.parcel_address?.parts?.street || '',\n    subtitle: `${property?.parcel_address?.parts?.cityState || ''} ${\n      property?.parcel_address?.parts?.zip || ''\n    }`,\n    zip: property?.parcel_address?.parts?.zip || '',\n    content: property?.county ? `${property?.county} County` : null,\n  } as TopHapProperty;\n\n  return reportDetails;\n};\n\nexport function generateTabs({\n  tabsReports,\n  reportDetails,\n}: //Commenting out the allWidgetsData as tophap widgets are not working\n// allWidgetsData,\n// topHapInstance,\ngenerateTabsProps): ExtendedTabData[] {\n  return tabsReports?.map((report) => {\n    const { detailsCityState, reportData } = report;\n    return {\n      label: `${reportData || ''}, ${detailsCityState || ''}`,\n      content: report.id ? (\n        <Box>\n          <Divider />\n          <Box marginTop={2} marginBottom={2}>\n            <Text variant=\"h2\" color=\"primary\" fontWeight=\"bold\">\n              {reportDetails?.title}\n            </Text>\n            <Text variant=\"h4\">{reportDetails?.subtitle}</Text>\n          </Box>\n          {/* {allWidgetsData.map((el) => {\n            return (\n              <TopHapSection\n                widgetData={el.widgetData}\n                property={reportDetails}\n                permalink={report.id}\n                sectionTitle={el.sectionTitle}\n                key={el.sectionTitle}\n                topHapInstance={topHapInstance}\n              />\n            );\n          })} */}\n        </Box>\n      ) : (\n        <EmptyNeighborhoodReportPage />\n      ),\n      permalink: report.id,\n    };\n  }) as ExtendedTabData[];\n}\n\nexport function generateFullAddressFromParams(\n  queryParams: URLSearchParams\n): string {\n  const address = queryParams.get('address') || '';\n  const city = queryParams.get('city') || '';\n  const state = queryParams.get('state') || '';\n  const zipcode = queryParams.get('zipcode') || '';\n\n  return `${address} ${city}, ${state} ${zipcode}`;\n}\n\n// There are race condition and sorting issues where searching a new report and getting the recent reports list updated\nexport function optimisticRenderingForNewReports(\n  reportsList: RecentReportSerialized[],\n  data: SearchData,\n  reportsToDisplay: number\n) {\n  const permalink = data.permalink;\n  const queryParams = new URLSearchParams(data.searchParams);\n  const address = queryParams.get('address');\n  const city = queryParams.get('city');\n  const state = queryParams.get('state');\n\n  const existingReport = reportsList.some((report) => report.id === permalink);\n  if (existingReport) return;\n\n  const optimisticReport = {\n    id: permalink,\n    reportData: address,\n    detailsCityState: `${city}, ${state}`,\n  } as RecentReportSerialized;\n\n  // Remove last report if the list is full\n  if (reportsList.length > reportsToDisplay - 1) {\n    reportsList.pop();\n  }\n\n  // Add optimistic report at the front of the list\n  reportsList.unshift(optimisticReport);\n  return reportsList;\n}\n", "import { useContext } from 'react';\nimport { useQueryParams } from 'utils/useQueryParams';\nimport { useQueryParams as useQueryParamsBBQ } from 'use-query-params';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport {\n  Grid,\n  Box,\n  Stack,\n  styled,\n  Tab,\n  Text,\n  TabsNavigation,\n  useTheme,\n} from '@ltvco/refresh-lib/theme';\nimport { SearchPropertyForm } from '@ltvco/refresh-lib/v2';\nimport {\n  type SearchData,\n  buildPreForeclosureTab,\n  buildRecentlySoldHomeTab,\n  EmptyNeighborhoodReportPage,\n  LoadingDots,\n  MarketInsights,\n  MarketTabConfigProps,\n  NeighborhoodWatch,\n  PropertyReport,\n  PropertyResults,\n  RecentReportSerialized,\n  reportGetters,\n  ReportNullState,\n  SerializedListingsData,\n  serializedTypes,\n  useReport,\n  useSearchListings,\n} from '@ltvco/refresh-lib/v1';\nimport { useEffect, useState } from 'react';\nimport {\n  generateQueryConfig,\n  stringifyParams,\n  useRecentReports,\n} from '../../../components/BBQ';\nimport {\n  ExtendedTabData,\n  generateFullAddressFromParams,\n  generateTabs,\n  getReportDetails,\n  optimisticRenderingForNewReports,\n} from './utils';\nimport { useFeatureIsOn, useQuery } from '@ltvco/refresh-lib/vendors';\nimport { isZeroed } from '@ltvco/refresh-lib/utils';\nimport {\n  ReportContextProvider,\n  AppConfig,\n  AppConstants,\n} from '@ltvco/refresh-lib/ctx';\nimport { MapRounded } from '@mui/icons-material';\n\nconst TextWithIcon = styled(Text)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginBottom: theme.spacing(4.5),\n\n  svg: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst StyledTab = styled(Tab)(({ theme }) => ({\n  width: '185px',\n  borderBottom: 'none',\n  paddingBottom: theme.spacing(1),\n}));\n\nconst queryConfig = generateQueryConfig();\nconst reportsToDisplay = 5;\n\nexport const NeighborhoodReportSection = () => {\n  /////////////////////////////\n  // States\n  /////////////////////////////\n  const [permalink, setPermalink] = useState('');\n  const [\n    shouldRequestReportFromQueryParams,\n    setShouldRequestReportFromQueryParams,\n  ] = useState(false);\n  const [, setSearchParams] = useSearchParams();\n  const [activeTab, setActiveTab] = useState(0);\n  const [reportsList, setReportsList] = useState<RecentReportSerialized[]>([]);\n  const [isManualLoading, setIsManualLoading] = useState(true);\n\n  /////////////////////////////\n  // Hooks\n  /////////////////////////////\n  const queryParams = useQueryParams();\n  const theme = useTheme();\n  const { logError, routingUtils } = useContext(AppConfig);\n  const {\n    featureFlags: { propertyReportFlags },\n  } = useContext(AppConstants);\n  const queryReportResult = useReport(permalink);\n  const zeroed = isZeroed(queryReportResult);\n  const [bbqQueryParams] = useQueryParamsBBQ(queryConfig);\n  const filteredParams = stringifyParams({ ...bbqQueryParams });\n  filteredParams.report_type = 'property_report';\n  const { data: recentReportsQueryData, isLoading: recentReportsIsLoading } =\n    useRecentReports(filteredParams);\n  const basePage = queryParams?.get('from') || 'dashboard.neighborhood-report';\n  queryParams.set('report_flags', JSON.stringify(propertyReportFlags));\n  const propertyReportGetter = reportGetters.property;\n  const isInRenameSidebarItemsVariation = useFeatureIsOn('RFRSH-2427');\n\n  // Fetch initial data from queryParams\n  useQuery({\n    queryKey: ['neighborhoodReport'],\n    queryFn: () => propertyReportGetter({ queryParams }),\n    enabled: shouldRequestReportFromQueryParams,\n    onSuccess: (data) => setPermalink(data?.report?.permalink),\n    onError: (error: Error) => logError('Neighborhood Report', error),\n  });\n\n  const firstProperty = queryReportResult?.data?.entities?.properties?.[0];\n  const searchData = {\n    // 'byram' is the name of the DD Plan which includes Listhub data\n    // to the listings endpoints response (WC - 2023/10/05).\n    dd_plan: 'byram',\n    rentals_limit: '10',\n    pfc_limit: '10',\n    listings_limit: '10',\n    city: firstProperty?.parcel_address?.parsed?.city,\n    state: firstProperty?.state,\n    brand: 'nw',\n  };\n  let { data: searchListingsResult = [] } = useSearchListings(\n    searchData,\n    Boolean(firstProperty?.parcel_address?.parsed?.city && firstProperty?.state)\n  );\n\n  /////////////////////////////\n  // Variables\n  /////////////////////////////\n\n  //Commenting out the topHapInstance as tophap widgets are not working\n  // const topHapInstance = new Tophap() as Tophap;\n  const optionalProps = {\n    label: 'Every home belongs to an area. Explore yours.',\n    alignment: 'start',\n    buttonWidth: '20%',\n    inputWidth: '50%',\n    customPx: 0,\n    showFcra: false,\n    customLabelStyles: {\n      fontSize: '16px',\n      marginBottom: '16px',\n      display: 'inline-block',\n      lineHeight: '1.5',\n      letterSpacing: '0.00938em',\n      fontFamily: '“Roboto”,“Helvetica”,“Arial”,sans-serif',\n    },\n  };\n\n  if (\n    !permalink &&\n    !recentReportsIsLoading &&\n    reportsList?.length &&\n    !isManualLoading\n  ) {\n    const firstPermalink = reportsList?.[0].id;\n    setPermalink(firstPermalink);\n    setSearchParams({ permalink: firstPermalink });\n  }\n\n  const headerText = isInRenameSidebarItemsVariation\n    ? 'My Neighborhood'\n    : 'Neighborhood Report';\n\n  // Property Report data\n  const report = new PropertyReport(queryReportResult?.data);\n  const property = report.data.properties[0];\n  const reportDetails = getReportDetails(property);\n  const fullAddress = generateFullAddressFromParams(queryParams);\n  const displayAddress = report.data.address || fullAddress;\n\n  // NearbyProperties data\n  const listingsFetchResults = (searchListingsResult as SerializedListingsData)\n    ?.listing_teaser;\n  const preforeclosureData = listingsFetchResults?.preforeclosures || [];\n  const totalPreforeclosures =\n    listingsFetchResults?.meta?.available?.market?.preforeclosures || 0;\n\n  let nearbyPropertiesTabs = {} as MarketTabConfigProps[];\n\n  const navigate = useNavigate();\n\n  const listingsNavigateAction = (\n    property: serializedTypes.SerializedProperty,\n    type?: string\n  ) => {\n    const { city, state, zip5 } = property?.parcel_address?.parsed || {\n      city: '',\n      state: '',\n      zip5: '',\n    };\n    const url = `/search/listing?city=${city}&state=${state}&zip5=${zip5}&search_type=${\n      type || 'pre_foreclosures'\n    }`;\n    navigate(url);\n  };\n\n  if (property) {\n    nearbyPropertiesTabs = [\n      buildRecentlySoldHomeTab({\n        property,\n        data: property?.comparables || [],\n      }),\n      buildPreForeclosureTab({\n        property,\n        data: preforeclosureData,\n        navigateAction: listingsNavigateAction,\n        totalDataValues: totalPreforeclosures,\n      }),\n    ];\n  }\n\n  // NeighborhoodWatch data\n  const sexOffenders = report?.data?.sex_offenders;\n  const propertyReportGeoLat: number | undefined =\n    property?.parcel_address?.geo?.latitude ?? undefined;\n  const propertyReportGeoLong: number | undefined =\n    property?.parcel_address?.geo?.longitude ?? undefined;\n\n  //Commenting out the checksForUrl as tophap widgets are not working\n\n  // Widgets data\n  // const checksForUrl: boolean =\n  //   !!reportDetails?.fullAddress && !!topHapApiKey && !!topHapBaseUrl;\n\n  //Commenting out the allWidgetsData as tophap widgets are not working\n  // const allWidgetsData: WidgetsWithSectionTitleProps[] = [\n  //   {\n  //     widgetData: getNeighborhoodData({\n  //       checksForUrl,\n  //       property: reportDetails,\n  //       topHapApiKey: topHapApiKey || '',\n  //       topHapBaseUrl: topHapBaseUrl || '',\n  //       getTopHapWidgetUrl: topHapInstance?.getTopHapWidgetUrl,\n  //     }),\n  //     sectionTitle: 'Neighborhood',\n  //   },\n  //   {\n  //     widgetData: getMarketData({\n  //       checksForUrl,\n  //       property: reportDetails,\n  //       topHapApiKey: topHapApiKey || '',\n  //       topHapBaseUrl: topHapBaseUrl || '',\n  //       getTopHapWidgetUrl: topHapInstance?.getTopHapWidgetUrl,\n  //     }),\n  //     sectionTitle: 'Market',\n  //   },\n  //   {\n  //     widgetData: getAreaData({\n  //       checksForUrl,\n  //       property: reportDetails,\n  //       topHapApiKey: topHapApiKey || '',\n  //       topHapBaseUrl: topHapBaseUrl || '',\n  //       getTopHapWidgetUrl: topHapInstance?.getTopHapWidgetUrl,\n  //     }),\n  //     sectionTitle: 'Area',\n  //   },\n  // ];\n\n  let currentTabs = [] as ExtendedTabData[];\n\n  if (reportsList?.length) {\n    currentTabs = generateTabs({\n      tabsReports: reportsList,\n      reportDetails,\n      address: displayAddress,\n      sexOffenders,\n      propertyReportGeoLat,\n      propertyReportGeoLong,\n      //Commenting out the allWidgetsData as tophap widgets are not working\n      //allWidgetsData,\n      // topHapInstance: topHapInstance,\n    });\n  }\n\n  /////////////////////////////\n  // Lifecycle Functions\n  /////////////////////////////\n  useEffect(() => {\n    document.title = 'Neighborhood Report - BeenVerified';\n\n    const manualLoadingTimer = setTimeout(() => {\n      setIsManualLoading(false);\n    }, 5000);\n\n    return () => clearTimeout(manualLoadingTimer);\n  }, []);\n\n  useEffect(() => {\n    if (!recentReportsIsLoading) {\n      const recentReports =\n        (recentReportsQueryData?.reports as RecentReportSerialized[]) || [];\n\n      const filteredRecentReports = recentReports\n        .filter((report) => !Boolean(report.details?.no_entities))\n        .slice(0, reportsToDisplay);\n\n      setReportsList(filteredRecentReports);\n    }\n  }, [recentReportsQueryData?.reports]);\n\n  // Update the parmalink based on the query params\n  useEffect(() => {\n    if (queryParams.size === 0) {\n      setPermalink('');\n      setShouldRequestReportFromQueryParams(false);\n    } else if (queryParams?.get('permalink')) {\n      setPermalink(queryParams?.get('permalink') || '');\n    } else if (queryParams?.get('address')) {\n      setShouldRequestReportFromQueryParams(true);\n    }\n  }, [queryParams]);\n\n  // Update the active tab based on permalink and reports list changes\n  useEffect(() => {\n    const highlightedTabIndex = reportsList.findIndex(\n      (report) => report.id === permalink\n    );\n\n    setActiveTab(highlightedTabIndex);\n  }, [reportsList, permalink]);\n\n  /////////////////////////////\n  // Helper Functions\n  /////////////////////////////\n  const handleReportChange = (permalink: string, searchParams?: string) => {\n    let baseUrl = '/dashboard/neighborhood-report?';\n    if (searchParams?.length) {\n      baseUrl = `${baseUrl}${searchParams}&`;\n    }\n    const url = `${baseUrl}permalink=${permalink}&from=dashboard.neighborhood-report`;\n    routingUtils.navigate(url);\n  };\n\n  /////////////////////////////\n  // Render Functions\n  /////////////////////////////\n  if (zeroed) {\n    return <ReportNullState />;\n  }\n\n  if (!report) {\n    return <h1>[[Placeholder: No Report Data]]</h1>;\n  }\n\n  if (\n    queryReportResult.status === 'loading' ||\n    recentReportsIsLoading ||\n    isManualLoading\n  ) {\n    return (\n      <Stack sx={{ marginTop: '30%', height: '100vh' }}>\n        <LoadingDots count={6} />\n      </Stack>\n    );\n  }\n\n  if (queryReportResult?.data?.meta?.no_entities) {\n    const options = queryReportResult?.data?.entities?.options;\n\n    return (\n      <ReportContextProvider permalink={permalink} reportType=\"neighborhood\">\n        <Grid\n          sx={{\n            flexDirection: 'column',\n            paddingBottom: '20px',\n          }}\n          container\n        >\n          <PropertyResults\n            searchAddress={report?.data?.address || fullAddress}\n            options={options}\n            fromDashboard={basePage}\n            pageOptions={{\n              disableSubheadline: Boolean(options?.properties?.length < 1),\n            }}\n          />\n        </Grid>\n      </ReportContextProvider>\n    );\n  }\n\n  return (\n    <>\n      <Box>\n        <TextWithIcon variant=\"h1\">\n          <MapRounded\n            sx={{ color: theme.palette.primary.main }}\n            fontSize=\"large\"\n          />\n          {headerText}\n        </TextWithIcon>\n        <Box>\n          <SearchPropertyForm\n            options={optionalProps}\n            onSuccess={(data: SearchData) => {\n              setReportsList(\n                optimisticRenderingForNewReports(\n                  reportsList,\n                  data,\n                  reportsToDisplay\n                ) || []\n              );\n              handleReportChange(data?.permalink, data?.searchParams);\n            }}\n          />\n        </Box>\n        {!!reportsList?.length && (\n          <Box pt={4.5} pb={2}>\n            <TabsNavigation\n              externalActiveTab={activeTab}\n              textColor=\"primary\"\n              indicatorColor=\"primary\"\n              onTabChanged={(currentTab) => {\n                handleReportChange(currentTabs[currentTab].permalink);\n                setActiveTab(currentTab);\n              }}\n              variant=\"scrollable\"\n              scrollButtons=\"auto\"\n              allowScrollButtonsMobile\n              aria-label=\"reports tabs\"\n              tab={StyledTab}\n              tabs={currentTabs}\n              sx={{\n                '.MuiButtonBase-root': {\n                  textAlign: 'left',\n                  alignItems: 'start',\n                },\n              }}\n            />\n            <NeighborhoodWatch\n              sexOffendersList={sexOffenders}\n              address={displayAddress}\n              addressLat={propertyReportGeoLat}\n              addressLong={propertyReportGeoLong}\n            />\n            {property && (\n              <MarketInsights\n                propertyAddress={displayAddress}\n                tabs={nearbyPropertiesTabs?.filter((item) => !!item)}\n                hideSectionOptions={true}\n              />\n            )}\n          </Box>\n        )}\n      </Box>\n      {!reportsList?.length && <EmptyNeighborhoodReportPage />}\n    </>\n  );\n};\n", "import { Stack } from '@ltvco/refresh-lib/theme';\nimport { MyGarageContainer } from '@ltvco/refresh-lib/v1';\nimport { useEffect } from 'react';\n\nexport function MyGarage() {\n  useEffect(() => {\n    document.title = 'My Vehicle - BeenVerified';\n  }, []);\n\n  return (\n    <Stack justifyContent={'space-around'} sx={{ ml: 0, mt: 1, px: 1 }}>\n      <MyGarageContainer />\n    </Stack>\n  );\n}\n", "import { Stack, Tab, TabsNavigation, styled } from '@ltvco/refresh-lib/theme';\nimport { ClaimedReportMonitorTiles } from 'components/idMonitor/ClaimedReportMonitorsContainer/ClaimedReportMonitorTiles';\nimport { IdMonitorContainer } from 'components/idMonitor/IdMonitorContainer';\nimport { OneTimePasscodeProvider } from 'components/idMonitor/Oxford/OneTimePasscodeContext';\nimport { useEffect, useState, useContext } from 'react';\nimport { MainHeader } from 'components/idMonitor/MainHeader';\nimport { useQueryParams } from 'utils/useQueryParams';\nimport { SettingsTiles } from 'components/idMonitor/SettingsTiles/SettingsTiles';\nimport { useFeatureIsOn } from '@ltvco/refresh-lib/vendors';\nimport { AppConfig } from '@ltvco/refresh-lib/ctx';\n\nconst StyledTabsNavigation = styled(TabsNavigation)(({ theme }) => ({\n  color: theme.palette.background.light,\n  borderBottom: 'solid',\n  marginBottom: theme.spacing(2.5),\n}));\n\nexport const IdMonitor = () => {\n  const [activeTab, setActiveTab] = useState(0);\n  const isIn1448Variation = useFeatureIsOn('OAR-1448');\n  const isNotInRenameSidebarItemsVariation = !useFeatureIsOn('RFRSH-2427');\n\n  const { trackEvent } = useContext(AppConfig);\n  const queryParams = useQueryParams();\n  const escalatedParam = queryParams.get('escalated');\n\n  // Remove tabs from URL for users in the 1448 variation\n  useEffect(() => {\n    if (isIn1448Variation) {\n      // Remove any tab parameters from the URL\n      window.history.replaceState({}, '', window.location.pathname);\n    }\n  }, [isIn1448Variation]);\n\n  useEffect(() => {\n    if (!isIn1448Variation) {\n      const tabParam = queryParams.get('tab');\n      if (tabParam === 'settings') {\n        setActiveTab(0);\n      } else if (escalatedParam === 'true' || tabParam === 'monitor') {\n        setActiveTab(1);\n      } else {\n        window.history.replaceState({}, '', `?tab=settings`);\n        setActiveTab(0);\n      }\n    }\n  }, [queryParams, isIn1448Variation]);\n\n  useEffect(() => {\n    if (!isIn1448Variation) {\n      const newTab = activeTab === 0 ? 'settings' : 'monitor';\n      // Update URL with selected tab parameter\n      const escalatedParamUrl: string =\n        escalatedParam === 'true' ? 'escalated=true&' : '';\n      window.history.replaceState({}, '', `?${escalatedParamUrl}tab=${newTab}`);\n    }\n  }, [activeTab, escalatedParam, isIn1448Variation]);\n\n  const settingsTab = () => {\n    return (\n      <Stack gap={2.5}>\n        <SettingsTiles setIsSettingsTab={() => setActiveTab(1)} />\n        {isNotInRenameSidebarItemsVariation && <ClaimedReportMonitorTiles />}\n      </Stack>\n    );\n  };\n\n  return (\n    <>\n      {isIn1448Variation ? (\n        <ClaimedReportMonitorTiles />\n      ) : (\n        <Stack direction=\"column\">\n          <MainHeader />\n          <StyledTabsNavigation\n            externalActiveTab={activeTab}\n            onTabChanged={(currentTab: number) => {\n              const newTab = currentTab === 0 ? 'settings' : 'monitor';\n              trackEvent(\n                newTab === 'settings' ? 'settings tab' : 'monitor tab',\n                'navigation click',\n                'id monitor settings'\n              );\n              setActiveTab(currentTab);\n            }}\n            tab={Tab}\n            tabs={[\n              {\n                content: settingsTab(),\n                label: 'Settings',\n              },\n              {\n                content: (\n                  <OneTimePasscodeProvider>\n                    <IdMonitorContainer />\n                  </OneTimePasscodeProvider>\n                ),\n                label: 'Monitor',\n              },\n            ]}\n          />\n        </Stack>\n      )}\n    </>\n  );\n};\n", "import TransunionLogo from 'images/id-monitor-transunion-logo.svg';\nimport ExperianLogo from 'images/id-monitor-experian-logo.svg';\nimport EquifaxLogo from 'images/id-monitor-equifax-logo.svg';\n\ntype CreditBureauConsts = {\n  logo: string;\n  sections: {\n    title: string;\n    body: {\n      address: string;\n      numbers?: string[];\n      website: string;\n      displayFriendlyWebsite?: string;\n    };\n  }[];\n}[];\n\nexport const creditBureauConsts: CreditBureauConsts = [\n  {\n    logo: TransunionLogo,\n    sections: [\n      {\n        title: 'Dispute Information',\n        body: {\n          address: 'P.O. Box 2000\\nChester, PA 19016',\n          numbers: ['(800) 916-8800'],\n          website: 'dispute.transunion.com',\n        },\n      },\n      {\n        title: 'Freeze',\n        body: {\n          address: 'P.O. Box 160\\nWoodlyn, PA 19094',\n          numbers: ['(800) 909-8872'],\n          website: 'transunion.com/credit-freeze',\n        },\n      },\n      {\n        title: 'Fraud',\n        body: {\n          address: 'P.O. Box 2000\\nChester, PA 19016',\n          numbers: ['(800) 680-7289'],\n          website: 'fraud.transunion.com',\n        },\n      },\n    ],\n  },\n  {\n    logo: EquifaxLogo,\n    sections: [\n      {\n        title: 'Order Credit Report',\n        body: {\n          address: 'P.O. Box 740241\\nAtlanta, GA 30374',\n          numbers: ['(866) 349-5191', '(866) 478-0030 (TDD)'],\n          website: 'equifax.com',\n        },\n      },\n      {\n        title: 'Dispute Information',\n        body: {\n          address: 'P.O. Box 740256\\nAtlanta, GA 30374',\n          numbers: ['(800) 349-5191'],\n          website: 'equifax.com',\n        },\n      },\n      {\n        title: 'Freeze',\n        body: {\n          address: 'P.O. Box 105788\\nAtlanta, GA 30348',\n          numbers: ['(800) 349-9960'],\n          website: 'equifax.com/personal/credit-report-services/credit-freeze/',\n          displayFriendlyWebsite: 'equifax.com/credit-freeze',\n        },\n      },\n      {\n        title: 'Fraud',\n        body: {\n          address: 'P.O. Box 105069\\nAtlanta, GA 30348',\n          numbers: ['(800) 525-6285'],\n          website: 'equifax.com',\n        },\n      },\n    ],\n  },\n  {\n    logo: ExperianLogo,\n    sections: [\n      {\n        title: 'Order Credit Report',\n        body: {\n          address: 'P.O. Box 2002\\nAllan, TX 75013',\n          website: 'experian.com',\n        },\n      },\n      {\n        title: 'Dispute Information',\n        body: {\n          address: 'P.O. Box 4500\\nAllen, TX 75013',\n          website: 'experian.com',\n        },\n      },\n      {\n        title: 'Fraud/Freeze',\n        body: {\n          address: 'P.O. Box 9554\\nAllen, TX 75013',\n          numbers: ['(888) 397-3742'],\n          website: 'experian.com/freeze',\n        },\n      },\n    ],\n  },\n];\n", "import {\n  Button,\n  Divider,\n  Grid,\n  Link,\n  Stack,\n  Text,\n  useTheme,\n} from '@ltvco/refresh-lib/theme';\nimport { creditBureauConsts } from './utils';\nimport { useNavigate } from 'react-router-dom';\nimport { ArrowBack } from '@mui/icons-material';\n\nexport const CreditBureauContacts = () => {\n  const theme = useTheme();\n\n  const navigate = useNavigate();\n\n  const buildGridItems = () => {\n    return creditBureauConsts.map((bureau, index) => {\n      return (\n        <Grid\n          item\n          xs={12}\n          sm={3.7}\n          key={'contact-bureau-' + index}\n          padding={2.5}\n          sx={{ backgroundColor: theme.palette.background.default }}\n        >\n          <img src={bureau.logo} width=\"124px\" height=\"33px\" />\n\n          <Divider sx={{ my: 1.25, height: '1px' }} />\n\n          {bureau.sections.map((section, sectionIndex) => {\n            const marginBottom =\n              sectionIndex < bureau.sections.length - 1 ? 2.5 : 0;\n\n            return (\n              <Stack\n                mb={marginBottom}\n                key={`contact-bureau-${index}-${sectionIndex}`}\n              >\n                <Text variant=\"h6\" mb={1}>\n                  {section.title}\n                </Text>\n\n                <Text variant=\"body1\" whiteSpace=\"pre-wrap\" mb={1}>\n                  {section.body.address}\n                </Text>\n                {section.body?.numbers?.map((number, numberIndex) => {\n                  return (\n                    <Text\n                      variant=\"body1\"\n                      mb={1}\n                      key={`contact-bureau-${index}-${sectionIndex}-${numberIndex}`}\n                    >\n                      {number}\n                    </Text>\n                  );\n                })}\n                <Link href={`https://${section.body.website}`} target=\"_blank\">\n                  {section.body.displayFriendlyWebsite || section.body.website}\n                </Link>\n              </Stack>\n            );\n          })}\n        </Grid>\n      );\n    });\n  };\n\n  return (\n    <>\n      <Button\n        variant=\"text\"\n        data-testid=\"back-button\"\n        onClick={() => navigate('/dashboard/id-monitor')}\n        startIcon={<ArrowBack color=\"inherit\" />}\n        sx={{\n          textDecoration: 'underline',\n          color: 'text.primary',\n          marginBottom: 2.5,\n        }}\n      >\n        Back to ID Monitor\n      </Button>\n\n      <Text variant=\"h1\">Credit Bureau Contact Information</Text>\n\n      <Divider sx={{ my: 2.5, height: '1px' }} />\n\n      <Grid container justifyContent={'space-between'} rowGap={2}>\n        {buildGridItems()}\n      </Grid>\n    </>\n  );\n};\n", "import { useServiceToken } from '@ltvco/refresh-lib/v1';\nimport { Loading } from 'components/idMonitor/Loading';\nimport { NotificationAlertsSummaries } from 'components/idMonitor/NotificationsAlertsSummaries';\nimport { useOxford } from 'components/idMonitor/Oxford/Oxford';\nimport { sessionEscalationURL } from 'components/idMonitor/Oxford/constants';\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nexport const AlertDetails = () => {\n  const navigate = useNavigate();\n\n  let { isError: isServiceTokenError } = useServiceToken(\n    'oxford',\n    sessionEscalationURL\n  );\n\n  const {\n    data,\n    isError: isNotificationsError,\n    markAllNotificationsAsDisplayed,\n  } = useOxford().useNotifications();\n\n  if (isNotificationsError || isServiceTokenError) {\n    navigate('/dashboard/id-monitor?escalated=true');\n  }\n\n  useEffect(() => {\n    if (data) {\n      markAllNotificationsAsDisplayed();\n    }\n  }, [data]);\n\n  if (data) {\n    return (\n      <NotificationAlertsSummaries\n        notifications={data?.notifications.notifications}\n      />\n    );\n  }\n\n  return <Loading />;\n};\n", "import { Fragment, useContext } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { AppConfig } from '@ltvco/refresh-lib/ctx';\nimport { Stack, Text, styled, useTheme } from '@ltvco/refresh-lib/theme';\nimport { useScreenSize } from '@ltvco/refresh-lib/utils';\nimport { ObituarySearchForm } from '@ltvco/refresh-lib/v1';\nimport { LocalFlorist } from '@mui/icons-material';\n\nconst TextWithIcon = styled(Text)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginBottom: 0,\n\n  svg: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport function ObituarySearchPage() {\n  const { isMobile } = useScreenSize();\n  const theme = useTheme();\n  const { trackEvent, trackEventGA4 } = useContext(AppConfig);\n\n  const [searchParams] = useSearchParams();\n\n  trackEvent('view obituary search page', 'view', 'obituary search view');\n\n  function trackGA4() {\n    trackEventGA4({\n      event_name: 'report_search',\n      report_type: 'obituary',\n      search_by: 'obituary',\n      search_from: `obituary_search_page`,\n    });\n  }\n\n  return (\n    <Fragment>\n      <Stack gap={2}>\n        <TextWithIcon variant=\"h1\">\n          <LocalFlorist sx={{ color: theme.palette.primary.main}} fontSize=\"large\" /> Obituary\n          Search\n        </TextWithIcon>\n        <ObituarySearchForm\n          miniView={isMobile}\n          trackEvent={trackGA4}\n          defaults={searchParams}\n        />\n      </Stack>\n    </Fragment>\n  );\n}\n", "import { ReferralForm } from '@ltvco/refresh-lib/v1';\nimport { useEffect } from 'react';\n\nexport const Referrals = () => {\n  useEffect(() => {\n    document.title = 'Referrals - BeenVerified';\n  }, []);\n\n  return <ReferralForm />;\n};\n", "import { Stack, styled, Text } from '@ltvco/refresh-lib/theme';\n\nexport const PreTestTopSection = styled(Stack)(({ theme }) => ({\n  alignItems: 'center',\n  wdith: '100%',\n  [theme.breakpoints.down('sm')]: {\n    alignItems: 'flex-start',\n  },\n}));\n\nexport const PreTestTopSubtitle = styled(Text)(({ theme }) => ({\n  textAlign: 'center',\n  width: '75%',\n  marginBottom: '24px',\n  [theme.breakpoints.down('sm')]: {\n    width: '100%',\n    textAlign: 'left',\n  },\n}));\n\nexport const PreTestBottomSection = styled(Stack)(({ theme }) => ({\n  flexDirection: 'row',\n  marginTop: '36px',\n  width: '95%',\n  justifyContent: 'space-around',\n  [theme.breakpoints.down('sm')]: {\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\nexport const PreTestSuggestionContainer = styled(Stack)(({ theme }) => ({\n  alignItems: 'flex-start',\n  width: '30%',\n  padding: 2,\n  justifyContent: 'space-evenly',\n  [theme.breakpoints.down('sm')]: {\n    width: '100%',\n  },\n}));\n\nexport const PreTestFourMainPersonalityTypesContainer = styled(Stack)(\n  ({ theme }) => ({\n    width: '95%',\n    borderRadius: '8px',\n    backgroundColor: '#4A3B8F',\n    padding: '24px',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n    },\n  })\n);\n\nexport const PreTestFourMainPersonalityTypesLeftSection = styled(Stack)(\n  ({ theme }) => ({\n    width: '50%',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n    },\n  })\n);\n\nexport const PreTestFourMainPersonalityTypesRightSection = styled(Stack)(\n  ({ theme }) => ({\n    width: '50%',\n    flexWrap: 'wrap',\n    flexDirection: 'row',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n    },\n  })\n);\n\nexport const PreTestFourMainPersonalityTypesRightSubSection = styled(Stack)(\n  ({ theme }) => ({\n    width: '45%',\n    height: '50%',\n    borderRadius: '8px',\n    margin: '8px',\n    padding: '16px',\n    backgroundColor: 'white',\n  })\n);\n", "import { Button, Divider, Stack, Text } from '@ltvco/refresh-lib/theme';\nimport { useScreenSize } from '@ltvco/refresh-lib/utils';\nimport { constants } from 'appConstants';\n\nimport {\n  PreTestBottomSection,\n  PreTestSuggestionContainer,\n  PreTestTopSection,\n  PreTestTopSubtitle,\n} from './components';\nimport { Favorite, People, Work } from '@mui/icons-material';\n\ntype PreTestPersonalityTraitsProps = {\n  onSearch: () => void;\n};\n\nexport const PreTestPersonalityTraits = ({\n  onSearch,\n}: PreTestPersonalityTraitsProps) => {\n  const { isMobile } = useScreenSize();\n  const fourMainPersonalityTypes = constants.images.fourMainPersonalityTypes;\n  const fourMainPersonalityTypesMobile =\n    constants.images.fourMainPersonalityTypesMobile;\n\n  return (\n    <Stack alignItems=\"center\">\n      <PreTestTopSection>\n        <Text variant=\"h1\" marginBottom=\"16px\">\n          Discover Your Personality\n        </Text>\n        <PreTestTopSubtitle>\n          Unlock the secrets to your unique strengths and attributes with our\n          comprehensive personality test. By understanding your personality\n          type, you can gain insights that will help you in every aspect of your\n          life.\n        </PreTestTopSubtitle>\n        <Button\n          variant=\"contained\"\n          sx={{ marginBottom: '36px' }}\n          fullWidth={isMobile}\n          onClick={onSearch}\n        >\n          Find Your Personality Type\n        </Button>\n        <img\n          src={\n            isMobile ? fourMainPersonalityTypesMobile : fourMainPersonalityTypes\n          }\n          alt=\"four-main-personality-types\"\n          width={isMobile ? '100%' : '95%'}\n        />\n      </PreTestTopSection>\n      <Stack width=\"95%\" marginTop=\"36px\">\n        <Text variant=\"h2\">Why Take the Test?</Text>\n        <Text>\n          By taking our test, you’ll be on your way to understanding yourself\n          better, improving your relationships, and achieving your personal and\n          professional goals.\n        </Text>\n      </Stack>\n      <PreTestBottomSection>\n        <PreTestSuggestionContainer>\n          <Favorite />\n          <Text fontWeight=\"bold\" marginTop=\"16px\">\n            Understand Yourself Better:\n          </Text>\n          <Text marginTop=\"8px\">\n            Gain insights into your personality traits, preferences, and\n            potential to make informed decisions and live more authentically.\n          </Text>\n        </PreTestSuggestionContainer>\n        <Divider orientation=\"vertical\" flexItem sx={{ margin: '8px' }} />\n        <PreTestSuggestionContainer>\n          <People />\n          <Text fontWeight=\"bold\" marginTop=\"16px\">\n            Improve Your Relationships:\n          </Text>\n          <Text marginTop=\"8px\">\n            Enhance communication and empathy to build stronger, more fulfilling\n            personal and professional relationships.\n          </Text>\n        </PreTestSuggestionContainer>\n        <Divider orientation=\"vertical\" flexItem sx={{ margin: '8px' }} />\n        <PreTestSuggestionContainer>\n          <Work />\n          <Text fontWeight=\"bold\" marginTop=\"16px\">\n            Achieve Your Goals:\n          </Text>\n          <Text marginTop=\"8px\">\n            Set realistic goals and develop strategies by understanding your\n            strengths and areas for growth, guiding you to success.\n          </Text>\n        </PreTestSuggestionContainer>\n      </PreTestBottomSection>\n    </Stack>\n  );\n};\n", "import { Stack, Text } from '@ltvco/refresh-lib/theme';\nimport { useScreenSize } from '@ltvco/refresh-lib/utils';\nimport { Psychology } from '@mui/icons-material';\nimport { constants } from 'appConstants';\n\nexport const PersonalityHeader = () => {\n  const { isMobile } = useScreenSize();\n  const { personalityColorBanner, personalityColorBar } = constants.images;\n\n  return (\n    <Stack spacing={2} my={2}>\n      <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n        <Psychology fontSize=\"large\" />\n        <Text variant=\"h1\">Personality Trait</Text>\n      </Stack>\n      <img\n        src={isMobile ? personalityColorBar : personalityColorBanner}\n        alt=\"personality-color-banner\"\n      />\n    </Stack>\n  );\n};\n", "export type PersonalityTraitsTestHashMap = {\n  [key: string]: string;\n};\n\nexport type PersonalityTraitsTooltipsCopyHashMap = {\n  [key: string]: string;\n};\n\nexport type PersonalityTraitsHashMap = {\n  [key: string]: {\n    [key: string]: string;\n  };\n};\n\nexport const personalityTestTraitsHashMap: PersonalityTraitsTestHashMap = {\n  bigFive: 'Big Five',\n  disc: 'DISC',\n  fourAspects: 'Four Aspects',\n};\n\nexport const personalityTraitsTooltipsCopyHashMap: PersonalityTraitsTooltipsCopyHashMap =\n  {\n    bigFive:\n      'The Big Five Aspects Scale is a personality test that measures five traits: neuroticism, agreeableness, conscientiousness, extraversion, and openness/intellect.',\n    disc: 'The DISC test is a personality and behavioral self-assessment tool that categorizes people into four personality traits: dominance, influence, stability, and compliance.',\n    fourAspects:\n      'The Four Aspects test is a personality self-assessment that uses the unique combination of four scales to determine a personality type. The four scales are: outgoingness (introversion vs. extraversion), creativity vs. realism, bias vs. objectivity, and spontaneity vs. realism.',\n  };\n\nexport const personalityTraitsHashMap: PersonalityTraitsHashMap = {\n  bigFive: {\n    neuroticism: 'Neuroticism',\n    agreeableness: 'Agreeableness',\n    conscientiousness: 'Conscientiousness',\n    extraversion: 'Extraversion',\n    openness: 'Open Mindedness',\n  },\n  disc: {\n    dominance: 'Dominance',\n    influence: 'Influence',\n    stability: 'Stability',\n    compliance: 'Compliance',\n  },\n  fourAspects: {\n    extraversion2: 'Extraversion',\n    realism: 'Realism',\n    objectivity: 'Objectivity',\n    planning: 'Planning',\n  },\n};\n", "import { PersonalityStrengthWeakness, TraitDescription } from './types';\n\nexport const usePersonalityDescriptions = () => {\n  // traits and types are the same for big five since the type is just the most dominant trait\n  const bigFiveTraits = [\n    'agreeableness',\n    'conscientiousness',\n    'extraversion',\n    'neuroticism',\n    'openness',\n  ];\n\n  // traits and types are the same for disc since the type is just the most dominant trait\n  const discTraits = ['compliance', 'dominance', 'influence', 'stability'];\n\n  // extraversion2 is to distinguish it from big five for easier accessing\n  const fourAspectsTraits = [\n    'extraversion2',\n    'realism',\n    'objectivity',\n    'planning',\n  ];\n\n  const fourAspectsTypes = [\n    'ECBP',\n    'ECBS',\n    'ECOP',\n    'ECOS',\n    'ERBP',\n    'ERBS',\n    'EROP',\n    'EROS',\n    'ICBP',\n    'ICBS',\n    'ICOP',\n    'ICOS',\n    'IRBP',\n    'IRBS',\n    'IROP',\n    'IROS',\n  ];\n\n  const getFourAspectsType = (fourAspectsAnalysis: {\n    [trait: string]: string;\n  }) => {\n    const traitMap = fourAspectsTraits.map((trait: string) =>\n      fourAspectsAnalysis[trait].charAt(0).toLocaleUpperCase()\n    );\n    return traitMap.join('');\n  };\n\n  const traitAndTypeDescriptions = {\n    agreeableness: {\n      title: 'Agreeable',\n      description: [\n        \"Agreeableness measures an individual's concern for cooperation and social harmony. Agreeable individuals are considerate, friendly, generous, helpful, and willing to compromise, often believing in the inherent honesty and decency of others. They are optimistic about human nature and value getting along with others.\",\n        \"Disagreeable individuals prioritize self-interest over social harmony, often being unconcerned with others' well-being. Their skepticism about others' motives can make them suspicious, unfriendly, and uncooperative. While agreeableness aids in popularity and likability, it may not be advantageous in situations requiring tough or objective decisions. Disagreeable individuals may excel in roles such as scientists, critics, or soldiers, where critical thinking and skepticism are beneficial.\",\n      ],\n      summarizedDescription: [\n        \"Agreeableness measures an individual's concern for cooperation and social harmony.\",\n        'Agreeable individuals are considerate, friendly, generous, helpful, and willing to compromise, often believing in the inherent honesty and decency of others.',\n      ],\n    },\n    conscientiousness: {\n      title: 'Conscientious',\n      description: [\n        'Conscientiousness involves the control, regulation, and direction of impulses. It is linked to intelligence, as it enables individuals to consider future consequences before acting. This trait encompasses the contemplation of long-term goals, organized planning, and persistence despite short-lived impulses. High conscientiousness, also known as prudence, indicates wisdom and caution.',\n        'People high in this trait are seen as intelligent and reliable, often avoiding trouble and achieving success through careful planning and perseverance. However, they may also be viewed as compulsive perfectionists and workaholics, sometimes perceived as stuffy and boring. In contrast, those low in conscientiousness may be seen as unreliable and lacking ambition but enjoy short-lived pleasures and are never considered stuffy.',\n      ],\n      summarizedDescription: [\n        'Conscientiousness involves the control, regulation, and direction of impulses.',\n        'This trait encompasses the contemplation of long-term goals, organized planning, and persistence despite short-lived impulses.',\n      ],\n    },\n    extraversion: {\n      title: 'Extroverted',\n      description: [\n        'Extraversion involves active engagement with the external world. Extroverts enjoy being with people, are energetic, and often experience positive emotions. They are enthusiastic, action-oriented, and eager for excitement, frequently asserting themselves and seeking attention in social settings.',\n        'In contrast, introverts are quieter, more deliberate, and less socially active. They require less stimulation and prefer solitude, which is not due to shyness or depression. Their independence and reserve may be mistaken for unfriendliness or arrogance, but introverts can be pleasant when approached, despite not seeking social interaction.',\n      ],\n      summarizedDescription: [\n        'Extraversion involves active engagement with the external world.',\n        'Extroverts enjoy being with people, are energetic, and often experience positive emotions.',\n      ],\n    },\n    neuroticism: {\n      title: 'Neurotic',\n      description: [\n        \"Neuroticism, initially described by Freud as neurosis, involves mental distress, emotional suffering, and difficulty coping with life's demands. Freud believed everyone exhibits some neurosis to varying degrees. Today, neuroticism refers to the tendency to experience negative emotions such as anxiety, anger, or depression.\",\n        \"Those high in neuroticism are emotionally reactive, responding intensely to events that wouldn't affect most people. They often see ordinary situations as threatening and minor frustrations as extremely difficult. Their negative emotions persist longer, often leaving them in a bad mood. These issues in emotional regulation can impair their ability to think clearly, make decisions, and manage stress effectively.\",\n      ],\n      summarizedDescription: [\n        \"Neuroticism, initially described by Freud as neurosis, involves mental distress, emotional suffering, and difficulty coping with life's demands.\",\n        'Freud believed everyone exhibits some neurosis to varying degrees.',\n      ],\n    },\n    openness: {\n      title: 'Open to Experience',\n      description: [\n        'People high in this trait are intellectually curious, appreciative of art, and sensitive to beauty. They are more aware of their feelings and tend to think and act in unique, nonconforming ways. Often referred to as Culture or Intellect, this trait includes a strong intellectual component but is only modestly related to education level and intelligence test scores.',\n        'Open individuals excel in symbolic and abstract thinking, which can manifest in various forms such as mathematical, logical, artistic, metaphorical, musical, or visual and performing arts.',\n      ],\n      summarizedDescription: [\n        'People high in this trait are intellectually curious, appreciative of art, and sensitive to beauty.',\n        'They are more aware of their feelings and tend to think and act in unique, nonconforming ways.',\n      ],\n    },\n    compliance: {\n      title: 'Compliant',\n      description: [\n        'Compliance styles tend to be cautious and reflective + questioning and skeptical.',\n        'The Compliance personality trait in the DISC assessment is marked by a focus on accuracy, orderliness, and dependability. Individuals with a high Compliance trait are meticulous, methodical, and highly organized. They prioritize precision and quality in their work, often paying close attention to detail and following through on tasks with thoroughness. They value structure, rules, and procedures, and are motivated by a desire to achieve high standards and ensure that everything is done correctly. This trait also includes a strong sense of responsibility and a commitment to meeting deadlines and fulfilling obligations. Compliant individuals are often seen as reliable and disciplined, making them effective in roles that require careful planning and execution. However, their emphasis on detail and adherence to rules can sometimes lead to perfectionism or difficulty adapting to unexpected changes. They thrive in environments that offer clear guidelines and well-defined expectations.',\n      ],\n      summarizedDescription: [\n        'The Compliance trait in the DISC assessment emphasizes accuracy, orderliness, and dependability.',\n        'High compliance individuals are meticulous, methodical, and organized, prioritizing precision and quality.',\n      ],\n    },\n    dominance: {\n      title: 'Dominant',\n      description: [\n        'Dominant styles tend to be fast-paced and outspoken + questioning and skeptical.',\n        'The Dominant personality trait in the DISC assessment is characterized by a focus on results, assertiveness, and a drive for achieving goals. Individuals with a high Dominant trait are typically bold, confident, and competitive, preferring to take charge and tackle challenges head-on. They are decisive, often taking quick actions to address problems and seize opportunities. This trait is marked by a strong desire for control and influence, and a readiness to make decisions and take risks. Dominant individuals are usually driven by a need for achievement and success, and they may be less concerned with how their actions impact others, focusing instead on the end results. Their assertiveness can make them effective leaders and problem-solvers, though it might also come across as demanding or impatient to those who prefer a more collaborative approach.',\n      ],\n      summarizedDescription: [\n        'The Dominant trait in the DISC assessment is marked by a focus on results, assertiveness, and goal achievement.',\n        'Individuals with this trait are bold, confident, competitive, and decisive, preferring to take charge and tackle challenges head-on.',\n      ],\n    },\n    influence: {\n      title: 'Influential',\n      description: [\n        'Influence styles tend to be fast-paced and outspoken + accepting and warm.',\n        'The Influence personality trait in the DISC assessment is characterized by sociability, enthusiasm, and a strong focus on building relationships. Individuals with a high Influence trait are typically outgoing, persuasive, and energetic. They excel in social settings and are skilled at engaging and motivating others through their optimism and charisma. They thrive on interaction and enjoy inspiring and influencing people to achieve common goals. These individuals are often seen as warm, friendly, and approachable, making them effective communicators and networkers. They value social harmony and are adept at creating a positive and collaborative atmosphere. However, their focus on social interaction and enthusiasm may sometimes lead them to overlook details or become overly idealistic. Their strength lies in their ability to connect with others and foster a supportive and lively environment.',\n      ],\n      summarizedDescription: [\n        'The Influence trait in the DISC assessment is marked by sociability, enthusiasm, and relationship-building.',\n        'High Influence individuals are outgoing, persuasive, and energetic, excelling in social settings and motivating others through optimism and charisma.',\n      ],\n    },\n    stability: {\n      title: 'Stable',\n      description: [\n        'Stable styles tend to be cautious and reflective + accepting and warm.',\n        'The Stable personality trait in the DISC assessment is characterized by a calm, patient, and dependable demeanor. Individuals with a high Stable trait are known for their reliability and consistency. They value stability and harmony, often preferring to maintain a steady pace and avoid sudden changes or disruptions. They are excellent listeners, empathetic, and supportive, making them effective team players who foster a cooperative and nurturing environment. Stable individuals are often described as approachable, trustworthy, and resistant to stress, which allows them to manage conflict and challenges with a composed and measured approach. They typically excel in roles that require patience and attention to detail, and they work best in supportive, stable environments where their contributions can be made with consistency and care. However, their aversion to change and preference for routine can sometimes make them resistant to new ideas or methods.',\n      ],\n      summarizedDescription: [\n        'The Stable trait in the DISC assessment is marked by calmness, patience, and dependability.',\n        'Highly stable individuals value stability, prefer a steady pace, and avoid sudden changes.',\n      ],\n    },\n    ECBP: {\n      title: 'Diplomats - The Mentor (ECBP)',\n      description: [\n        'This personality type is known for their warm, empathetic, and attentive personalities. They see potential in everyone and are driven to help others realize their full potential, often acting as catalysts for both individual and group growth. Loyal and receptive to both praise and criticism, they are sociable and excel at facilitating group dynamics, providing inspiring leadership.',\n      ],\n      summarizedDescription: [],\n    },\n    ECBS: {\n      title: 'Diplomats - The Connector (ECBS)',\n      description: [\n        'This personality type tends to be warmly enthusiastic and imaginative. They view life as brimming with possibilities. They quickly make connections between events and information, confidently acting on the patterns they discern. They seek ample affirmation from others and are generous in offering appreciation and support. Spontaneous and adaptable, they often depend on their improvisational skills and verbal fluency.',\n      ],\n      summarizedDescription: [],\n    },\n    ECOP: {\n      title: 'Analysts - The Leader (ECOP)',\n      description: [\n        'This personality type is often very direct and decisive, they naturally take on leadership roles. They quickly identify illogical or inefficient procedures and develop and implement effective systems to address organizational issues. They take pleasure in long-term planning and setting goals. Typically well-informed and well-read, they enjoy expanding their knowledge and sharing it with others. They are assertive when presenting their ideas.',\n      ],\n      summarizedDescription: [],\n    },\n    ECOS: {\n      title: 'Analysts - The Innovator (ECOS)',\n      description: [\n        'This personality type tends to be quick-witted, inventive, and lively. They are sharp and expressive in their approach. They excel at tackling new and challenging problems with resourcefulness. Skilled at generating innovative ideas and analyzing them strategically, they are also adept at reading others. They easily become bored with routine, often avoiding repetitive tasks, and are likely to pursue a series of new interests in rapid succession.',\n      ],\n      summarizedDescription: [],\n    },\n    ERBP: {\n      title: 'Sentinels - The Loyalist (ERBP)',\n      description: [\n        'This personality type is typically warmhearted, conscientious, and cooperative as they strive to create harmony in their surroundings and work diligently to achieve it. They enjoy collaborating with others to complete tasks accurately and on schedule. Loyal and dependable, they follow through even on small matters. Attentive to the needs of others, they actively seek to provide support in everyday situations. They desire appreciation for both who they are and the contributions they make.',\n      ],\n      summarizedDescription: [],\n    },\n    ERBS: {\n      title: 'Explorers - The Collaborator (ERBS)',\n      description: [\n        'This personality type tends to be outgoing, friendly, and accepting. They are exuberant enthusiasts of life, people, and material comforts. They thrive on collaborating with others to achieve goals and bring a practical, realistic approach to their work, often making it enjoyable. Flexible and spontaneous, they adapt easily to new people and environments. They learn best by actively trying new skills in the company of others.',\n      ],\n      summarizedDescription: [],\n    },\n    EROP: {\n      title: 'Sentinels - The Decider (EROP)',\n      description: [\n        'This personality type is often very practical, realistic and matter-of-fact. They are usually very decisive and quick to act on their decisions. They excel at organizing projects and people to achieve results efficiently, ensuring routine details are managed effectively. Guided by a clear set of logical standards, they follow these systematically and expect others to do the same. They are assertive in implementing their plans and driving them to completion.',\n      ],\n      summarizedDescription: [],\n    },\n    EROS: {\n      title: 'Explorers - The Executor (EROS)',\n      description: [\n        'This personality type tends to be flexible and tolerant, taking a practical approach that prioritizes immediate results. They quickly become bored with theories and abstract concepts, preferring to act energetically to address problems. Focused on the present moment, they are spontaneous and relish opportunities to be actively engaged with others. They appreciate material comforts and a sense of style and learn best through hands-on experience.',\n      ],\n      summarizedDescription: [],\n    },\n    ICBP: {\n      title: 'Diplomats - The Idealist (ICBP)',\n      description: [\n        'This personality type tends to seek meaning and connection in ideas, relationships, and material possessions, aiming to understand what motivates people and showing keen insight into others. Conscientious and devoted to their core values, they cultivate a clear vision for serving the common good. They are both organized and decisive in bringing their vision to fruition.',\n      ],\n      summarizedDescription: [],\n    },\n    ICBS: {\n      title: 'Diplomats - The Dreamer (ICBS)',\n      description: [\n        'This personality type is usually idealistic and deeply loyal, they are committed to their values and to people who are important to them. They strive to live a life aligned with their principles and are curious, with a keen ability to spot possibilities and act as catalysts for bringing ideas to life. They seek to understand others and help them reach their full potential. They are adaptable, flexible, and accepting, except when their values are challenged.',\n      ],\n      summarizedDescription: [],\n    },\n    ICOP: {\n      title: 'Analysts - The Strategist (ICOP)',\n      description: [\n        'This personality type possesses creative minds and a strong drive to implement their ideas and achieve their goals. They quickly identify patterns in external events and develop long-term perspectives to explain them. When committed, they excel at organizing tasks and seeing them through to completion. Skeptical and independent, they maintain high standards of competence and performance for both themselves and others.',\n      ],\n      summarizedDescription: [],\n    },\n    ICOS: {\n      title: 'Analysts - The Thinker (ICOS)',\n      description: [\n        'This personality type strives to create logical explanations for everything that piques their interest. Theoretical and abstract, they are more drawn to ideas than to social interactions. Quiet and composed, they are flexible and adaptable. They possess a remarkable ability to concentrate deeply on solving problems within their areas of interest. Skeptical and occasionally critical, they maintain a consistently analytical approach.',\n      ],\n      summarizedDescription: [],\n    },\n    IRBP: {\n      title: 'Sentinels - The Harmonizer (IRBP)',\n      description: [\n        \"This personality type has a tendency to be quiet, friendly and conscientious. They are responsible and dedicated to meeting their commitments. They approach tasks with thoroughness, accuracy, and attention to detail. Loyal and considerate, they remember specific details about people who matter to them and are attentive to others' feelings. They aim to create an orderly and harmonious environment both at work and at home.\",\n      ],\n      summarizedDescription: [],\n    },\n    IRBS: {\n      title: 'Explorers - The Feeler (IRBS)',\n      description: [\n        'This personality type tends to be quiet, friendly and kind hearted and can often be sensitive to their surroundings. Feeler types typically value their personal space and prefer working at their own pace. Loyal and dedicated, they are committed to their core values and to those who matter most to them. They avoid disagreements and conflicts and do not impose their opinions or values on others.',\n      ],\n      summarizedDescription: [],\n    },\n    IROP: {\n      title: 'Sentinels - The Trusty (IROP)',\n      description: [\n        'This personality type has a tendency to achieve success through thoroughness and dependability. Practical and realistic, they approach life in a matter-of-fact and responsible manner. They make decisions logically and work steadily towards their goals, undeterred by distractions. They take great satisfaction in keeping everything orderly and organized, from their work to their home and personal life.',\n      ],\n      summarizedDescription: [],\n    },\n    IROS: {\n      title: 'Explorers - The Fixer (IROS)',\n      description: [\n        'This personality type tends to be tolerant and flexible of new situations, remaining calm and observant until a problem arises, at which point they act quickly to find a solution. Fixer type personalities tend to value data and facts, relying on realism and objectivity to come to their decisions rather than theoretical ideas or opinions. This type also values spontaneity, giving them the ability to adapt quickly to new situations as they arise.',\n      ],\n      summarizedDescription: [],\n    },\n    extraversion2: {\n      title: 'Extraversion',\n      description: [],\n      summarizedDescription: [\n        'Extraverted (E) vs. Introverted (I)',\n        'Extraversion is a personality trait that describes people who are outgoing, energetic and tend to gain energy from being around others.',\n        'In contrast with extraversion, introversion is a personality trait that describes people who are shy, focused on their inner thoughts and tend to gain energy by being alone.',\n        'Most people tend to experience both extroverted and introverted moments throughout their lives.',\n      ],\n    },\n    objectivity: {\n      title: 'Objectivity',\n      description: [],\n      summarizedDescription: [\n        'Objective (O) vs. Biased (B)',\n        'Objectivity is a personality trait that describes people who make decisions using logic and dispassionate reasoning.',\n        'In contrast with objective decision-makers, biased decision-makers tend to make decisions based on preconceived ideas, morals, and emotions.',\n        'Most people experience both extremes of this aspect throughout their lives, sometimes relying on pure logic and other times allowing their biases and emotions to influence their decisions.',\n      ],\n    },\n    planning: {\n      title: 'Planning',\n      description: [],\n      summarizedDescription: [\n        'Planned (P) vs. Spontaneous (S)',\n        'The aspect of Planning describes how people approach the world around them.',\n        'Planners, individuals who score high in this aspect, tend to make detailed plans and follow through on their commitments, with a strong focus on execution and achieving their goals in an organized manner.',\n        'In contrast, spontaneous individuals prefer to live life in a more adaptable and flexible way, often making decisions on the fly and embracing uncertainty.',\n      ],\n    },\n    realism: {\n      title: 'Realism',\n      description: [],\n      summarizedDescription: [\n        'Realist (R) vs. Creative (C)',\n        'Realism is a personality trait that describes how people react to new information and how they tend to view the world.',\n        'Realists have a tendency to only consider the facts and disregard all other ideas that may seem impractical.',\n        'In contrast with realism, creativity is a personality trait that describes people who put less emphasis on the facts and spend more time considering new possibilities.',\n      ],\n    },\n  } as { [trait: string]: TraitDescription };\n\n  const traitAndTypeStrengths = {\n    agreeableness: [\n      {\n        label: 'Empathy',\n        description:\n          \"Individuals high in agreeableness are often empathetic, understanding others' feelings and perspectives, which fosters strong interpersonal relationships.\",\n      },\n      {\n        label: 'Cooperation',\n        description:\n          'They are cooperative and willing to work collaboratively with others, which helps in team settings and promotes harmonious interactions.',\n      },\n      {\n        label: 'Trustworthiness',\n        description:\n          'They tend to be reliable and trustworthy, making them dependable friends, colleagues, and partners.',\n      },\n      {\n        label: 'Compassion',\n        description:\n          'Their compassionate nature leads them to offer support and assistance to those in need, contributing positively to their communities.',\n      },\n      {\n        label: 'Conflict Resolution',\n        description:\n          'They are skilled at resolving conflicts and maintaining peace, often seeking compromise and avoiding confrontation.',\n      },\n      {\n        label: 'Altruism',\n        description:\n          'They have a genuine desire to help others and contribute to the well-being of those around them, often engaging in acts of kindness.',\n      },\n    ],\n    conscientiousness: [\n      {\n        label: 'Reliability',\n        description:\n          'Individuals high in conscientiousness are dependable and can be trusted to follow through on commitments and responsibilities.',\n      },\n      {\n        label: 'Organization',\n        description:\n          'They excel at organizing tasks, projects, and environments, leading to effective time management and systematic work processes.',\n      },\n      {\n        label: 'Attention to Detail',\n        description:\n          'They are meticulous and thorough, paying close attention to details to ensure accuracy and high-quality results.',\n      },\n      {\n        label: 'Goal-Oriented',\n        description:\n          'They set clear goals and work diligently towards achieving them, often showing strong persistence and perseverance.',\n      },\n      {\n        label: 'Self-Discipline',\n        description:\n          'They possess a high level of self-control and are able to resist distractions, maintaining focus on long-term objectives.',\n      },\n      {\n        label: 'Planning and Preparation',\n        description:\n          'They are skilled at planning and preparing for future tasks and challenges, which helps them manage complex projects efficiently.',\n      },\n    ],\n    extraversion: [\n      {\n        label: 'Sociable',\n        description:\n          'Individuals high in extraversion are often outgoing and enjoy social interactions, making it easier for them to connect with others and build relationships',\n      },\n      {\n        label: 'Energetic',\n        description:\n          'They tend to have high levels of energy and enthusiasm, which can be motivating and uplifting for those around them.',\n      },\n      {\n        label: 'Assertive',\n        description:\n          'They are confident in expressing their opinions and taking charge of situations, often demonstrating strong leadership qualities.',\n      },\n      {\n        label: 'Optimistic',\n        description:\n          'They generally maintain a positive outlook on life, which can be contagious and foster a more enjoyable environment.',\n      },\n      {\n        label: 'Active',\n        description:\n          'They are often engaged in a variety of activities and seek out new experiences, contributing to a dynamic and exciting lifestyle.',\n      },\n      {\n        label: 'Good Communication Skills',\n        description:\n          'Their comfort in social settings allows them to communicate effectively and persuasively, making them adept at networking and collaboration.',\n      },\n    ],\n    neuroticism: [\n      {\n        label: 'Empathy',\n        description:\n          ' Those high in agreeableness are often deeply empathetic, understanding and sharing the feelings of others, which enhances interpersonal connections.',\n      },\n      {\n        label: 'Cooperation',\n        description:\n          'They excel in collaborative environments, working well with others and contributing to team success with a cooperative attitude.',\n      },\n      {\n        label: 'Trustworthiness',\n        description:\n          'Their reliability and honesty build trust, making them dependable friends, colleagues, and partners.',\n      },\n      {\n        label: 'Compassion',\n        description:\n          'They are naturally compassionate, frequently showing concern and kindness towards others, and helping those in need.',\n      },\n      {\n        label: 'Conflict Resolution',\n        description:\n          'They are skilled at managing conflicts and finding amicable solutions, striving to maintain harmony in relationships and group settings.',\n      },\n      {\n        label: 'Altruism',\n        description:\n          'They are motivated by a desire to help others, often engaging in altruistic behaviors and contributing positively to their communities.',\n      },\n    ],\n    openness: [\n      {\n        label: 'Creativity',\n        description:\n          'Individuals high in openness are often very creative and imaginative, able to generate novel ideas and solutions to problems.',\n      },\n      {\n        label: 'Curiousity',\n        description:\n          'They possess a strong desire to learn and explore new concepts, ideas, and experiences, making them intellectually adventurous.',\n      },\n      {\n        label: 'Adaptability',\n        description:\n          'They are open to change and new experiences, which allows them to adapt easily to different situations and environments.',\n      },\n      {\n        label: 'Appreciation of Art and Beauty',\n        description:\n          'They have a deep appreciation for art, literature, and aesthetic experiences, often engaging with and valuing these aspects of life.',\n      },\n      {\n        label: 'Intellectual Engagement',\n        description:\n          'They enjoy engaging in abstract thinking and theoretical discussions, which can lead to a deeper understanding of complex issues.',\n      },\n      {\n        label: 'Open-Mindedness',\n        description:\n          'They tend to be more accepting of diverse perspectives and unconventional ideas, contributing to a more inclusive approach to problem-solving and interpersonal interactions.',\n      },\n    ],\n    compliance: [\n      {\n        label: 'Detail-Oriented',\n        description:\n          'Individuals high in Compliance are meticulous and thorough, ensuring that tasks are completed accurately and to a high standard.',\n      },\n      {\n        label: 'Organized',\n        description:\n          'They excel at organizing tasks and projects, creating structured plans and systems to achieve their goals efficiently.',\n      },\n      {\n        label: 'Dependable',\n        description:\n          'They are reliable and consistent, often seen as trustworthy and committed to meeting deadlines and fulfilling responsibilities.',\n      },\n      {\n        label: 'High Standards',\n        description:\n          'They set and maintain high standards for themselves and others, striving for excellence and quality in their work.',\n      },\n      {\n        label: 'Analytical',\n        description:\n          'They are adept at analyzing complex information and making informed decisions based on careful evaluation.',\n      },\n      {\n        label: 'Focused',\n        description:\n          'They have a strong ability to concentrate on tasks, minimizing distractions and working persistently towards their objectives.',\n      },\n    ],\n    dominance: [\n      {\n        label: 'Decisive',\n        description:\n          'Individuals high in the Dominant aspect are quick to make decisions and take action, which can drive progress and achieve results efficiently.',\n      },\n      {\n        label: 'Leadership',\n        description:\n          'They naturally take charge of situations, providing clear direction and motivation to others, and often excel in leadership roles.',\n      },\n      {\n        label: 'Goal-Oriented',\n        description:\n          'They are focused on achieving goals and overcoming challenges, showing persistence and determination in their efforts.',\n      },\n      {\n        label: 'Assertive',\n        description:\n          'They are confident in expressing their opinions and taking initiative, which can lead to effective problem-solving and innovation.',\n      },\n      {\n        label: 'Problem-Solving',\n        description:\n          'They are skilled at identifying issues and developing practical solutions, often demonstrating strategic thinking.',\n      },\n      {\n        label: 'Action-Oriented',\n        description:\n          'They prefer to act and make things happen rather than spend time on detailed planning or theoretical discussions.',\n      },\n    ],\n    influence: [\n      {\n        label: 'Charismatic',\n        description:\n          'Individuals high in the Influence aspect are often outgoing and engaging, which helps them build strong relationships and motivate others.',\n      },\n      {\n        label: 'Persuasive',\n        description:\n          'They are skilled at influencing others and gaining support for their ideas, often excelling in roles that require negotiation or selling.',\n      },\n      {\n        label: 'Enthusiastic',\n        description:\n          'Their positive energy and enthusiasm can inspire and energize those around them, contributing to a lively and dynamic environment.',\n      },\n      {\n        label: 'Excellent Communicators',\n        description:\n          'They have strong verbal skills and can articulate their ideas effectively, making them adept at public speaking and networking.',\n      },\n      {\n        label: 'Adaptable',\n        description:\n          'They are flexible and able to adjust to changing circumstances and people, making it easier for them to thrive in various social and professional settings.',\n      },\n      {\n        label: 'Socially Skilled',\n        description:\n          'They are comfortable in social situations and excel at building and maintaining relationships, which can be beneficial in collaborative environments.',\n      },\n    ],\n    stability: [\n      {\n        label: 'Reliable',\n        description:\n          'Individuals high in the Stability aspect are dependable and consistent, making them trustworthy and valuable team members.',\n      },\n      {\n        label: 'Patient',\n        description:\n          'They exhibit patience in dealing with tasks and people, contributing to a calm and stable work environment.',\n      },\n      {\n        label: 'Supportive',\n        description:\n          'They are often empathetic and supportive, offering assistance and encouragement to colleagues, which fosters a collaborative atmosphere.',\n      },\n      {\n        label: 'Good Listeners',\n        description:\n          'They are attentive and considerate listeners, providing thoughtful feedback and understanding to others.',\n      },\n      {\n        label: 'Team-Oriented',\n        description:\n          'They excel in team settings, valuing harmony and cooperation, and work well to maintain a cohesive group dynamic.',\n      },\n      {\n        label: 'Adaptable',\n        description:\n          'They handle change with a steady approach and are often open to supporting others through transitions, even if they prefer stability themselves.',\n      },\n    ],\n    ECBP: [\n      {\n        label: 'Empathetic and Supportive',\n        description:\n          'They are highly attuned to the emotions and needs of others, offering strong support and encouragement to those around them.',\n      },\n      {\n        label: 'Charismatic and Inspiring',\n        description:\n          'Known for their ability to motivate and inspire, they are often seen as natural leaders who can energize and uplift groups.',\n      },\n      {\n        label: 'Organized and Efficient',\n        description:\n          'They are skilled at organizing tasks and people, ensuring that goals are met efficiently and effectively.',\n      },\n      {\n        label: 'Skilled Communicators',\n        description:\n          'They excel in communication, able to express ideas clearly and persuasively, fostering positive relationships and collaboration.',\n      },\n      {\n        label: 'Dedicated and Loyal',\n        description:\n          'They are deeply committed to their values and to the people they care about, showing strong loyalty and reliability.',\n      },\n      {\n        label: 'Visionary',\n        description:\n          'They have a clear vision for the future and work passionately towards achieving their goals, often helping others to see and reach their own potential.',\n      },\n    ],\n    ECBS: [\n      {\n        label: 'Creative and Imaginative',\n        description:\n          'They are highly creative, often coming up with innovative ideas and seeing possibilities that others might overlook.',\n      },\n      {\n        label: 'Enthusiastic and Energetic',\n        description:\n          'Known for their warmth and enthusiasm, they bring energy and excitement to their pursuits and interactions.',\n      },\n      {\n        label: 'Empathetic and Supportive',\n        description:\n          'They have a strong ability to connect with others emotionally, offering genuine support and encouragement.',\n      },\n      {\n        label: 'Spontaneous and Flexible',\n        description:\n          'They adapt easily to new situations and are open to exploring various paths, thriving in dynamic environments.',\n      },\n      {\n        label: 'Excellent Communicators',\n        description:\n          'Their verbal fluency and ability to articulate their thoughts make them effective in expressing their ideas and engaging with others.',\n      },\n      {\n        label: 'Inspirational',\n        description:\n          'They often inspire and motivate those around them with their positive outlook and passion for new ideas.',\n      },\n    ],\n    ECOP: [\n      {\n        label: 'Natural Leaders',\n        description:\n          'They excel in leadership roles, confidently taking charge and guiding teams toward achieving goals. Their ability to make decisions and direct others is a key strength.',\n      },\n      {\n        label: 'Strategic Thinkers',\n        description:\n          'They are adept at long-term planning and strategic thinking, capable of developing comprehensive plans to address complex issues and drive progress.',\n      },\n      {\n        label: 'Decisive and Action-Oriented',\n        description:\n          'Known for their decisiveness, they act quickly and effectively, ensuring that plans are implemented efficiently and objectives are met.',\n      },\n      {\n        label: 'Organized and Efficient',\n        description:\n          'They excel at organizing resources and tasks, focusing on efficiency and productivity to achieve results.',\n      },\n      {\n        label: 'Persuasive Communicators',\n        description:\n          'They are skilled at presenting their ideas convincingly and inspiring others to embrace their vision and goals.',\n      },\n      {\n        label: 'Confident and Driven',\n        description:\n          'They are confident in their abilities and driven to achieve success, setting high standards for themselves and others.',\n      },\n    ],\n    ECOS: [\n      {\n        label: 'Innovative and Creative',\n        description:\n          'They are highly inventive and excel at generating novel ideas and solutions.',\n      },\n      {\n        label: 'Quick Thinkers',\n        description:\n          'They think on their feet and can rapidly analyze situations to come up with effective strategies or solutions.',\n      },\n      {\n        label: 'Charismatic and Persuasive',\n        description:\n          'They possess strong communication skills and are skilled at convincing others of their ideas. Their charisma often helps them influence and inspire those around them.',\n      },\n      {\n        label: 'Adaptable and Flexible',\n        description:\n          'They thrive in dynamic environments and are able to adjust quickly to new situations or changes in plans.',\n      },\n      {\n        label: 'Curious and Open-Minded',\n        description:\n          'Driven by curiosity, they are eager to explore new concepts and possibilities. Their open-mindedness allows them to consider various viewpoints and ideas.',\n      },\n      {\n        label: 'Energetic and Enthusiastic',\n        description:\n          'They bring a high level of energy and enthusiasm to their projects and interactions, which can be motivating for those around them.',\n      },\n    ],\n    ERBP: [\n      {\n        label: 'Warm and Friendly',\n        description:\n          'Individuals with this personality type are naturally warm and friendly, making them approachable and easy to get along with.',\n      },\n      {\n        label: 'Empathetic and Caring',\n        description:\n          'They are deeply empathetic, often tuning into the needs and emotions of others, and are motivated to provide support and care.',\n      },\n      {\n        label: 'Organized and Dependable',\n        description:\n          'They are highly organized and reliable, ensuring tasks are completed on time and to a high standard. Their dependability makes them trustworthy team members.',\n      },\n      {\n        label: 'Loyal and Committed',\n        description:\n          'They value loyalty and are dedicated to their relationships, whether personal or professional. Their commitment to others is a defining trait.',\n      },\n      {\n        label: 'Strong Interpersonal Skills',\n        description:\n          'They excel in social settings, building strong relationships and fostering a sense of community. Their cooperative nature helps them work well in teams.',\n      },\n      {\n        label: 'Responsible and Conscientious',\n        description:\n          'They take their responsibilities seriously and strive to meet their obligations diligently, often going above and beyond what is required.',\n      },\n    ],\n    ERBS: [\n      {\n        label: 'Charismatic and Energetic',\n        description:\n          'Individuals with this personality type are often lively and engaging, drawing people in with their vibrant energy and enthusiasm.',\n      },\n      {\n        label: 'Social and Friendly',\n        description:\n          'They excel in social settings, easily making connections and building relationships with others. Their warmth and approachability make them popular in group settings.',\n      },\n      {\n        label: 'Practical and Realistic',\n        description:\n          'They have a strong sense of practicality, focusing on what works in the here and now rather than getting bogged down by abstract theories.',\n      },\n      {\n        label: 'Spontaneous and Adaptable',\n        description:\n          'They handle change well and are flexible in responding to new situations, often embracing spontaneity and enjoying the moment.',\n      },\n      {\n        label: 'Creative and Fun-Loving',\n        description:\n          'Their creativity and zest for life often lead to innovative ideas and a playful approach to problem-solving, making activities and projects more enjoyable.',\n      },\n      {\n        label: 'Empathetic and Supportive',\n        description:\n          'They are attentive to the emotions of others and are often seen as supportive and understanding friends and colleagues.',\n      },\n    ],\n    EROP: [\n      {\n        label: 'Decisive and Action-Oriented',\n        description:\n          'Individuals with this personality type are known for their decisiveness and ability to take swift action. They are effective at making decisions and implementing them efficiently.',\n      },\n      {\n        label: 'Organized and Efficient',\n        description:\n          'They excel at organizing projects and people, focusing on achieving results in the most efficient way possible. Their systematic approach ensures tasks are completed on time and to a high standard.',\n      },\n      {\n        label: 'Practical and Realistic',\n        description:\n          'They have a practical mindset and focus on realistic, achievable goals. Their matter-of-fact approach helps them navigate challenges effectively.',\n      },\n      {\n        label: 'Strong Leadership Skills',\n        description:\n          'They are natural leaders, capable of guiding and motivating others to achieve common objectives. Their clear direction and confidence inspire trust and respect.',\n      },\n      {\n        label: 'Dependable and Responsible',\n        description:\n          'They take their responsibilities seriously and are reliable in fulfilling their commitments. Others can count on them to follow through on tasks and projects.',\n      },\n      {\n        label: 'Logical and Analytical',\n        description:\n          'They possess a clear set of logical standards and systematically follow them. Their analytical skills help them make sound, rational decisions.',\n      },\n    ],\n    EROS: [\n      {\n        label: 'Action-Oriented',\n        description:\n          'Executor types thrive in fast-paced environments and excel at making quick decisions. They are adept at taking immediate action to address challenges and seize opportunities.',\n      },\n      {\n        label: 'Practical Problem-Solvers',\n        description:\n          'They have a strong ability to analyze situations in real-time and come up with effective, pragmatic solutions. Their focus is on results and efficiency.',\n      },\n      {\n        label: 'Charismatic and Sociable',\n        description:\n          'They are outgoing and engaging, often drawing people to them with their energetic and confident demeanor. They are skilled at networking and building relationships.',\n      },\n      {\n        label: 'Adaptable and Flexible',\n        description:\n          'They handle changes and unexpected situations well, quickly adjusting their approach to meet new demands or opportunities.',\n      },\n      {\n        label: 'Courageous and Risk-Taking',\n        description:\n          'They are often willing to take risks and face challenges head-on. Their boldness and willingness to embrace uncertainty can lead to significant achievements.',\n      },\n      {\n        label: 'Hands-On Learners',\n        description:\n          'They learn best through direct experience and practical involvement, often preferring action over theoretical learning.',\n      },\n    ],\n    ICBP: [\n      {\n        label: 'Empathetic and Insightful',\n        description:\n          \"They possess a deep understanding of others' emotions and motivations, which allows them to offer meaningful support and guidance.\",\n      },\n      {\n        label: 'Visionary',\n        description:\n          'They have a strong sense of purpose and are often guided by a clear vision of how they want to contribute to the world, focusing on long-term goals and ideals.',\n      },\n      {\n        label: 'Highly Committed',\n        description:\n          'Once they commit to a cause or a relationship, they do so with dedication and loyalty, working tirelessly to uphold their values.',\n      },\n      {\n        label: 'Organized and Strategic',\n        description:\n          'They are capable of creating detailed plans and strategies to achieve their goals, effectively organizing their efforts to realize their vision.',\n      },\n      {\n        label: 'Creative Problem-Solvers',\n        description:\n          'Their ability to think outside the box enables them to come up with innovative solutions to complex problems.',\n      },\n      {\n        label: 'Strong Values',\n        description:\n          'They have a well-defined set of values and principles, guiding their decisions and actions with integrity and authenticity.',\n      },\n    ],\n    ICBS: [\n      {\n        label: 'Idealistic and Principled',\n        description:\n          'They are deeply committed to their values and ideals, striving to live authentically and make a positive impact in the world.',\n      },\n      {\n        label: 'Empathetic and Understanding',\n        description:\n          'They possess a strong sense of empathy and are sensitive to the feelings and needs of others, often offering genuine support and encouragement.',\n      },\n      {\n        label: 'Creative and Imaginative',\n        description:\n          'They have a rich inner world and excel in creative endeavors, often coming up with innovative ideas and unique solutions.',\n      },\n      {\n        label: 'Open-Minded and Accepting',\n        description:\n          'They are open to different perspectives and approaches, valuing diversity and embracing individuality in themselves and others.',\n      },\n      {\n        label: 'Dedicated and Loyal',\n        description:\n          'They show deep loyalty to their friends, family, and causes they care about, often going to great lengths to support and stand by them.',\n      },\n      {\n        label: 'Reflective and Thoughtful',\n        description:\n          'They are introspective and spend time contemplating their own thoughts and feelings, leading to personal growth and self-awareness.',\n      },\n    ],\n    ICOP: [\n      {\n        label: 'Strategic and Visionary',\n        description:\n          'Individuals with this personality type excel at thinking long-term and developing comprehensive strategies. They are adept at creating detailed plans and seeing the bigger picture.',\n      },\n      {\n        label: 'Analytical and Objective',\n        description:\n          'They are highly analytical, relying on logic and objective reasoning to solve problems. Their ability to analyze complex systems and scenarios is a key strength.',\n      },\n      {\n        label: 'Independent and Self-Motivated',\n        description:\n          'They are highly independent and self-driven, capable of working alone and pursuing their goals with minimal supervision or external motivation.',\n      },\n      {\n        label: 'Decisive and Efficient',\n        description:\n          'Known for their decisiveness, they make well-considered decisions quickly and efficiently. Their focus on efficiency helps them achieve their goals effectively.',\n      },\n      {\n        label: 'Innovative and Creative',\n        description:\n          'They often bring innovative ideas and solutions to the table, using their creativity to approach challenges from unique angles.',\n      },\n      {\n        label: 'High Standards and Integrity',\n        description:\n          'They hold themselves and others to high standards of competence and integrity, striving for excellence and upholding their principles.',\n      },\n    ],\n    ICOS: [\n      {\n        label: 'Innovative Thinkers',\n        description:\n          'They excel at generating creative ideas and innovative solutions. Their ability to think abstractly allows them to approach problems from unique angles.',\n      },\n      {\n        label: 'Analytical and Objective',\n        description:\n          'They are highly analytical, relying on logic and critical thinking to understand complex systems and solve problems effectively.',\n      },\n      {\n        label: 'Curious and Open-Minded',\n        description:\n          'Driven by a strong intellectual curiosity, they are eager to explore new concepts and theories. Their open-mindedness enables them to consider various perspectives.',\n      },\n      {\n        label: 'Independent and Self-Reliant',\n        description:\n          'They prefer to work independently and are highly self-reliant. They can dive deeply into their interests without needing external motivation.',\n      },\n      {\n        label: 'Adaptable and Flexible',\n        description:\n          'They are adaptable and open to changing their approach as new information or insights arise. This flexibility helps them navigate complex and evolving situations.',\n      },\n      {\n        label: 'Detail-Oriented',\n        description:\n          'They have a keen eye for detail and are capable of deep focus when working on problems within their area of interest.',\n      },\n    ],\n    IRBP: [\n      {\n        label: 'Reliable and Dependable',\n        description:\n          'Individuals with this personality type are known for their reliability and strong sense of duty. They can be trusted to follow through on commitments and meet their responsibilities',\n      },\n      {\n        label: 'Detail-Oriented and Thorough:',\n        description:\n          'They have a keen eye for detail and are meticulous in their work, ensuring tasks are completed accurately and efficiently.',\n      },\n      {\n        label: 'Supportive and Caring',\n        description:\n          'They are empathetic and considerate, often putting the needs of others before their own. Their supportive nature makes them excellent caregivers and friends.',\n      },\n      {\n        label: 'Organized and Practical',\n        description:\n          'They excel at organizing their work and personal lives, creating systems and structures that help them manage tasks effectively. They approach problems with a practical mindset, finding workable and efficient solutions.',\n      },\n      {\n        label: 'Loyal and Committed',\n        description:\n          'They value loyalty and are dedicated to the people and causes they care about. Their commitment makes them trustworthy and dependable partners and team members.',\n      },\n      {\n        label: 'Observant and Remember Details',\n        description:\n          \"They notice and remember specifics about people who are important to them, which helps them build strong, personal connections and understand others' needs and preferences.\",\n      },\n    ],\n    IRBS: [\n      {\n        label: 'Creative and Artistic',\n        description:\n          'Feeler types often have a strong sense of aesthetics and creativity, excelling in artistic and expressive fields such as art, music, and design.',\n      },\n      {\n        label: 'Sensitive and Empathetic',\n        description:\n          'They are deeply in tune with their own emotions and the feelings of others, making them compassionate and understanding in relationships.',\n      },\n      {\n        label: 'Adaptable and Flexible',\n        description:\n          'They are open to new experiences and changes, often going with the flow and adapting to different situations as they arise.',\n      },\n      {\n        label: 'Authentic and Genuine',\n        description:\n          'They value authenticity and strive to live in alignment with their true selves and values, often being sincere and genuine in their interactions.',\n      },\n      {\n        label: 'Patient and Non-Judgmental',\n        description:\n          'They are generally patient and accepting of others’ differences, avoiding judgment and fostering a supportive environment.',\n      },\n      {\n        label: 'Independent',\n        description:\n          'They value their personal freedom and often prefer to work independently or in flexible environments where they can set their own pace.',\n      },\n    ],\n    IROP: [\n      {\n        label: 'Dependable and Responsible',\n        description:\n          'Individuals with this personality type are known for their reliability and strong sense of duty. They can be counted on to follow through on commitments and meet their responsibilities.',\n      },\n      {\n        label: 'Detail-Oriented and Thorough',\n        description:\n          'They have a keen eye for detail and are meticulous in their work. Their thorough approach ensures that tasks are completed accurately and efficiently.',\n      },\n      {\n        label: 'Organized and Structured',\n        description:\n          'They excel at organizing their work and personal lives, creating systems and structures that help them manage tasks effectively.',\n      },\n      {\n        label: 'Practical and Realistic',\n        description:\n          'Their focus on practicality and realism allows them to approach problems with a grounded perspective, finding workable and efficient solutions.',\n      },\n      {\n        label: 'Loyal and Committed',\n        description:\n          'They value loyalty and are dedicated to the people and causes they care about. Their commitment makes them trustworthy and dependable partners and team members.',\n      },\n      {\n        label: 'Logical and Analytical',\n        description:\n          'They use logic and analysis to make decisions, ensuring that their actions are based on sound reasoning and practical considerations.',\n      },\n    ],\n    IROS: [\n      {\n        label: 'Analytical Problem Solving',\n        description:\n          'They tend to excel at breaking down complex problems into manageable parts in order to find practical solutions. Their logical and systematic approach allows them to solve issues efficiently.',\n      },\n      {\n        label: 'Hands On Skills',\n        description:\n          'They often have a natural talent for working with their hands and understanding how things work. This makes them skilled in technical and mechanical tasks.',\n      },\n      {\n        label: 'Adaptability',\n        description:\n          'Fixer types are typically flexible and can quickly adjust to new situations or changes in their environment. They thrive in dynamic and fast-paced settings.',\n      },\n      {\n        label: 'Calm Under Pressure',\n        description:\n          'They tend to stay calm and composed during stressful situations, allowing them to make clear-headed decisions and take effective action.',\n      },\n      {\n        label: 'Independence',\n        description:\n          'They usually value their autonomy and are comfortable working alone.',\n      },\n      {\n        label: 'Pragmatic',\n        description:\n          'They focus on what is practical and effective, often preferring straightforward, results-oriented approaches over abstract theories.',\n      },\n    ],\n  } as { [trait: string]: PersonalityStrengthWeakness[] };\n\n  const traitAndTypeWeaknesses = {\n    agreeableness: [\n      {\n        label: 'Overly Agreeable',\n        description:\n          'Their strong desire to please others can sometimes lead to difficulty setting boundaries or saying no, resulting in potential personal or professional exploitation.',\n      },\n      {\n        label: 'Avoidance of Conflict',\n        description:\n          'Their tendency to avoid conflict can lead to unresolved issues or suppressed feelings, which may impact long-term relationships or team dynamics.',\n      },\n      {\n        label: 'Overemphasis on Harmony',\n        description:\n          'They might prioritize maintaining harmony at the expense of addressing important issues or making necessary but uncomfortable decisions.',\n      },\n      {\n        label: 'Easily Manipulated',\n        description:\n          'Their trusting nature can sometimes make them vulnerable to manipulation or exploitation by less scrupulous individuals.',\n      },\n      {\n        label: 'Self-Sacrifice',\n        description:\n          'They may sacrifice their own needs and desires for the sake of others, which can lead to personal dissatisfaction or neglect of their own well-being.',\n      },\n      {\n        label: 'Lack of Assertiveness',\n        description:\n          'Their preference for accommodating others can result in a lack of assertiveness, potentially leading to challenges in advocating for themselves or their ideas.s',\n      },\n    ],\n    conscientiousness: [\n      {\n        label: 'Perfectionism',\n        description:\n          'Their high standards can lead to perfectionism, where they may become overly critical of themselves and others, potentially causing stress and dissatisfaction.',\n      },\n      {\n        label: 'Rigidity',\n        description:\n          'Their preference for structure and organization can sometimes result in rigidity, making it challenging for them to adapt to unexpected changes or new approaches.',\n      },\n      {\n        label: 'Overemphasis on Work',\n        description:\n          'They might prioritize work and responsibilities to the detriment of personal relationships or leisure activities, leading to work-life imbalance.',\n      },\n      {\n        label: 'Difficulty Delegating',\n        description:\n          'Their desire for control and high standards can make it difficult for them to delegate tasks, resulting in taking on too much themselves.',\n      },\n      {\n        label: 'Overthinking',\n        description:\n          'Their thorough approach can lead to overthinking and excessive planning, which may slow down decision-making and action.',\n      },\n      {\n        label: 'Struggle with Spontaneity',\n        description:\n          'Their preference for planning and structure may hinder their ability to be spontaneous or flexible in the face of unforeseen circumstances.',\n      },\n    ],\n    extraversion: [\n      {\n        label: 'Impulsivity',\n        description:\n          'Their tendency to act on their energy and enthusiasm can sometimes lead to impulsive decisions without sufficient consideration.',\n      },\n      {\n        label: 'Overstimulation',\n        description:\n          'They may become overwhelmed or exhausted by constant social interactions or activities, requiring downtime to recharge.',\n      },\n      {\n        label: 'Difficulty with Reflection',\n        description:\n          'Their focus on external stimulation can sometimes lead to less time spent on introspection or deep thinking.',\n      },\n      {\n        label: 'Need for Attention',\n        description:\n          'They may seek validation and attention from others, which can occasionally lead to difficulties if they do not receive the recognition they desire.',\n      },\n      {\n        label: 'Difficulty with Solitude',\n        description:\n          'Their preference for social interactions can make it challenging for them to handle solitude or engage in solitary tasks.',\n      },\n      {\n        label: 'Overcommitment',\n        description:\n          'Their enthusiasm for new opportunities may lead them to overcommit to various projects or activities, potentially resulting in burnout or difficulty managing responsibilities.',\n      },\n    ],\n    neuroticism: [\n      {\n        label: 'Setting Boundaries',\n        description:\n          'Their strong desire to be agreeable can lead to difficulty setting boundaries or asserting themselves, potentially resulting in being taken advantage of.',\n      },\n      {\n        label: 'Conflict Avoidance',\n        description:\n          'They may avoid addressing conflicts directly, which can lead to unresolved issues or suppressed grievances affecting relationships.',\n      },\n      {\n        label: 'Overemphasis on Harmony',\n        description:\n          'Their focus on maintaining harmony might cause them to overlook or ignore important issues that need to be addressed.',\n      },\n      {\n        label: 'Easily Manipulated',\n        description:\n          'Their high level of trust and desire to please can make them susceptible to manipulation or exploitation by others.',\n      },\n      {\n        label: 'Self-Sacrifice',\n        description:\n          'They may prioritize others’ needs over their own, leading to personal dissatisfaction or neglect of their own well-being and desires.',\n      },\n      {\n        label: 'Lack of Assertiveness',\n        description:\n          'Their inclination to accommodate others can result in a lack of assertiveness, making it challenging for them to advocate for their own needs and preferences.',\n      },\n    ],\n    openness: [\n      {\n        label: 'Overwhelmed by Complexity',\n        description:\n          'Their interest in new and complex ideas can sometimes lead to feeling overwhelmed or struggling with the practical application of these ideas.',\n      },\n      {\n        label: 'Difficulty with Routine',\n        description:\n          'They may find routine tasks and repetitive activities boring or unfulfilling, which can affect their persistence in certain tasks.',\n      },\n      {\n        label: 'Indecisiveness',\n        description:\n          'Their openness to multiple possibilities and perspectives can lead to difficulty in making firm decisions or committing to a single course of action.',\n      },\n      {\n        label: 'Overthinking',\n        description:\n          'Their tendency to explore various ideas and possibilities can sometimes lead to overthinking or excessive analysis, complicating decision-making.',\n      },\n      {\n        label: 'Impulsivity',\n        description:\n          'High openness can sometimes lead to impulsive behavior or quick shifts in interests, potentially resulting in inconsistent focus or follow-through.',\n      },\n      {\n        label: 'Conflict with Conventional Views',\n        description:\n          'Their unconventional thinking may lead to disagreements or difficulties with more traditional or conservative viewpoints, potentially causing friction in certain social or professional contexts.',\n      },\n    ],\n    compliance: [\n      {\n        label: 'Overly Perfectionistic',\n        description:\n          'Their high standards can lead to perfectionism, causing delays or dissatisfaction when results do not meet their exacting criteria.',\n      },\n      {\n        label: 'Rigid',\n        description:\n          'They may become overly rigid or inflexible, struggling to adapt to unexpected changes or deviations from their plans.',\n      },\n      {\n        label: 'Difficulty Delegating',\n        description:\n          'Their focus on precision and control can make it challenging for them to delegate tasks, leading to increased workload and stress.',\n      },\n      {\n        label: 'Risk-Averse',\n        description:\n          'Their preference for structure and order might lead to a reluctance to take risks or explore unconventional approaches.',\n      },\n      {\n        label: 'Overemphasis on Details',\n        description:\n          'They may become bogged down by minutiae, potentially losing sight of the bigger picture or overall goals.',\n      },\n      {\n        label: 'Slow to Adapt',\n        description:\n          'Their preference for thoroughness and planning can result in slower responses to changing circumstances or new opportunities.',\n      },\n    ],\n    dominance: [\n      {\n        label: 'Impulsiveness',\n        description:\n          'Their quick decision-making can sometimes lead to impulsive actions without fully considering all options or potential consequences.',\n      },\n      {\n        label: 'Overbearing',\n        description:\n          'Their assertiveness and drive can sometimes come across as domineering or overly controlling, which may create friction with others.',\n      },\n      {\n        label: 'Impatience',\n        description:\n          'They may become frustrated with slower processes or individuals who do not share their sense of urgency, potentially leading to conflicts.',\n      },\n      {\n        label: 'Risk-Taking',\n        description:\n          'Their focus on achieving results can sometimes lead to taking excessive risks, which might result in avoidable setbacks.',\n      },\n      {\n        label: 'Difficulty Delegating',\n        description:\n          'Their desire for control and high standards may make it challenging for them to delegate tasks effectively, leading to increased workload and stress.',\n      },\n      {\n        label: 'Focus on Outcomes',\n        description:\n          'They might prioritize results over relationships or processes, potentially overlooking the importance of team dynamics and morale.',\n      },\n    ],\n    influence: [\n      {\n        label: 'Overly Optimistic',\n        description:\n          'Their tendency to focus on the positive can sometimes lead to unrealistic expectations or underestimating potential challenges.',\n      },\n      {\n        label: 'Impulsive',\n        description:\n          'They may act on their enthusiasm without fully considering the consequences, leading to hasty decisions.',\n      },\n      {\n        label: 'Disorganized',\n        description:\n          'Their focus on interaction and ideas can sometimes result in neglecting details or failing to follow through on tasks, leading to disorganization.',\n      },\n      {\n        label: 'Need for Approval',\n        description:\n          'They may seek excessive validation and approval from others, which can impact their decision-making and self-esteem if not met.',\n      },\n      {\n        label: 'Difficulty with Criticism',\n        description:\n          'They may struggle with receiving criticism or handling negative feedback, which can affect their ability to improve or adapt.',\n      },\n      {\n        label: 'Overemphasis on Social Interaction',\n        description:\n          'Their preference for social engagement might lead them to prioritize relationships over tasks, potentially affecting productivity or focus.',\n      },\n    ],\n    stability: [\n      {\n        label: 'Resistance to Change',\n        description:\n          'Their preference for stability can make them resistant to change or reluctant to adopt new methods or ideas.',\n      },\n      {\n        label: 'Avoidance of Conflict',\n        description:\n          'They may avoid addressing conflicts directly, which can lead to unresolved issues or tension within the team.',\n      },\n      {\n        label: 'Overly Cautious',\n        description:\n          'Their careful and methodical approach can sometimes result in indecision or slow responses to new opportunities.',\n      },\n      {\n        label: 'Difficulty with Assertiveness',\n        description:\n          \"They may struggle to assert themselves or advocate for their own needs, often prioritizing others' needs over their own.\",\n      },\n      {\n        label: 'Reluctance to Take Risks',\n        description:\n          'Their desire for stability might lead to a reluctance to take risks or explore innovative solutions, potentially stifling creativity.',\n      },\n      {\n        label: 'Overwhelmed by Stress',\n        description:\n          'While they are generally steady, high levels of stress or change can overwhelm them, leading to decreased performance or anxiety.',\n      },\n    ],\n    ECBP: [\n      {\n        label: 'Overly Idealistic',\n        description:\n          'Their strong ideals can sometimes lead to disappointment when reality does not meet their expectations, causing frustration or disillusionment.',\n      },\n      {\n        label: 'Sensitive to Criticism',\n        description:\n          'They may take criticism personally, which can impact their self-esteem and lead to emotional distress.',\n      },\n      {\n        label: 'Struggle with Boundaries',\n        description:\n          'Their desire to help and support others can lead them to overextend themselves, sometimes at the expense of their own well-being.',\n      },\n      {\n        label: 'Difficulty with Conflict',\n        description:\n          'They may find it challenging to handle conflict or disagreements, preferring to avoid confrontations rather than addressing issues directly.',\n      },\n      {\n        label: 'Perfectionistic Tendencies',\n        description:\n          'Their high standards for themselves and others can sometimes lead to frustration and stress if things do not go as planned.',\n      },\n      {\n        label: 'Tendency to Overcommit',\n        description:\n          'Their eagerness to help and involve themselves can lead them to take on too many responsibilities, risking burnout or inefficiency.',\n      },\n    ],\n    ECBS: [\n      {\n        label: 'Easily Distracted',\n        description:\n          'Their wide range of interests can lead to difficulties with focus and follow-through, as they may jump from one project to another.',\n      },\n      {\n        label: 'Overly Idealistic',\n        description:\n          'They can sometimes set unrealistic expectations or ideals, leading to disappointment when reality falls short',\n      },\n      {\n        label: 'Sensitive to Criticism',\n        description:\n          'They may take criticism personally and struggle with negative feedback, affecting their self-esteem and motivation.',\n      },\n      {\n        label: 'Struggle with Routine',\n        description:\n          'Their preference for spontaneity can make routine tasks and structured environments challenging for them.',\n      },\n      {\n        label: 'Difficulty with Practical Matters',\n        description:\n          'They may neglect practical details or organizational aspects in favor of focusing on big-picture ideas.',\n      },\n      {\n        label: 'Overcommitment',\n        description:\n          'Their eagerness to engage in new opportunities can lead them to overcommit, potentially causing stress and burnout.',\n      },\n    ],\n    ECOP: [\n      {\n        label: 'Overly Critical',\n        description:\n          'Their high standards and focus on efficiency can make them overly critical of themselves and others, potentially leading to conflicts and tension.',\n      },\n      {\n        label: 'Impatient',\n        description:\n          'They may become impatient with slower processes or those who do not meet their expectations, which can affect team dynamics and productivity.',\n      },\n      {\n        label: 'Dominant',\n        description:\n          'Their strong leadership tendencies can come across as domineering or controlling, potentially alienating team members or colleagues.',\n      },\n      {\n        label: 'Neglect of Emotional Needs',\n        description:\n          'They may prioritize tasks and goals over emotional considerations, which can lead to challenges in understanding and addressing the emotional needs of others',\n      },\n      {\n        label: 'Resistance to Input',\n        description:\n          'Their confidence and decisiveness can sometimes lead to a reluctance to consider alternative viewpoints or feedback, potentially limiting collaboration.',\n      },\n      {\n        label: 'Overemphasis on Goals',\n        description:\n          'Their intense focus on achieving goals may lead them to overlook immediate concerns or the practical aspects of day-to-day tasks.',\n      },\n    ],\n    ECOS: [\n      {\n        label: 'Impatience with Details',\n        description:\n          'They may overlook details or become frustrated with tasks that require meticulous attention, preferring to focus on the big picture.',\n      },\n      {\n        label: 'Difficulty with Routine',\n        description:\n          'Their dislike for routine can lead them to struggle with repetitive or mundane tasks, which they may find uninteresting or monotonous.',\n      },\n      {\n        label: 'Overconfidence',\n        description:\n          'Their confidence in their ideas and abilities can sometimes come across as arrogance, which might alienate others or lead to conflicts.',\n      },\n      {\n        label: 'Challenges with Follow-Through',\n        description:\n          'They may start multiple projects but struggle to complete them, as their interests and focus can shift quickly.',\n      },\n      {\n        label: 'Impulsiveness',\n        description:\n          'Their tendency to act on impulse can sometimes lead to hasty decisions or actions without fully considering the consequences.',\n      },\n      {\n        label: 'Difficulty with Structure',\n        description:\n          'They might struggle with adhering to established structures or systems, preferring more flexible and unstructured approaches.',\n      },\n    ],\n    ERBP: [\n      {\n        label: 'Overly Sensitive',\n        description:\n          'Their strong desire to be appreciated and loved can make them overly sensitive to criticism and conflict, affecting their self-esteem and causing stress.',\n      },\n      {\n        label: 'Difficulty with Change',\n        description:\n          'They may struggle with adapting to change, preferring stability and routine. Sudden changes can be challenging for them to handle.',\n      },\n      {\n        label: 'People-Pleasing Tendencies',\n        description:\n          'Their eagerness to please others can sometimes lead them to neglect their own needs or agree to things they do not actually want to do.',\n      },\n      {\n        label: 'Judgmental Attitudes',\n        description:\n          'They might be quick to judge others based on their own values and standards, which can lead to misunderstandings and conflicts.',\n      },\n      {\n        label: 'Avoidance of Conflict',\n        description:\n          'Their preference for harmony can result in avoiding necessary confrontations, potentially allowing unresolved issues to persist.',\n      },\n      {\n        label: 'Dependence on External Validation',\n        description:\n          'They may rely heavily on external validation and approval, which can make them vulnerable to the opinions of others and affect their decision-making.',\n      },\n    ],\n    ERBS: [\n      {\n        label: 'Impulsiveness',\n        description:\n          'Their preference for immediate gratification and spontaneous decisions can lead to hasty actions without fully considering long-term consequences.',\n      },\n      {\n        label: 'Difficulty with Routine',\n        description:\n          'They may struggle with repetitive tasks or structured routines, finding them monotonous and challenging to maintain over time.',\n      },\n      {\n        label: 'Overly Focused on the Present',\n        description:\n          'Their strong focus on the present moment can sometimes result in neglecting future planning or long-term goals.',\n      },\n      {\n        label: 'Sensitivity to Criticism',\n        description:\n          'They may take criticism personally and struggle to handle negative feedback, which can affect their confidence and morale.',\n      },\n      {\n        label: 'Challenges with Follow-Through',\n        description:\n          'Their enthusiasm can sometimes wane, leading to difficulties in completing tasks or projects they start.',\n      },\n      {\n        label: 'Avoidance of Conflict',\n        description:\n          'They often prefer to maintain harmony and avoid confrontations, which can lead to unresolved issues or difficulties in addressing problems directly.',\n      },\n    ],\n    EROP: [\n      {\n        label: 'Inflexibility',\n        description:\n          'Their preference for order and routine can make them resistant to change. They may struggle to adapt to new ideas or methods.',\n      },\n      {\n        label: 'Overbearing',\n        description:\n          'Their strong-willed and forceful nature can sometimes come across as overbearing or controlling, which may lead to conflicts with others.',\n      },\n      {\n        label: 'Impatience',\n        description:\n          'They may become impatient with those who do not share their sense of urgency or efficiency, leading to frustration and tension in collaborative settings.',\n      },\n      {\n        label: 'Difficulty with Emotions',\n        description:\n          'They may prioritize logic and efficiency over emotions, sometimes overlooking the emotional needs and perspectives of others.',\n      },\n      {\n        label: 'Rigidity',\n        description:\n          'Their adherence to rules and standards can make them rigid, finding it challenging to accommodate alternative viewpoints or unconventional approaches.',\n      },\n      {\n        label: 'Tendency to Micromanage',\n        description:\n          'Their desire for efficiency and control can lead to micromanagement, which may stifle creativity and autonomy in others.',\n      },\n    ],\n    EROS: [\n      {\n        label: 'Impulsiveness',\n        description:\n          'Their preference for quick action can sometimes lead to hasty decisions without fully considering long-term consequences.',\n      },\n      {\n        label: 'Disregard for Details',\n        description:\n          'Executor types may focus on the big picture while neglecting important details, potentially leading to oversight or incomplete solutions.',\n      },\n      {\n        label: 'Difficulty with Routine',\n        description:\n          'They can become bored with repetitive tasks and may struggle with tasks that require sustained focus or long-term planning.',\n      },\n      {\n        label: 'Conflict with Authority',\n        description:\n          'Their assertive and independent nature can sometimes lead to clashes with authority figures or established systems, especially if they perceive these as restrictive.',\n      },\n      {\n        label: 'Challenges with Emotional Sensitivity',\n        description:\n          \"They may prioritize logic and action over emotional considerations, which can lead to misunderstandings or insensitivity towards others' feelings.\",\n      },\n      {\n        label: 'Struggles with Long-Term Planning',\n        description:\n          'Their focus on immediate results can make long-term planning and strategic thinking less appealing or challenging for them.',\n      },\n    ],\n    ICBP: [\n      {\n        label: 'Overly Idealistic',\n        description:\n          'Their high ideals can sometimes lead them to be disappointed with the realities of life, as they may set unrealistic expectations for themselves and others.',\n      },\n      {\n        label: 'Sensitive to Criticism',\n        description:\n          'They can be particularly sensitive to criticism or conflict, which may affect their self-esteem and lead to stress or withdrawal.',\n      },\n      {\n        label: 'Reserved and Private',\n        description:\n          'Their introspective nature can make them seem distant or reserved, making it challenging for others to understand or connect with them.',\n      },\n      {\n        label: 'Perfectionistic Tendencies',\n        description:\n          'They may set very high standards for themselves and others, leading to frustration or dissatisfaction when things do not meet their expectations',\n      },\n      {\n        label: 'Difficulty with Practicalities',\n        description:\n          'Their focus on abstract ideas and long-term goals can sometimes result in neglecting practical details or immediate needs.',\n      },\n      {\n        label: 'Struggle with Boundaries',\n        description:\n          'Their deep empathy and commitment to others can lead them to overextend themselves, sometimes at the expense of their own well-being.',\n      },\n    ],\n    ICBS: [\n      {\n        label: 'Overly Idealistic',\n        description:\n          'Their strong ideals can lead to disappointment when reality does not align with their expectations, causing frustration or disillusionment.',\n      },\n      {\n        label: 'Sensitive to Criticism',\n        description:\n          'They may take criticism or conflict personally, which can affect their self-esteem and lead to emotional distress.',\n      },\n      {\n        label: 'Difficulty with Practical Matters:',\n        description:\n          'Their focus on abstract ideas and ideals can sometimes result in neglecting practical or immediate concerns.',\n      },\n      {\n        label: 'Reserved and Private',\n        description:\n          'They might be reserved about sharing their inner thoughts and feelings, making it challenging for others to connect with them on a deeper level.',\n      },\n      {\n        label: 'Indecisive',\n        description:\n          'They may struggle with making decisions, particularly when they feel that any choice could conflict with their values or lead to potential negative outcomes.',\n      },\n      {\n        label: 'Overwhelmed by Emotions',\n        description:\n          'Their strong emotional responses can sometimes be overwhelming, affecting their ability to manage stress or handle conflicts effectively.',\n      },\n    ],\n    ICOP: [\n      {\n        label: 'Overly Critical',\n        description:\n          'Their high standards can lead to excessive criticism of themselves and others, which may create tension or conflict in relationships.',\n      },\n      {\n        label: 'Difficulty with Emotional Expression',\n        description:\n          'They may struggle to express their emotions or understand the emotional needs of others, which can lead to misunderstandings and strained relationships.',\n      },\n      {\n        label: 'Impatience with Incompetence',\n        description:\n          'They can become frustrated with inefficiency or incompetence, potentially leading to impatience or dismissiveness towards others who do not meet their standards.',\n      },\n      {\n        label: 'Reluctance to Collaborate',\n        description:\n          'Their strong independence and self-reliance may make them reluctant to seek or value collaboration, preferring to work alone.',\n      },\n      {\n        label: 'Overly Focused on Long-Term Goals',\n        description:\n          'Their focus on long-term objectives might cause them to neglect immediate concerns or the practicalities of day-to-day tasks.',\n      },\n      {\n        label: 'Difficulty Adapting to Change',\n        description:\n          'They may struggle with adapting to sudden changes or disruptions to their plans, finding it challenging to adjust their strategies on the fly.',\n      },\n    ],\n    ICOS: [\n      {\n        label: 'Difficulty with Practicalities',\n        description:\n          'They may struggle with practical or mundane tasks, finding them less engaging compared to their abstract and theoretical interests.',\n      },\n      {\n        label: 'Social Interaction Challenges',\n        description:\n          'They might prefer solitude or intellectual pursuits over social interactions, which can sometimes lead to difficulties in building and maintaining relationships.',\n      },\n      {\n        label: 'Overly Critical',\n        description:\n          'Their strong analytical nature can make them overly critical, both of themselves and others. This can create tension in interactions or collaboration.',\n      },\n      {\n        label: 'Indecisiveness',\n        description:\n          'Their tendency to analyze every detail can lead to indecisiveness, making it challenging for them to make final decisions or commit to a course of action.',\n      },\n      {\n        label: 'Emotional Distance',\n        description:\n          'They may struggle with understanding or expressing emotions, which can affect their personal relationships and their ability to connect with others on an emotional level.',\n      },\n      {\n        label: 'Overlook Immediate Concerns',\n        description:\n          'Their focus on abstract ideas can sometimes lead them to overlook immediate, practical concerns or daily responsibilities.',\n      },\n    ],\n    IRBP: [\n      {\n        label: 'Resistance to Change',\n        description:\n          'Their preference for stability and routine can make them resistant to change, causing difficulties in adapting to new situations or methods.',\n      },\n      {\n        label: 'Overly Self-Critical',\n        description:\n          'They may set high standards for themselves and can be overly critical when they feel they have not met these standards, leading to unnecessary stress.',\n      },\n      {\n        label: 'Difficulty Saying No',\n        description:\n          'Their desire to help and support others can make it hard for them to say no, potentially leading to overcommitment and burnout.',\n      },\n      {\n        label: 'Avoidance of Conflict',\n        description:\n          'They often prefer to maintain harmony and avoid confrontations, which can lead to unresolved issues or difficulties in addressing problems directly.',\n      },\n      {\n        label: 'Sensitivity to Criticism',\n        description:\n          'They may take criticism personally and struggle to handle negative feedback, which can affect their confidence and morale.',\n      },\n      {\n        label: 'Inflexibility',\n        description:\n          'Their strong preference for order and routine can sometimes make them inflexible, finding it challenging to adapt to new ideas or ways of doing things.',\n      },\n    ],\n    IRBS: [\n      {\n        label: 'Avoidance of Conflict',\n        description:\n          'Feeler types tend to avoid conflicts and disagreements, which can sometimes lead to unresolved issues and passive-aggressive behavior.',\n      },\n      {\n        label: 'Difficulty with Long-Term Planning',\n        description:\n          'They may struggle with long-term planning and organization, often focusing more on the present moment rather than future goals.',\n      },\n      {\n        label: 'Overly Sensitive',\n        description:\n          'Their heightened sensitivity can make them prone to taking criticism personally and experiencing emotional distress over minor issues.',\n      },\n      {\n        label: 'Reluctance to Share Feelings',\n        description:\n          'Despite their sensitivity, they might find it challenging to express their emotions openly, leading to misunderstandings in relationships.',\n      },\n      {\n        label: 'Struggles with Routine',\n        description:\n          'They may find routine tasks monotonous and prefer a more spontaneous and varied approach to their activities.',\n      },\n      {\n        label: 'Indecisiveness',\n        description:\n          'They can be indecisive, particularly when faced with significant choices, due to their desire to maintain harmony and avoid conflict.',\n      },\n    ],\n    IROP: [\n      {\n        label: 'Resistance to Change',\n        description:\n          'Their preference for stability and routine can make them resistant to change, causing difficulties in adapting to new situations or methods.',\n      },\n      {\n        label: 'Inflexibility',\n        description:\n          'They may struggle with flexibility, preferring to stick to established procedures and plans even when adjustments are necessary.',\n      },\n      {\n        label: 'Overly Critical',\n        description:\n          'Their high standards can sometimes lead them to be overly critical of themselves and others, focusing too much on flaws and shortcomings.',\n      },\n      {\n        label: 'Difficulty Expressing Emotions',\n        description:\n          'They may find it challenging to express their emotions or understand the emotional needs of others, leading to potential misunderstandings in relationships.',\n      },\n      {\n        label: 'Stubbornness',\n        description:\n          'Their strong-willed nature can sometimes make them stubborn, particularly when their principles or methods are questioned.',\n      },\n      {\n        label: 'Workaholic Tendencies',\n        description:\n          'Their dedication to their responsibilities can lead to workaholic tendencies, sometimes at the expense of their personal well-being and relationships.',\n      },\n    ],\n    IROS: [\n      {\n        label: 'Impulsiveness',\n        description:\n          'Their preference for action and spontaneity can sometimes lead to hasty decisions or a lack of thorough planning.',\n      },\n      {\n        label: 'Difficulty with Emotions',\n        description:\n          'This type may struggle to express their emotions or understand the emotional needs of others, leading to potential misunderstandings in relationships.',\n      },\n      {\n        label: 'Avoidance of Routine',\n        description:\n          'They can often dislike repetitive tasks and may struggle with tasks that require consistent attention to detail over long periods.',\n      },\n      {\n        label: 'Resistance to Authority',\n        description:\n          'Their independent nature can sometimes make them resistant to following rules or authority figures, especially if they perceive these as restrictive.',\n      },\n      {\n        label: 'Social Withdrawal',\n        description:\n          'They may prefer solitude or small groups over large social gatherings, which can sometimes lead to a perception of being distant or aloof.',\n      },\n      {\n        label: 'Difficulty with Long-Term Planning',\n        description:\n          'Their focus on the present and immediate solutions can sometimes result in challenges with long-term goals and future planning.',\n      },\n    ],\n  } as { [trait: string]: PersonalityStrengthWeakness[] };\n\n  const getTitle = (personalityTrait: string): string =>\n    traitAndTypeDescriptions?.[personalityTrait]?.title || '';\n  const getDescription = (personalityTrait: string): string[] =>\n    traitAndTypeDescriptions?.[personalityTrait]?.description || '';\n  const getSummarizedDescription = (personalityTrait: string): string[] =>\n    traitAndTypeDescriptions?.[personalityTrait]?.summarizedDescription || '';\n  const getStrengths = (\n    personalityTrait: string\n  ): PersonalityStrengthWeakness[] =>\n    traitAndTypeStrengths?.[personalityTrait] || [];\n  const getWeaknesses = (\n    personalityTrait: string\n  ): PersonalityStrengthWeakness[] =>\n    traitAndTypeWeaknesses?.[personalityTrait] || [];\n\n  return {\n    bigFiveTraits,\n    discTraits,\n    fourAspectsTraits,\n    fourAspectsTypes,\n    getFourAspectsType,\n    getTitle,\n    getDescription,\n    getSummarizedDescription,\n    getStrengths,\n    getWeaknesses,\n  };\n};\n", "import { constants } from 'appConstants';\nimport { PersonalityTraitsTestHashMap } from '../utils';\n\nexport const renderImageBasedOnTrait = (trait: string) => {\n  const personalityTraitsImages = constants.images.personalityTraits;\n  const personalityTraitsImagePerType: PersonalityTraitsTestHashMap = {\n    ECBP: personalityTraitsImages.diplomats,\n    ECBS: personalityTraitsImages.diplomats,\n    ECOP: personalityTraitsImages.analyst,\n    ECOS: personalityTraitsImages.analyst,\n    ERBP: personalityTraitsImages.sentinels,\n    ERBS: personalityTraitsImages.explorers,\n    EROP: personalityTraitsImages.sentinels,\n    EROS: personalityTraitsImages.explorers,\n    ICBP: personalityTraitsImages.diplomats,\n    ICBS: personalityTraitsImages.diplomats,\n    ICOP: personalityTraitsImages.analyst,\n    ICOS: personalityTraitsImages.analyst,\n    IRBP: personalityTraitsImages.sentinels,\n    IRBS: personalityTraitsImages.explorers,\n    IROP: personalityTraitsImages.sentinels,\n    IROS: personalityTraitsImages.explorers,\n    agreeableness: personalityTraitsImages.agreeableness,\n    conscientiousness: personalityTraitsImages.conscientiousness,\n    extraversion: personalityTraitsImages.extraversion,\n    neuroticism: personalityTraitsImages.neuroticism,\n    openness: personalityTraitsImages.openness,\n    compliance: personalityTraitsImages.compliance,\n    dominance: personalityTraitsImages.dominance,\n    influence: personalityTraitsImages.influence,\n    stability: personalityTraitsImages.stability,\n  };\n\n  return personalityTraitsImagePerType[trait];\n};\n", "import { Stack, styled } from '@ltvco/refresh-lib/theme';\n\nexport const PTProgressBarContainer = styled(Stack)(({ theme }) => ({\n  width: '50%',\n  display: 'flex',\n  alignItems: 'center',\n  flexDirection: 'row',\n  [theme.breakpoints.down('md')]: {\n    flexDirection: 'column',\n    width: '100%',\n  },\n}));\n\nexport const PTProgressBarText = styled('span')(({ theme }) => ({\n  marginRight: '10px',\n  fontWeight: 'bold',\n}));\n\nexport const PTProgressBarBarContainer = styled(Stack)(({ theme }) => ({\n  width: '100%',\n  height: '10px',\n  backgroundColor: '#e0e0df',\n  borderRadius: '5px',\n  overflow: 'hidden',\n  position: 'relative',\n  flexDirection: 'row',\n}));\n\nexport const PTProgressBarBar = styled(Stack)(({ theme, property }) => ({\n  width: `${property}%`,\n  height: '100%',\n  backgroundColor: '#000000',\n  borderRadius: '5px 0 0 5px',\n}));\n\nexport const PTProgressBarHandle = styled(Stack)(({ theme, property }) => ({\n  width: '16px',\n  height: '16px',\n  borderRadius: '50%',\n  backgroundColor: '#000000',\n  position: 'absolute',\n  top: '50%',\n  left: `${property}%`,\n  transform: 'translate(-50%, -50%)',\n}));\n", "import {\n  PTProgressBarContainer,\n  PTProgressBarText,\n  PTProgressBarBarContainer,\n  PTProgressBarBar,\n  PTProgressBarHandle,\n} from './components';\n\ntype PTProgressBarProps = {\n  percentage: number;\n};\n\nexport const PTProgressBar = ({ percentage }: PTProgressBarProps) => {\n  return (\n    <PTProgressBarContainer>\n      <PTProgressBarText>{percentage}%</PTProgressBarText>\n      <PTProgressBarBarContainer>\n        <PTProgressBarBar property={String(percentage)} />\n        <PTProgressBarHandle property={String(percentage)} />\n      </PTProgressBarBarContainer>\n    </PTProgressBarContainer>\n  );\n};\n", "import { Stack, styled } from '@ltvco/refresh-lib/theme';\n\nexport const PersonalityTraitDescriptionBox = styled(Stack)(({ theme }) => ({\n  width: '94.5%',\n  marginTop: '24px',\n  border: `1px solid ${theme.palette.grey[300]}`,\n  padding: '16px',\n  borderRadius: '4px',\n}));\n\nexport const PersonalityTraitResultContainer = styled(Stack)(({ theme }) => ({\n  width: '95%',\n  flexDirection: 'row',\n  marginTop: '16px',\n  justifyContent: 'space-between',\n  [theme.breakpoints.down('md')]: {\n    flexDirection: 'column',\n  },\n}));\n", "import { Stack, Text } from '@ltvco/refresh-lib/theme';\nimport { PTProgressBar } from './PTProgressBar/PTProgressBar';\nimport { useState } from 'react';\nimport {\n  PersonalityTraitDescriptionBox,\n  PersonalityTraitResultContainer,\n} from './components';\nimport { PersonalityStrengthWeakness } from 'routes/Dashboard/PersonalityTraits/usePersonalityDescriptions/types';\nimport { StrengthsWeaknesses } from './StrengthsWeaknesses/StrengthsWeaknesses';\nimport { ExpandLess, ExpandCircleDown } from '@mui/icons-material';\n\ntype PersonalityTraitResultProps = {\n  personalityTraitResultType: string;\n  personalityTraitResultTypeLabel: string;\n  personalityTraitResultTypeDescription: string[];\n  personalityTraitResultPercentrage: number;\n  personalityTraitResultStrengths?: PersonalityStrengthWeakness[];\n  personalityTraitResultWeaknesses?: PersonalityStrengthWeakness[];\n};\n\nexport const PersonalityTraitResult = ({\n  personalityTraitResultType,\n  personalityTraitResultTypeLabel,\n  personalityTraitResultTypeDescription,\n  personalityTraitResultPercentrage,\n  personalityTraitResultStrengths,\n  personalityTraitResultWeaknesses,\n}: PersonalityTraitResultProps) => {\n  const [expandedState, setExpandedState] = useState(false);\n\n  const handleExpand = () => {\n    setExpandedState(!expandedState);\n  };\n\n  const renderDescriptions = () => {\n    return personalityTraitResultTypeDescription.map((description, index) => (\n      <Text key={index} marginBottom=\"8px\">\n        {description}\n      </Text>\n    ));\n  };\n\n  return (\n    <Stack\n      onClick={handleExpand}\n      sx={(theme) => ({\n        cursor: 'pointer',\n        marginBottom: '8px',\n        [theme.breakpoints.down('md')]: {\n          marginBottom: '16px',\n        },\n      })}\n    >\n      <PersonalityTraitResultContainer>\n        <Stack width=\"30%\" flexDirection=\"row\" alignItems=\"center\">\n          {expandedState ? <ExpandLess /> : <ExpandCircleDown />}\n          <Text sx={{ marginLeft: '8px', textWrap: 'nowrap', width: '100%' }}>\n            {personalityTraitResultType}\n          </Text>\n        </Stack>\n        <PTProgressBar percentage={personalityTraitResultPercentrage} />\n      </PersonalityTraitResultContainer>\n      {expandedState && (\n        <>\n          <PersonalityTraitDescriptionBox>\n            <Text variant=\"h4\">{personalityTraitResultTypeLabel}</Text>\n            {renderDescriptions()}\n          </PersonalityTraitDescriptionBox>\n        </>\n      )}\n    </Stack>\n  );\n};\n", "import { Stack, styled } from '@ltvco/refresh-lib/theme';\n\nexport const PersonalityTraitsTestsResultsWrapper = styled(Stack)(\n  ({ theme }) => ({\n    flexDirection: 'column',\n    width: '100%',\n  })\n);\n\nexport const PersonalityTraitsTestsResultsHeader = styled(Stack)(\n  ({ theme }) => ({\n    flexDirection: 'row',\n    margin: '16px',\n    width: '100%',\n    alignItems: 'flex-start',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column',\n    },\n  })\n);\n\nexport const PersonalityTraitsTestsResultsHeaderBody = styled(Stack)(\n  ({ theme }) => ({\n    width: '80%',\n    margin: '0 16px',\n    [theme.breakpoints.down('md')]: {\n      width: '100%',\n      margin: '16px 0',\n    },\n  })\n);\n\nexport const PersonalityTraitsTestsResultsMobileHeader = styled(Stack)(\n  ({ theme }) => ({\n    flexDirection: 'row',\n    width: '100%',\n    marginBottom: '16px',\n  })\n);\n", "import { Stack, styled } from '@ltvco/refresh-lib/theme';\n\nexport const StrengthsWeaknessesWrapper = styled(Stack)(({ theme }) => ({\n  flexDirection: 'row',\n  alignItems: 'stretch',\n  width: '95%',\n  marginTop: '20px',\n  [theme.breakpoints.down('sm')]: {\n    flexDirection: 'column',\n  },\n}));\n\nexport const StrengthsWeaknessesContainer = styled(Stack)(({ theme }) => ({\n  alignItems: 'flex-start',\n  width: '100%',\n  border: '1px solid lightgray',\n  borderRadius: '4px',\n  padding: '16px',\n  margin: '8px 8px 8px 0',\n}));\n\nexport const StrengthsWeaknessesUnorderedList = styled('ul')(({ theme }) => ({\n  margin: 0,\n  paddingLeft: '24px',\n}));\n\nexport const StrengthsWeaknessesListItem = styled('li')(({ theme }) => ({\n  marginTop: '16px',\n}));\n", "import { PersonalityStrengthWeakness } from 'routes/Dashboard/PersonalityTraits/usePersonalityDescriptions/types';\nimport { StrengthsWeaknessesListItem } from './components';\n\nexport const renderStrengthsWeaknesses = (\n  attributes: PersonalityStrengthWeakness[]\n) => {\n  return attributes.map((attribute, index) => {\n    return (\n      <StrengthsWeaknessesListItem key={index + attribute.label}>\n        <strong>{attribute.label}:</strong> {attribute.description}\n      </StrengthsWeaknessesListItem>\n    );\n  });\n};\n", "import { Stack, Text } from '@ltvco/refresh-lib/theme';\nimport { renderStrengthsWeaknesses } from './utils';\nimport {\n  StrengthsWeaknessesContainer,\n  StrengthsWeaknessesUnorderedList,\n  StrengthsWeaknessesWrapper,\n} from './components';\nimport { PersonalityStrengthWeakness } from 'routes/Dashboard/PersonalityTraits/usePersonalityDescriptions/types';\nimport { Brightness7, BrightnessLow } from '@mui/icons-material';\n\ntype StrengthsWeaknessesProps = {\n  strengths: PersonalityStrengthWeakness[];\n  weaknesses: PersonalityStrengthWeakness[];\n};\n\nexport const StrengthsWeaknesses = ({\n  strengths,\n  weaknesses,\n}: StrengthsWeaknessesProps) => {\n  return (\n    <StrengthsWeaknessesWrapper>\n      <StrengthsWeaknessesContainer>\n        <Stack flexDirection=\"row\">\n          <Brightness7 fontSize=\"small\" />\n          <Text variant=\"h4\" marginLeft=\"8px\">\n            Possible Strengths\n          </Text>\n        </Stack>\n        <StrengthsWeaknessesUnorderedList>\n          {renderStrengthsWeaknesses(strengths)}\n        </StrengthsWeaknessesUnorderedList>\n      </StrengthsWeaknessesContainer>\n      <StrengthsWeaknessesContainer>\n        <Stack flexDirection=\"row\">\n          <BrightnessLow fontSize=\"small\" />\n          <Text variant=\"h4\" marginLeft=\"8px\">\n            Possible Weaknesses\n          </Text>\n        </Stack>\n        <StrengthsWeaknessesUnorderedList>\n          {renderStrengthsWeaknesses(weaknesses)}\n        </StrengthsWeaknessesUnorderedList>\n      </StrengthsWeaknessesContainer>\n    </StrengthsWeaknessesWrapper>\n  );\n};\n", "import {\n  Button,\n  Divider,\n  Stack,\n  Text,\n  Tooltip,\n  useTheme,\n} from '@ltvco/refresh-lib/theme';\nimport { useScreenSize } from '@ltvco/refresh-lib/utils';\nimport {\n  personalityTestTraitsHashMap,\n  personalityTraitsHashMap,\n  personalityTraitsTooltipsCopyHashMap,\n} from '../utils';\nimport { PersonalityTestScore } from '../../usePersoniltyScore/usePersonailyScore';\nimport { useState } from 'react';\nimport { usePersonalityDescriptions } from '../../usePersonalityDescriptions/usePersonalityDescriptions';\nimport { renderImageBasedOnTrait } from './utils';\nimport { PersonalityTraitResult } from './PersonalityTraitResult/PersonalityTraitResult';\nimport {\n  PersonalityTraitsTestsResultsHeader,\n  PersonalityTraitsTestsResultsHeaderBody,\n  PersonalityTraitsTestsResultsMobileHeader,\n  PersonalityTraitsTestsResultsWrapper,\n} from './components';\nimport { StrengthsWeaknesses } from './PersonalityTraitResult/StrengthsWeaknesses/StrengthsWeaknesses';\nimport { ExpandLess, ExpandMore, Info } from '@mui/icons-material';\n\ntype PersonalityTraitsTestResults = {\n  personalityTraitsResultKey: string;\n  personalityTraitsResults: PersonalityTestScore;\n  fourAspectsAnalysis?: {\n    extraversion2: string;\n    realism: string;\n    objectivity: string;\n    planning: string;\n  };\n};\n\nexport const PersonalityTraitsTestResults = ({\n  personalityTraitsResults,\n  personalityTraitsResultKey,\n  fourAspectsAnalysis,\n}: PersonalityTraitsTestResults) => {\n  const [expandedState, setExpandedState] = useState(false);\n  const theme = useTheme();\n  const { isDesktop } = useScreenSize();\n  const {\n    getFourAspectsType,\n    getTitle,\n    getDescription,\n    getSummarizedDescription,\n    getStrengths,\n    getWeaknesses,\n  } = usePersonalityDescriptions();\n\n  const fourAspectsType = fourAspectsAnalysis\n    ? getFourAspectsType(fourAspectsAnalysis)\n    : '';\n\n  const calculateHighestPersonalityTraitScore = () => {\n    let highestScore = 0;\n    let highestScoreKey = '';\n    Object.keys(personalityTraitsHashMap[personalityTraitsResultKey]).forEach(\n      (key) => {\n        if (personalityTraitsResults[key] > highestScore) {\n          highestScore = personalityTraitsResults[key];\n          highestScoreKey = key;\n        }\n      }\n    );\n    if (!highestScoreKey) {\n      highestScoreKey = Object.keys(\n        personalityTraitsHashMap[personalityTraitsResultKey]\n      )[0];\n    }\n    return highestScoreKey;\n  };\n\n  const highestScoreTrait = calculateHighestPersonalityTraitScore();\n\n  const handleExpand = () => {\n    setExpandedState(!expandedState);\n  };\n\n  const renderTestResultsSummary = () => {\n    let summaryParagraph = '';\n\n    if (personalityTraitsResultKey === 'fourAspects') {\n      getDescription(fourAspectsType).map(\n        (description) => (summaryParagraph += ` ${description}`)\n      );\n      return <Text marginBottom=\"8px\">{summaryParagraph}</Text>;\n    } else {\n      getSummarizedDescription(highestScoreTrait).map(\n        (description) => (summaryParagraph += ` ${description}`)\n      );\n      return <Text marginBottom=\"8px\">{summaryParagraph}</Text>;\n    }\n  };\n\n  const renderPersonalityTraits = () => {\n    return Object.keys(\n      personalityTraitsHashMap[personalityTraitsResultKey]\n    ).map((personalityTraitTestName) => {\n      const percentage = Math.round(\n        personalityTraitsResults[personalityTraitTestName] * 100\n      );\n      if (personalityTraitsResultKey === 'fourAspects') {\n        return (\n          <PersonalityTraitResult\n            key={personalityTraitTestName}\n            personalityTraitResultType={getTitle(personalityTraitTestName)}\n            personalityTraitResultTypeLabel={\n              getSummarizedDescription(personalityTraitTestName)[0]\n            }\n            personalityTraitResultTypeDescription={getSummarizedDescription(\n              personalityTraitTestName\n            ).splice(1)}\n            personalityTraitResultPercentrage={percentage}\n            personalityTraitResultStrengths={getStrengths(fourAspectsType)}\n            personalityTraitResultWeaknesses={getWeaknesses(fourAspectsType)}\n          />\n        );\n      }\n      return (\n        <PersonalityTraitResult\n          key={personalityTraitTestName}\n          personalityTraitResultType={getTitle(personalityTraitTestName)}\n          personalityTraitResultTypeLabel={getTitle(personalityTraitTestName)}\n          personalityTraitResultTypeDescription={getDescription(\n            personalityTraitTestName\n          )}\n          personalityTraitResultPercentrage={percentage}\n          personalityTraitResultStrengths={getStrengths(\n            personalityTraitTestName\n          )}\n          personalityTraitResultWeaknesses={getWeaknesses(\n            personalityTraitTestName\n          )}\n        />\n      );\n    });\n  };\n\n  const renderMobileHeader = () => {\n    return (\n      <Stack marginTop=\"16px\">\n        <PersonalityTraitsTestsResultsMobileHeader>\n          {fourAspectsAnalysis ? (\n            <img\n              src={renderImageBasedOnTrait(fourAspectsType)}\n              style={{ width: '61px' }}\n            />\n          ) : (\n            <img\n              src={renderImageBasedOnTrait(highestScoreTrait)}\n              style={{ width: '61px' }}\n            />\n          )}\n          <Stack marginLeft=\"16px\">\n            <Text display=\"flex\" alignItems=\"center\">\n              {personalityTestTraitsHashMap[personalityTraitsResultKey]}\n              <Tooltip\n                title={\n                  personalityTraitsTooltipsCopyHashMap[\n                    personalityTraitsResultKey\n                  ]\n                }\n                placement=\"bottom\"\n                enterTouchDelay={0}\n              >\n                <Info\n                  sx={{\n                    fontSize: '1rem',\n                    margin: '5px',\n                    color: theme.palette.primary.main,\n                  }}\n                />\n              </Tooltip>\n            </Text>\n            <Text variant=\"h4\">\n              Your Leading Type:{' '}\n              {getTitle(fourAspectsType ? fourAspectsType : highestScoreTrait)}\n            </Text>\n          </Stack>\n        </PersonalityTraitsTestsResultsMobileHeader>\n        {renderTestResultsSummary()}\n        <Button\n          variant=\"contained\"\n          onClick={handleExpand}\n          sx={{ marginTop: '16px', width: 'min-content' }}\n        >\n          {expandedState ? (\n            <>\n              Hide <ExpandLess />\n            </>\n          ) : (\n            <>\n              View <ExpandMore />\n            </>\n          )}\n        </Button>\n      </Stack>\n    );\n  };\n\n  return (\n    <PersonalityTraitsTestsResultsWrapper>\n      {!isDesktop ? (\n        renderMobileHeader()\n      ) : (\n        <PersonalityTraitsTestsResultsHeader>\n          {fourAspectsAnalysis ? (\n            <img\n              src={renderImageBasedOnTrait(fourAspectsType)}\n              style={{ width: '61px' }}\n            />\n          ) : (\n            <img\n              src={renderImageBasedOnTrait(highestScoreTrait)}\n              style={{ width: '61px' }}\n            />\n          )}\n          <PersonalityTraitsTestsResultsHeaderBody>\n            <Text display=\"flex\" alignItems=\"center\">\n              {personalityTestTraitsHashMap[personalityTraitsResultKey]}\n              <Tooltip\n                title={\n                  personalityTraitsTooltipsCopyHashMap[\n                    personalityTraitsResultKey\n                  ]\n                }\n                placement=\"right-start\"\n                enterTouchDelay={0}\n              >\n                <Info\n                  sx={{\n                    fontSize: '1rem',\n                    margin: '5px',\n                    color: theme.palette.primary.main,\n                  }}\n                />\n              </Tooltip>\n            </Text>\n            <Text variant=\"h4\">\n              Your Leading Type:{' '}\n              {getTitle(fourAspectsType ? fourAspectsType : highestScoreTrait)}\n            </Text>\n            {renderTestResultsSummary()}\n          </PersonalityTraitsTestsResultsHeaderBody>\n          <Button variant=\"contained\" onClick={handleExpand}>\n            {expandedState ? (\n              <>\n                Hide <ExpandLess />\n              </>\n            ) : (\n              <>\n                View <ExpandMore />\n              </>\n            )}\n          </Button>\n        </PersonalityTraitsTestsResultsHeader>\n      )}\n      <Stack\n        sx={(theme) => ({\n          padding: '16px',\n          width: '100%',\n          marginLeft: '8px',\n          [theme.breakpoints.down('sm')]: {\n            padding: 0,\n          },\n        })}\n      >\n        {expandedState ? (\n          <>\n            {renderPersonalityTraits()}{' '}\n            <StrengthsWeaknesses\n              strengths={\n                personalityTraitsResultKey === 'fourAspects'\n                  ? getStrengths(fourAspectsType)\n                  : getStrengths(highestScoreTrait)\n              }\n              weaknesses={\n                personalityTraitsResultKey === 'fourAspects'\n                  ? getWeaknesses(fourAspectsType)\n                  : getWeaknesses(highestScoreTrait)\n              }\n            />\n          </>\n        ) : null}\n      </Stack>\n      <Divider\n        sx={(theme) => ({\n          padding: 0,\n          [theme.breakpoints.down('sm')]: {\n            padding: '16px',\n          },\n        })}\n      />\n    </PersonalityTraitsTestsResultsWrapper>\n  );\n};\n", "import { Button, Stack, Text } from '@ltvco/refresh-lib/theme';\nimport { PersonalityTraitsTestResults } from './PersonalityTraitsTestResults/PersonalityTraitsResults';\nimport { PersonalityScore } from '../usePersoniltyScore/usePersonailyScore';\nimport { Refresh } from '@mui/icons-material';\n\ntype PersonalityTraitsResultsContainerProps = {\n  personalityScores: PersonalityScore;\n  fourAspectsAnalysis: any;\n  retakeTest: () => void;\n};\n\nexport const PersonalityTraitsResultsContainer = ({\n  personalityScores,\n  fourAspectsAnalysis,\n  retakeTest,\n}: PersonalityTraitsResultsContainerProps) => {\n  const renderAllPersonalityTraits = () => {\n    return Object.keys(personalityScores).map((key) => {\n      if (key === 'fourAspects') {\n        return (\n          <>\n            <PersonalityTraitsTestResults\n              key={key}\n              personalityTraitsResults={personalityScores[key]}\n              personalityTraitsResultKey={key}\n              fourAspectsAnalysis={fourAspectsAnalysis}\n            />\n          </>\n        );\n      } else {\n        return (\n          <PersonalityTraitsTestResults\n            key={key}\n            personalityTraitsResults={personalityScores[key]}\n            personalityTraitsResultKey={key}\n          />\n        );\n      }\n    });\n  };\n\n  return (\n    <Stack width=\"100%\">\n      <Stack\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        margin=\"16px\"\n        alignItems=\"flex-start\"\n      >\n        <Text variant=\"h2\">Your personality profile</Text>\n        <Button\n          variant=\"outlined\"\n          size=\"small\"\n          onClick={retakeTest}\n          sx={(theme) => ({\n            width: 'max-content',\n            textWrap: 'nowrap',\n            [theme.breakpoints.down('sm')]: {\n              width: '50%',\n            },\n          })}\n        >\n          <Refresh />{' '}\n          {localStorage.getItem('answersStorage')\n            ? 'Continue Test'\n            : 'Retake Test'}\n        </Button>\n      </Stack>\n      {renderAllPersonalityTraits()}\n    </Stack>\n  );\n};\n", "export const traitsTheme = {\n  traitsColors: {\n    analyst: {\n      primary: '#f0faf0',\n      secondary: '#05A52B',\n    },\n    diplomats: {\n      primary: '#ffeef1',\n      secondary: '#FF113F',\n    },\n    explorers: {\n      primary: '#F4F0E6',\n      secondary: '#825E01',\n    },\n    sentinels: {\n      primary: '#eff6fb',\n      secondary: '#0085C6',\n    },\n  },\n  mainBackground: '#fff',\n  categoryBoxShadow: '0 3px 8px 0 rgba(0, 0, 0, 0.12)',\n  resultContainer: '#ccf1d6',\n  modalContainerBackground: '#4a3b8f',\n  firstStepBackground: '#F2F0FF',\n};\n", "import { Stack, styled } from '@ltvco/refresh-lib/theme';\nimport { traitsTheme } from '../constants';\n\nexport const ModalContent = styled('div')`\n  background-color: ${traitsTheme.firstStepBackground};\n  width: 100%;\n  z-index: 1;\n  border-radius: 8px;\n  position: relative;\n`;\n\nexport const StepContainer = styled(Stack)(({ theme }) => ({\n  padding: '20px 16px',\n  alignItems: 'center',\n  [theme.breakpoints.up('sm')]: {\n    padding: '20px 40px 86px',\n  },\n}));\n\nexport const TraitCategoriesContainer = styled(Stack)(({ theme }) => ({\n  width: '100%',\n  flexDirection: 'column',\n  flexFlow: 'wrap',\n  justifyContent: 'space-evenly',\n  [theme.breakpoints.up('sm')]: {\n    flexDirection: 'row',\n  },\n}));\n\nexport const TraitCategoryContainer = styled('div')(({ theme }) => ({\n  width: '89px',\n  borderRadius: '8px',\n  boxShadow: traitsTheme.categoryBoxShadow,\n  padding: '10px',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  marginBottom: '20px',\n  [theme.breakpoints.up('sm')]: {\n    width: '110px',\n    marginBottom: '10px',\n  },\n}));\n\nexport const TraitResultContainer = styled(Stack)(({ theme }) => ({\n  background: traitsTheme.resultContainer,\n  width: '100%',\n  justifyContent: 'center',\n  alignItems: 'center',\n  borderRadius: '8px',\n  border: '3px solid #fff',\n  boxShadow: traitsTheme.categoryBoxShadow,\n  padding: '10px',\n  flexDirection: 'column',\n\n  [theme.breakpoints.up('sm')]: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n}));\n\nexport const TraitImage = styled('img')(({ theme }) => ({\n  width: '100px',\n  height: '100px',\n  [theme.breakpoints.up('sm')]: {\n    width: '65px',\n    height: '65px',\n  },\n}));\n\nexport const TraitResultContent = styled(Stack)(({ theme }) => ({\n  alignItems: 'center',\n\n  [theme.breakpoints.up('sm')]: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'row',\n  },\n}));\n\nexport const TextContainer = styled(Stack)(({ theme }) => ({\n  flexDirection: 'column',\n\n  [theme.breakpoints.up('sm')]: {\n    flexDirection: 'row',\n  },\n}));\n", "import { Button, Text } from '@ltvco/refresh-lib/theme';\nimport { ModalContent, StepContainer } from './components';\nimport { constants } from 'appConstants';\n\ninterface StepOneProps {\n  buttonOnClick: () => void;\n}\n\nexport const StepOne = ({ buttonOnClick }: StepOneProps) => {\n  const colorBar = constants.images.colorBar;\n  const personalityTraitsLogo = constants.images.personalityTraitsLogo;\n  const personalityTraitsModal = constants.images.personalityTraitsModal;\n\n  return (\n    <ModalContent>\n      <img\n        src={colorBar}\n        style={{\n          width: '100%',\n          right: '1px',\n          position: 'absolute',\n          top: '0%',\n        }}\n        alt=\"Color Bar\"\n      />\n      <img\n        src={personalityTraitsModal}\n        alt=\"Personality Traits Categories\"\n        style={{\n          position: 'relative',\n          width: '100%',\n          top: '3%',\n        }}\n      />\n\n      <StepContainer>\n        <Text variant=\"h1\" textAlign={'center'} mt={2.5}>\n          Welcome to the AI Personality Test!\n        </Text>\n        <Text variant=\"body1\" textAlign={'center'} mb={2}>\n          Be yourself and answer honestly to find out your personality type.\n          There are no right or wrong answers, only what feels most accurate to\n          you.\n        </Text>\n        <Button\n          onClick={buttonOnClick}\n          variant=\"contained\"\n          sx={{ backgroundColor: '#000' }}\n        >\n          Find your Personality Type\n          <img src={personalityTraitsLogo} alt=\"Personality Traits Logo\" />\n        </Button>\n      </StepContainer>\n    </ModalContent>\n  );\n};\n", "import { PersonalityTraitsAnswersProps } from './types';\nimport { useContext } from 'react';\nimport { useServiceToken } from '@ltvco/refresh-lib/v1';\nimport { AppConfig } from '@ltvco/refresh-lib/ctx';\nimport { useQuery } from '@ltvco/refresh-lib/vendors';\n\nexport const usePersonalityTraitsQuestions = () => {\n  const { data: tokenData } = useServiceToken('bow_tie');\n  const { logError } = useContext(AppConfig);\n\n  return useQuery({\n    queryKey: ['bow_questions'],\n    queryFn: () => getQuestions(tokenData?.token),\n    onError: (error) => {\n      // If the request to the Questions fails\n      // We set the dqs_completed to avoid a loop of redirect to the onboarding page\n      // due we redirect on the auth route\n      sessionStorage.setItem('dqs_completed', 'true');\n      logError('Error requesting personality traits questions', error as Error);\n    },\n    enabled: !!tokenData?.token,\n    retry: 1,\n  });\n};\n\nexport const getQuestions = async (token: string) => {\n  const response = await fetch('/bow/v1/question_set?plan_id=TRAIT_BV_01', {\n    headers: {\n      'content-type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  if (!response.ok) {\n    throw new Error(`status ${response.status}`);\n  }\n\n  const questions = await response.json();\n\n  const middleQuestion = {\n    page_header: 'Personality Test',\n    page: 1,\n    screen: 1,\n    screen_id: 'TRAIT-BV-01-26',\n    question_text: \"Halfway There! You're doing great! Ready to...\",\n    response: {\n      answer_set: ['Continue'],\n      custom_attribute: 'middle_screen',\n      data_type: 'string',\n      input_type: 'button',\n    },\n  };\n\n  const endQuestion = {\n    page_header: 'Personality Test',\n    page: 1,\n    screen: 1,\n    screen_id: 'TRAIT-BV-01-52',\n    question_text: 'Generating Your Personality Profile, Just a Moment...',\n    response: {\n      answer_set: ['Finish'],\n      custom_attribute: 'end_screen',\n      data_type: 'string',\n      input_type: 'button',\n    },\n  };\n\n  const middleIndex = Math.floor(questions.question_set.questions.length / 2);\n\n  // Insert the middle question at the middle index\n  questions.question_set.questions.splice(middleIndex, 0, middleQuestion);\n\n  // Update screen_id of subsequent questions\n  for (\n    let i = middleIndex + 1;\n    i < questions.question_set.questions.length;\n    i++\n  ) {\n    const currentQuestion = questions.question_set.questions[i];\n    const newScreenId = `TRAIT-BV-01-${String(i + 1).padStart(2, '0')}`;\n    currentQuestion.screen_id = newScreenId;\n  }\n\n  // Add the end question at the end\n  questions.question_set.questions.push(endQuestion);\n\n  return questions;\n};\n\nexport const usePostTraitsAnswers = () => {\n  const { data: tokenData, isLoading: tokenIsLoading } =\n    useServiceToken('bow_tie');\n  const { logError } = useContext(AppConfig);\n\n  async function postAnswers(answers?: PersonalityTraitsAnswersProps) {\n    try {\n      const response = await fetch('/bow/v1/answer_sets', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          Authorization: `Bearer ${tokenData?.token}`,\n        },\n        body: JSON.stringify(answers),\n      });\n\n      // As the try catch doesn't catch the 404 422 500 status code\n      // we check it manually\n      // 422 for this, means an user already submitted the answers\n      if (!response.ok) {\n        throw new Error(`status ${response.status}`);\n      } else {\n        return response.json();\n      }\n    } catch (error) {\n      logError('Error posting traits answers', error as Error);\n    }\n  }\n\n  return {\n    postAnswers,\n    tokenIsLoading,\n  };\n};\n\nexport const usePersonalityTraitsAnswers = () => {\n  const { data: tokenData } = useServiceToken('bow_tie');\n  const { logError } = useContext(AppConfig);\n\n  return useQuery({\n    queryKey: ['bow_answers'],\n    queryFn: async () => await getAnswers(tokenData?.token),\n    onError: (error) => {\n      // If the request to the Questions fails\n      // We set the dqs_completed to avoid a loop of redirect to the onboarding page\n      // due we redirect on the auth route\n      logError('Error requesting personality traits answers', error as Error);\n    },\n    enabled: !!tokenData?.token,\n    retry: 1,\n  });\n};\n\nexport const getAnswers = async (token: string) => {\n  const response = await fetch(\n    '/bow/v1/answer_sets/latest?plan_id=TRAIT_BV_01',\n    {\n      headers: {\n        'content-type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    }\n  );\n\n  if (!response.ok) {\n    throw new Error(`status ${response.status}`);\n  }\n\n  const answers = await response.json();\n\n  return answers;\n};\n", "export const PREVIOUS_ACTION = 'PREV';\n\nexport const NEXT_ACTION = 'NEXT';\n\nexport const DELAY_SHOW_DURATION = 300;\n\nexport const DELAY_HIDE_DURATION = 500;\n", "import { useState, useEffect } from 'react';\nimport {\n  NEXT_ACTION,\n  PREVIOUS_ACTION,\n  DELAY_SHOW_DURATION,\n  DELAY_HIDE_DURATION,\n} from './constants';\nimport {\n  PersonalityTraitsQuestionsProps,\n  QuestionProps,\n  AnswersProps,\n  usePostTraitsAnswers,\n} from '../index';\nimport { useSession } from '@ltvco/refresh-lib/v1';\n\nconst getSavedQuestion = (questions: QuestionProps[]) => {\n  const savedQuestionIndex = localStorage.getItem('activeQuestionIndex') || '';\n  if (savedQuestionIndex) {\n    return questions[+savedQuestionIndex];\n  }\n  return questions[0];\n};\n\nconst saveActiveQuestionIndex = (\n  questions: QuestionProps[],\n  activeQuestion: QuestionProps\n) => {\n  const index = questions.findIndex(\n    (question) => question.screen_id === activeQuestion.screen_id\n  );\n  localStorage.setItem('activeQuestionIndex', JSON.stringify(index));\n};\n\nexport const usePersonalityTraitsWizard = (\n  initialQuestions: PersonalityTraitsQuestionsProps\n) => {\n  const {\n    session: { account },\n  } = useSession();\n  const { postAnswers } = usePostTraitsAnswers();\n  const [planId] = useState<string>(initialQuestions.question_plan);\n  const [questions] = useState<QuestionProps[]>(initialQuestions.questions);\n\n  const shuffledQuestions = questions;\n\n  const savedQuestion = getSavedQuestion(shuffledQuestions);\n  const [activeQuestion, setActiveQuestion] =\n    useState<QuestionProps>(savedQuestion);\n  const savedQuestionIndex = localStorage.getItem('activeQuestionIndex')\n    ? JSON.parse(localStorage.getItem('activeQuestionIndex')!)\n    : 0;\n  const [questionNumber, setQuestionNumber] = useState<number>(\n    savedQuestionIndex + 1\n  );\n  const [progressBarPercentage, setProgressBarPercentage] = useState<number>(\n    (savedQuestionIndex / questions.length) * 100\n  );\n  const [questionSwitching, setQuestionSwitching] = useState<boolean>(false);\n  const [isReadyForSubmit, setIsReadyForSubmit] = useState<boolean>(false);\n  const [answersStorage, setAnswersStorage] = useState<AnswersProps[]>(() => {\n    const savedAnswers = localStorage.getItem('answersStorage');\n    return savedAnswers ? JSON.parse(savedAnswers) : [];\n  });\n  useEffect(() => {\n    if (isReadyForSubmit) {\n      setIsReadyForSubmit(false);\n      _postAnswers();\n    }\n  }, [isReadyForSubmit]);\n\n  const storeQuestionAnswer = (answer: AnswersProps) => {\n    if (answer.response && _isLastQuestion()) {\n      _updateAnswersStorage(answer);\n      setIsReadyForSubmit(true);\n      _nextQuestion();\n      return;\n    }\n    if (!answer.response || _isLastQuestion()) {\n      _translateQuestionToLeft();\n      setIsReadyForSubmit(true);\n      return;\n    }\n\n    _updateAnswersStorage(answer);\n    _nextQuestion();\n  };\n\n  const _postAnswers = () => {\n    const storedAnswers = localStorage.getItem('answersStorage');\n    let answersToPost: AnswersProps[] = storedAnswers\n      ? JSON.parse(storedAnswers)\n      : answersStorage;\n\n    // Filter out the middle answer before posting\n    let filteredAnswers = answersToPost.filter(\n      (answer) => !(answer.screen_id === 'TRAIT-BV-01-26')\n    );\n\n    // Update screen IDs after removing the middle question\n    filteredAnswers = filteredAnswers.map((answer, index) => {\n      if (parseInt(answer.screen_id.split('-').pop()!, 10) > 26) {\n        return {\n          ...answer,\n          screen_id: decreaseLastNumber(answer.screen_id),\n        };\n      }\n      return answer;\n    });\n\n    postAnswers({\n      user_code: account?.account.user_info.user_code,\n      plan_id: planId,\n      identifier: 'personality-test-v1',\n      answers: filteredAnswers,\n    });\n\n    // Update the local state with the decremented screen IDs\n    setAnswersStorage(filteredAnswers);\n\n    // Save the updated answers to localStorage\n    localStorage.setItem('answersStorage', JSON.stringify(filteredAnswers));\n  };\n\n  const _updateAnswersStorage = (answer: AnswersProps) => {\n    setAnswersStorage((prevAnswersStorage) => {\n      const updatedAnswers = prevAnswersStorage.filter(\n        (storedAnswer) => storedAnswer.screen_id !== 'TRAIT-BV-01-26'\n      );\n\n      const existingAnswerIndex = updatedAnswers.findIndex(\n        (storedAnswer) => storedAnswer?.screen_id === answer.screen_id\n      );\n\n      if (existingAnswerIndex !== -1) {\n        updatedAnswers.splice(existingAnswerIndex, 1);\n      }\n\n      const newAnswersStorage = [...updatedAnswers, answer];\n\n      localStorage.setItem('answersStorage', JSON.stringify(newAnswersStorage));\n\n      return newAnswersStorage;\n    });\n  };\n\n  const _identifyQuestion = (index: number): QuestionProps => {\n    // Ensure the index is within bounds\n    if (index < 0 || index >= shuffledQuestions.length) {\n      throw new Error('Index out of bounds');\n    }\n    return shuffledQuestions[index];\n  };\n\n  const _isFirstQuestion = () =>\n    shuffledQuestions[0].screen_id === activeQuestion.screen_id;\n\n  const _isLastQuestion = () =>\n    shuffledQuestions[shuffledQuestions.length - 2].screen_id ===\n    activeQuestion.screen_id;\n\n  const _nextQuestion = () => {\n    _translateQuestionToLeft();\n    _hideAndShowNextQuestion(NEXT_ACTION);\n  };\n\n  const prevQuestion = () => {\n    if (_isFirstQuestion()) return;\n\n    _translateQuestionToLeft();\n    _hideAndShowNextQuestion(PREVIOUS_ACTION);\n  };\n\n  // HTML Manipulation Functions\n  const _translateQuestionToLeft = () => {\n    setQuestionSwitching(true);\n    const element = document.getElementById(\n      `container-${activeQuestion.screen_id}`\n    );\n    if (element) {\n      const elementWidth = 1000;\n      element.style.transform = `translateX(-${elementWidth}px)`;\n    }\n  };\n\n  const decreaseLastNumber = (screenId: string) => {\n    const parts = screenId.split('-');\n    const lastNumber = parseInt(parts[parts.length - 1], 10) - 1;\n    parts[parts.length - 1] = String(lastNumber).padStart(2, '0');\n    return parts.join('-');\n  };\n\n  const _hideAndShowNextQuestion = (action: string) => {\n    let questionToRenderScreen = 0;\n    const element = document.getElementById(\n      `container-${activeQuestion.screen_id}`\n    );\n    if (!element) return;\n\n    setTimeout(() => {\n      _hideAndRestoreStyleHtmlElement(element);\n\n      if (action === NEXT_ACTION) {\n        questionToRenderScreen = parseInt(savedQuestionIndex) + 1;\n        setQuestionNumber(questionNumber + 1);\n      } else {\n        questionToRenderScreen = parseInt(savedQuestionIndex) - 1;\n        setQuestionNumber(questionNumber - 1);\n      }\n\n      const questionToRender = _identifyQuestion(questionToRenderScreen);\n      setActiveQuestion(questionToRender);\n      setProgressBarPercentage(\n        (questionNumber / shuffledQuestions.length) * 100\n      );\n      _showHtmlElement(element);\n    }, DELAY_HIDE_DURATION);\n  };\n\n  const _hideAndRestoreStyleHtmlElement = (element: HTMLElement) => {\n    if (element) {\n      element.classList.add('d-none');\n      element.style.transform = 'translateY(-0px)';\n    }\n  };\n\n  const _showHtmlElement = (element: HTMLElement) => {\n    if (element) {\n      setTimeout(() => {\n        element.classList.remove('d-none');\n        setQuestionSwitching(false);\n      }, DELAY_SHOW_DURATION);\n    }\n  };\n\n  // Save active question index whenever the active question changes\n  useEffect(() => {\n    saveActiveQuestionIndex(shuffledQuestions, activeQuestion);\n  }, [activeQuestion, questions]);\n\n  return {\n    prevQuestion,\n    questionSwitching,\n    activeQuestion,\n    progressBarPercentage,\n    storeQuestionAnswer,\n  };\n};\n", "import { Button, Stack, styled } from '@ltvco/refresh-lib/theme';\n\nexport const StyledButton = styled(Button)(({ theme }) => ({\n  minWidth: '30px',\n  padding: '1px',\n  height: '46px',\n  borderWidth: '1px',\n  [theme.breakpoints.up('sm')]: {\n    minWidth: '30px',\n    paddingLeft: '5px',\n    paddingRight: '5px',\n    height: '46px',\n  },\n}));\n\nexport const Container = styled('div')(({ theme }) => ({\n  maxWidth: '540px',\n  justifyContent: 'center',\n  margin: 'auto',\n  display: 'flex',\n  flexDirection: 'column-reverse',\n  flexWrap: 'wrap',\n  width: '100%',\n  gap: theme.spacing(1.5),\n  [theme.breakpoints.up('sm')]: {\n    maxWidth: '900px',\n    gap: theme.spacing(1.5),\n  },\n}));\n\nexport const TextContainer = styled(Stack)(() => ({\n  flexDirection: 'row',\n  justifyContent: 'space-around',\n  width: '100%',\n}));\n", "import { StyledButton, Container, TextContainer } from './constants';\nimport { SimpleQuestionSurveyProps } from '../QuestionSurveyService/constants';\nimport { Text } from '@ltvco/refresh-lib/theme';\nimport { useScreenSize } from '@ltvco/refresh-lib/utils';\nimport { constants } from 'appConstants';\nimport React from 'react';\n\nexport const PersonalityTraitsRadioButton = ({\n  answerSet,\n  screenId,\n  customAttribute,\n  storeAnswer,\n}: SimpleQuestionSurveyProps) => {\n  const { isMobile } = useScreenSize();\n  return (\n    <Container>\n      {answerSet.map((answer: string, index: number) => (\n        <React.Fragment key={answer}>\n          <StyledButton\n            color=\"primary\"\n            variant=\"outlined\"\n            onClick={() =>\n              storeAnswer({\n                screen_id: screenId,\n                custom_attribute: customAttribute,\n                response: answer,\n              })\n            }\n            sx={{\n              borderColor:\n                constants.personalityTraitsColors.radioButtonColors[index],\n              '&:hover': {\n                border: `1px solid ${constants.personalityTraitsColors.radioButtonColors[index]} !important`,\n                backgroundColor: isMobile\n                  ? 'inherit'\n                  : constants.personalityTraitsColors.radioButtonHoverColors[\n                      index\n                    ],\n              },\n              '&:active': {\n                border: `1px solid ${constants.personalityTraitsColors.radioButtonColors[index]} !important`,\n                backgroundColor:\n                  constants.personalityTraitsColors.radioButtonHoverColors[\n                    index\n                  ],\n              },\n            }}\n          >\n            <Text\n              variant=\"h4\"\n              color={constants.personalityTraitsColors.radioButtonColors[index]}\n              mb={0}\n            >\n              {answer}\n            </Text>\n          </StyledButton>\n        </React.Fragment>\n      ))}\n    </Container>\n  );\n};\n", "import { Button, styled } from '@ltvco/refresh-lib/theme';\n\nexport const StyledButton = styled(Button)(() => ({\n  minWidth: '113px',\n  padding: '1px',\n  height: '42px',\n}));\n\nexport const Container = styled('div')(() => ({\n  maxWidth: '540px',\n  justifyContent: 'start',\n  display: 'flex',\n}));\n", "import { StyledButton, Container } from './constants';\nimport { SimpleQuestionSurveyProps } from '../QuestionSurveyService/constants';\nimport React from 'react';\n\nexport const PersonalityTraitsButton = ({\n  answerSet,\n  screenId,\n  customAttribute,\n  storeAnswer,\n}: SimpleQuestionSurveyProps) => {\n  return (\n    <Container>\n      {answerSet.map((answer: string) => (\n        <StyledButton\n          variant=\"contained\"\n          onClick={() =>\n            storeAnswer({\n              screen_id: screenId,\n              custom_attribute: customAttribute,\n              response: answer,\n            })\n          }\n          sx={{ backgroundColor: '#000' }}\n        >\n          {answer}\n        </StyledButton>\n      ))}\n    </Container>\n  );\n};\n", "import {\n  PersonalityTraitsRadioButton,\n  PersonalityTraitsButton,\n  PersonalityTraitsQuestionsProps,\n} from '../index';\n\nexport type ActiveComponentProps = {\n  radio: React.ComponentType<SimpleQuestionSurveyProps>;\n  button: React.ComponentType<SimpleQuestionSurveyProps>;\n};\n\nexport const ActiveComponent: ActiveComponentProps = {\n  radio: PersonalityTraitsRadioButton,\n  button: PersonalityTraitsButton,\n};\n\nexport interface QuestionsSurveyProps {\n  questionsSet: PersonalityTraitsQuestionsProps;\n  onTimeoutComplete: () => void;\n}\n\nexport interface SimpleQuestionSurveyProps {\n  /** Array of answers to the question */\n  answerSet: string[];\n  /** ID value is generated generated from the question plan and screen number */\n  screenId: string;\n  /** ID name of the question */\n  customAttribute: string;\n  /** Function to store the answer in the  Wizard's answersStorage */\n  storeAnswer: (answerData: {\n    screen_id: string;\n    custom_attribute: string;\n    response: string | string[] | null;\n  }) => void;\n}\n", "import { styled, Stack } from '@ltvco/refresh-lib/theme';\nimport { Height } from '@mui/icons-material';\n\nexport const ContentContainer = styled(Stack)(({ theme }) => ({\n  marginBottom: '20px',\n  minHeight: '400px',\n  overflow: 'hidden',\n  padding: '20px 15px 0',\n  position: 'relative',\n  justifyContent: 'center',\n  [theme.breakpoints.up('sm')]: {\n    minHeight: '600px',\n    padding: '40px 24px',\n  },\n  [theme.breakpoints.up('md')]: {\n    minHeight: '400px',\n    padding: '40px 24px',\n    height: '520px',\n  },\n\n  '#questionText-TRAIT-BV-01-26': {\n    textAlign: 'start',\n    justifyContent: 'start',\n    padding: '0',\n  },\n}));\n\nexport const TransitionStack = styled(Stack)(() => ({\n  transition: 'transform 0.5s ease-in-out, opacity 0.5s ease-in-out',\n  '&.entering': {\n    transform: 'translateX(0)',\n  },\n  '&.exiting': {\n    transform: 'translateX(100%)',\n  },\n}));\n\nexport const InlineContainer = styled('div')({\n  display: 'inline-flex',\n  height: '20px',\n});\n", "import Lottie from 'react-lottie';\nimport { constants } from 'appConstants';\n\nconst PersonalityTraitsLoading = () => {\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: constants.animations.personalityTraitsLoading,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice',\n    },\n  };\n\n  return (\n    <div>\n      <Lottie options={defaultOptions} height={200} width={200} />\n    </div>\n  );\n};\n\nexport default PersonalityTraitsLoading;\n", "import {\n  Box,\n  ProgressBar,\n  Stack,\n  styled,\n  Text,\n} from '@ltvco/refresh-lib/theme';\nimport { useScreenSize } from '@ltvco/refresh-lib/utils';\nimport {\n  ActiveComponent,\n  ActiveComponentProps,\n  QuestionsSurveyProps,\n} from './constants';\nimport { usePersonalityTraitsWizard } from '../wizard';\nimport { useEffect } from 'react';\nimport { ContentContainer } from './components';\nimport PersonalityTraitsLoading from './PersonalityTraitsAnimations';\n\nconst ProgressBarAdjusted = styled(ProgressBar)({\n  borderRadius: '8px 8px 0 0',\n  backgroundColor: '#d9e8c9',\n  '& .MuiLinearProgress-bar': {\n    backgroundColor: '#81B44C',\n  },\n});\n\nexport function QuestionsSurvey({\n  questionsSet,\n  onTimeoutComplete,\n}: QuestionsSurveyProps) {\n  const { activeQuestion, progressBarPercentage, storeQuestionAnswer } =\n    usePersonalityTraitsWizard(questionsSet);\n  const inputType = activeQuestion?.response.input_type;\n  const isMiddleQuestion = activeQuestion?.screen_id === 'TRAIT-BV-01-26';\n  const isLastQuestion = activeQuestion?.screen_id === 'TRAIT-BV-01-52';\n  const ComponentToRender =\n    ActiveComponent[inputType as keyof ActiveComponentProps];\n  const { isMobile } = useScreenSize();\n\n  const splitQuestionText = (text: string, breakIndex: number) => {\n    const beforeBreak = text.slice(0, breakIndex);\n    const afterBreak = text.slice(breakIndex);\n    return (\n      <span>\n        {beforeBreak}\n        <br />\n        {afterBreak}\n      </span>\n    );\n  };\n\n  useEffect(() => {\n    if (isLastQuestion) {\n      const timeout = setTimeout(() => {\n        onTimeoutComplete();\n      }, 2000);\n\n      return () => clearTimeout(timeout);\n    }\n  }, [activeQuestion, onTimeoutComplete, isLastQuestion]);\n\n  if (isLastQuestion) {\n    localStorage.removeItem('randomQuestions');\n    localStorage.removeItem('activeQuestionIndex');\n    localStorage.removeItem('answersStorage');\n    localStorage.removeItem('recordSearch');\n  }\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: '#fff',\n        zIndex: '1',\n        borderRadius: '8px',\n        width: '100%',\n      }}\n    >\n      <ProgressBarAdjusted\n        value={progressBarPercentage}\n        variant=\"determinate\"\n        sx={{ height: [16, 14] }}\n      />\n      <Text\n        variant=\"h6\"\n        color=\"#000\"\n        sx={{\n          position: 'absolute',\n          fontSize: [14, 16],\n        }}\n      >\n        {`${Math.round(progressBarPercentage)}%`}\n      </Text>\n      <ContentContainer>\n        <Stack\n          id={`container-${activeQuestion.screen_id}`}\n          sx={{ transition: '1s ease-in-out' }}\n        >\n          <Stack\n            sx={{ margin: '85px 0' }}\n            alignItems={isMiddleQuestion ? 'start' : 'center'}\n          >\n            <Text\n              variant=\"h3\"\n              color=\"#000\"\n              textAlign=\"start\"\n              sx={{\n                fontSize: [24, 30],\n                marginBottom: [3, 5],\n                padding: isMobile ? '0 20px' : '0 40px',\n              }}\n              id={`questionText-${activeQuestion.screen_id}`}\n            >\n              {isMiddleQuestion\n                ? splitQuestionText(activeQuestion.question_text, 14)\n                : activeQuestion.question_text}\n            </Text>\n            {isLastQuestion && <PersonalityTraitsLoading />}\n            <Stack\n              display={isLastQuestion ? 'none' : 'block'}\n              sx={{ width: '100%' }}\n            >\n              <ComponentToRender\n                storeAnswer={storeQuestionAnswer}\n                screenId={activeQuestion.screen_id}\n                answerSet={\n                  activeQuestion.response.answer_set\n                    ? activeQuestion.response.answer_set.map((item) =>\n                        String(item)\n                      )\n                    : []\n                }\n                customAttribute={\n                  activeQuestion.response.custom_attribute !== null &&\n                  activeQuestion.response.custom_attribute !== undefined\n                    ? activeQuestion.response.custom_attribute\n                    : ''\n                }\n              />\n            </Stack>\n          </Stack>\n        </Stack>\n      </ContentContainer>\n    </Box>\n  );\n}\n", "import { styled, Modal } from '@ltvco/refresh-lib/theme';\nimport { traitsTheme } from './constants';\nimport { constants } from 'appConstants';\n\nexport const PersonalityTraitsModal = styled(Modal)(({ theme }) => ({\n  overflow: 'scroll',\n\n  '.MuiPaper-root': {\n    maxWidth: 'unset',\n    maxHeight: 'unset',\n    margin: '0',\n    '.MuiDialogContent-root': {\n      padding: '0',\n    },\n  },\n  [theme.breakpoints.up('sm')]: {\n    overflow: 'hidden',\n  },\n}));\n\nexport const ModalContainer = styled('div')(({ theme }) => ({\n  padding: '40px 20px',\n  backgroundColor: traitsTheme.modalContainerBackground,\n  margin: 'auto',\n  top: '14%',\n  position: 'relative',\n  display: 'flex',\n  justifyContent: 'space-between',\n  width: '100%',\n  '&:before': {\n    content: '\"\"',\n    backgroundImage: `url(${constants.images.personalityTraitsModalDots})`,\n    position: 'absolute',\n    width: '281px',\n    height: '281px',\n    bottom: '0',\n    right: '0',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'right',\n  },\n  [theme.breakpoints.up('sm')]: {\n    padding: '40px',\n    width: '600px',\n  },\n}));\n", "import { useEffect, useState } from 'react';\nimport { StepOne } from './SurveySteps/StepOne';\nimport { styled, Button } from '@ltvco/refresh-lib/theme';\nimport {\n  PersonalityTraitsQuestionSet,\n  usePersonalityTraitsQuestions,\n} from 'routes/Dashboard/PersonalityTraits/PreTest/PersonalityTraitsSurveyHelpers';\nimport { QuestionsSurvey } from 'routes/Dashboard/PersonalityTraits/PreTest/PersonalityTraitsSurveyHelpers/QuestionSurveyService/QuestionsSurvey';\nimport { ModalContainer, PersonalityTraitsModal } from './components';\nimport { ErrorQuestions } from './SurveySteps/ErrorQuestions';\nimport { useSearchParams } from 'react-router-dom';\nimport { Close } from '@mui/icons-material';\n\ninterface MultiStepModalProps {\n  open: boolean;\n  handleClose: () => void;\n}\n\nconst CloseButton = styled(Button)(() => ({\n  position: 'absolute',\n  right: '0px',\n  color: '#fff',\n  top: '5px',\n}));\n\nexport const TraitsMultiStepModal = ({\n  open,\n  handleClose,\n}: MultiStepModalProps) => {\n  const { data: questions } = usePersonalityTraitsQuestions();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [step, setStep] = useState(1);\n  const [timeoutCompleted, setTimeoutCompleted] = useState(false);\n\n  const startSurvey = () => {\n    if (questions && (questions as PersonalityTraitsQuestionSet).question_set) {\n      setStep(2);\n    }\n  };\n\n  const handleTimeoutComplete = () => {\n    setTimeoutCompleted(true);\n  };\n\n  useEffect(() => {\n    if (timeoutCompleted) {\n      handleCloseModal();\n      searchParams.set('page', 'results');\n      setSearchParams(searchParams);\n    }\n  }, [timeoutCompleted, searchParams, setSearchParams]);\n\n  const ShowQuestions = () => {\n    if (questions && (questions as PersonalityTraitsQuestionSet).question_set) {\n      return (\n        <QuestionsSurvey\n          questionsSet={\n            (questions as PersonalityTraitsQuestionSet).question_set\n          }\n          onTimeoutComplete={handleTimeoutComplete}\n        />\n      );\n    } else {\n      <ErrorQuestions />;\n    }\n  };\n\n  const handleCloseModal = () => {\n    setStep(1);\n    setTimeoutCompleted(false);\n    handleClose();\n  };\n\n  return (\n    <PersonalityTraitsModal open={open} id=\"personality-modal\">\n      <ModalContainer>\n        {step === 1 && <StepOne buttonOnClick={startSurvey} />}\n        {step === 2 && <ShowQuestions />}\n        <CloseButton onClick={handleCloseModal}>\n          <Close />\n        </CloseButton>\n      </ModalContainer>\n    </PersonalityTraitsModal>\n  );\n};\n", "import { PersonalityTestResponse } from './types';\n\nexport type PersonalityTestScore = {\n  [key: string]: number;\n};\n\nexport type PersonalityTestScoreAnalysis = {\n  [key: string]: string;\n};\n\nexport type PersonalityScore = {\n  [key: string]: PersonalityTestScore;\n};\n\nexport const usePersonalityScore = (response: PersonalityTestResponse) => {\n  const responseMap = {\n    'Strongly Disagree': 0,\n    Disagree: 1,\n    Neutral: 2,\n    Agree: 3,\n    'Strongly Agree': 4,\n  } as { [response: string]: number };\n\n  const createAnswersMap = () => {\n    const answersMap = {} as { [custom_attribute: string]: number };\n\n    for (let index = 0; index < response.answers.length; index++) {\n      const element = response.answers[index];\n      answersMap[element.custom_attribute] = responseMap[element.response];\n    }\n\n    return answersMap;\n  };\n\n  const scoringQuestionsMap = {\n    bigFiveNeuroticism: [\n      'trait_bigfive_neur_v1',\n      'trait_bigfive_neur_v2',\n      'trait_bigfive_neur_w1',\n      'trait_bigfive_neur_w2',\n    ],\n    bigFiveAgreeableness: [\n      'trait_bigfive_agre_c1',\n      'trait_bigfive_agre_c2',\n      'trait_bigfive_agre_p1',\n      'trait_bigfive_agre_p2',\n    ],\n    bigFiveConscientiousness: [\n      'trait_bigfive_cons_i1',\n      'trait_bigfive_cons_i2',\n      'trait_bigfive_cons_o1',\n      'trait_bigfive_cons_o2',\n    ],\n    bigFiveExtraversion: [\n      'trait_bigfive_extr_e1',\n      'trait_bigfive_extr_e2',\n      'trait_bigfive_extr_a1',\n      'trait_bigfive_extr_a2',\n    ],\n    bigFiveOpenness: [\n      'trait_bigfive_open_i1',\n      'trait_bigfive_open_i2',\n      'trait_bigfive_open_o1',\n      'trait_bigfive_open_o2',\n    ],\n    discDominance: [\n      'trait_disc_domi1',\n      'trait_disc_domi2',\n      'trait_disc_domi3',\n      'trait_disc_domi4',\n      'trait_disc_domi5',\n      'trait_disc_domi6',\n      'trait_disc_domi7',\n    ],\n    discInfluence: [\n      'trait_disc_influ1',\n      'trait_disc_influ2',\n      'trait_disc_influ3',\n      'trait_disc_influ4',\n      'trait_disc_influ5',\n      'trait_disc_influ6',\n      'trait_disc_influ7',\n      'trait_disc_influ8',\n    ],\n    discStability: [\n      'trait_disc_stea1',\n      'trait_disc_stea2',\n      'trait_disc_stea3',\n      'trait_disc_stea4',\n      'trait_disc_stea5',\n      'trait_disc_stea6',\n      'trait_disc_stea7',\n    ],\n    discCompliance: [\n      'trait_disc_cons1',\n      'trait_disc_cons2',\n      'trait_disc_cons3',\n      'trait_disc_cons4',\n      'trait_disc_cons5',\n      'trait_disc_cons6',\n      'trait_disc_cons7',\n      'trait_disc_cons8',\n    ],\n    fourAspectsExtraversion: [\n      'trait_bigfive_extr_e1',\n      'trait_bigfive_extr_e2',\n      'trait_disc_domi2',\n      'trait_disc_domi4',\n      'trait_disc_influ3',\n      'trait_disc_influ4',\n      'trait_disc_influ7',\n      'trait_disc_influ8',\n    ],\n    fourAspectsRealism: [\n      'trait_disc_stea2',\n      'trait_disc_stea3',\n      'trait_disc_cons1',\n      'trait_disc_cons4',\n      'trait_disc_cons5',\n      'trait_disc_cons6',\n      'trait_disc_cons7',\n      'trait_disc_cons8',\n    ],\n    fourAspectsObjectivity: [\n      'trait_bigfive_neur_v2',\n      'trait_bigfive_neur_w2',\n      'trait_bigfive_agre_c1',\n      'trait_bigfive_cons_o2',\n      'trait_bigfive_open_o1',\n      'trait_disc_influ5',\n      'trait_disc_stea5',\n      'trait_disc_cons2',\n    ],\n    fourAspectsPlanning: [\n      'trait_bigfive_cons_i1',\n      'trait_bigfive_cons_i2',\n      'trait_bigfive_cons_o1',\n      'trait_bigfive_extr_a1',\n      'trait_bigfive_extr_a2',\n      'trait_disc_domi1',\n      'trait_disc_domi3',\n      'trait_disc_cons3',\n    ],\n  } as { [category: string]: string[] };\n\n  const answersMap = createAnswersMap();\n\n  const calculateScore = (category: string) => {\n    const scores: number[] = scoringQuestionsMap[category].map(\n      (questionCustomAttribute) => answersMap[questionCustomAttribute]\n    );\n    return (\n      scores.reduce((acc: number, el: number) => acc + el, 0) /\n      (scoringQuestionsMap[category].length * 4)\n    );\n  };\n\n  const analyzeDiscScore = (score: number) => {\n    if (score >= 0.83) {\n      return 6;\n    } else if (score >= 0.66) {\n      return 5;\n    } else if (score >= 0.5) {\n      return 4;\n    } else if (score >= 0.33) {\n      return 3;\n    } else if (score >= 0.16) {\n      return 2;\n    } else {\n      return 1;\n    }\n  };\n\n  const analyzeFourAspectsScore = (score: number, category: string) => {\n    switch (category) {\n      case 'extraversion2':\n        if (score >= 0.5) {\n          return 'extravert';\n        } else {\n          return 'intravert';\n        }\n      case 'realism':\n        if (score >= 0.5) {\n          return 'realist';\n        } else {\n          return 'creative';\n        }\n      case 'objectivity':\n        if (score >= 0.5) {\n          return 'objective';\n        } else {\n          return 'biased';\n        }\n      case 'planning':\n        if (score >= 0.5) {\n          return 'planned';\n        } else {\n          return 'spontaneous';\n        }\n      default:\n        return '';\n    }\n  };\n\n  return {\n    scores: {\n      bigFive: {\n        neuroticism: calculateScore('bigFiveNeuroticism'),\n        agreeableness: calculateScore('bigFiveAgreeableness'),\n        conscientiousness: calculateScore('bigFiveConscientiousness'),\n        extraversion: calculateScore('bigFiveExtraversion'),\n        openness: calculateScore('bigFiveOpenness'),\n      } as PersonalityTestScore,\n      disc: {\n        dominance: calculateScore('discDominance'),\n        influence: calculateScore('discInfluence'),\n        stability: calculateScore('discStability'),\n        compliance: calculateScore('discCompliance'),\n      } as PersonalityTestScore,\n      fourAspects: {\n        extraversion2: calculateScore('fourAspectsExtraversion'),\n        realism: calculateScore('fourAspectsRealism'),\n        objectivity: calculateScore('fourAspectsObjectivity'),\n        planning: calculateScore('fourAspectsPlanning'),\n      } as PersonalityTestScore,\n    } as PersonalityScore,\n    analysis: {\n      discAnalysis: {\n        dominance: analyzeDiscScore(calculateScore('discDominance')),\n        influence: analyzeDiscScore(calculateScore('discInfluence')),\n        stability: analyzeDiscScore(calculateScore('discStability')),\n        compliance: analyzeDiscScore(calculateScore('discCompliance')),\n      },\n      fourAspectsAnalysis: {\n        extraversion2: analyzeFourAspectsScore(\n          calculateScore('fourAspectsExtraversion'),\n          'extraversion2'\n        ),\n        realism: analyzeFourAspectsScore(\n          calculateScore('fourAspectsRealism'),\n          'realism'\n        ),\n        objectivity: analyzeFourAspectsScore(\n          calculateScore('fourAspectsObjectivity'),\n          'objectivity'\n        ),\n        planning: analyzeFourAspectsScore(\n          calculateScore('fourAspectsPlanning'),\n          'planning'\n        ),\n      },\n    },\n  };\n};\n", "import { Stack, Box } from '@ltvco/refresh-lib/theme';\nimport { PreTestPersonalityTraits } from './PreTest/PreTest';\nimport { PersonalityHeader } from './PersonalityHeader/PersonalityHeader';\nimport { useEffect, useState } from 'react';\nimport { PersonalityTraitsResultsContainer } from './Results/PersonalityTraitsTestsResultsContainer';\nimport { TraitsMultiStepModal } from './PreTest/PersonalityTraitsSurvey/TraitsMultiStepModal';\nimport { usePersonalityScore } from './usePersoniltyScore/usePersonailyScore';\nimport {\n  usePersonalityTraitsAnswers,\n  usePostTraitsAnswers,\n} from './PreTest/PersonalityTraitsSurveyHelpers';\nimport { LoadingDots, useSession } from '@ltvco/refresh-lib/v1';\n\nexport const PersonalityTraitsPage = () => {\n  const [isTraitsModalOpen, setIsTraitsModalOpen] = useState(false);\n  const [personalityScores, setPersonalityScores] = useState({});\n  const [fourAspectsAnalysis, setFourAspectsAnalysis] = useState({});\n  const { data, refetch, isLoading } = usePersonalityTraitsAnswers();\n  const { postAnswers, tokenIsLoading } = usePostTraitsAnswers();\n  const {\n    session: { account },\n  } = useSession();\n\n  const handleTraitsModalOpen = () => {\n    setIsTraitsModalOpen(true);\n  };\n\n  const handleTraitsModalClose = () => {\n    refetch();\n    setIsTraitsModalOpen(false);\n  };\n\n  const retakeTest = () => {\n    handleTraitsModalOpen();\n  };\n\n  useEffect(() => {\n    if (data) {\n      const answers = usePersonalityScore(data);\n      setPersonalityScores(answers.scores);\n      setFourAspectsAnalysis(answers.analysis.fourAspectsAnalysis);\n    }\n  }, [data]);\n\n  const submitCompletedTestOnLoad = async () => {\n    const recordSearch = localStorage.getItem('recordSearch');\n    if (!recordSearch) {\n      return;\n    }\n    const storedAnswers = localStorage.getItem('answersStorage');\n    const answersToPost = JSON.parse(storedAnswers || '');\n    if (answersToPost.length === 50) {\n      await postAnswers({\n        user_code: account?.account.user_info.user_code,\n        plan_id: 'TRAIT_BV_01',\n        identifier: 'personality-test-v1',\n        answers: answersToPost,\n      });\n      localStorage.removeItem('recordSearch');\n      localStorage.removeItem('answersStorage');\n      localStorage.removeItem('activeQuestionIndex');\n      refetch();\n    }\n  };\n\n  useEffect(() => {\n    if (!tokenIsLoading) {\n      submitCompletedTestOnLoad();\n    }\n  }, [tokenIsLoading]);\n\n  if (isLoading) {\n    return (\n      <Stack\n        sx={(theme) => ({\n          [theme.breakpoints.down('md')]: {\n            paddingRight: '16px',\n          },\n        })}\n      >\n        <PersonalityHeader />\n        <Box sx={{ padding: '32px 0' }}>\n          <LoadingDots count={3} />\n        </Box>\n      </Stack>\n    );\n  }\n\n  return (\n    <Stack\n      sx={(theme) => ({\n        [theme.breakpoints.down('md')]: {\n          paddingRight: '16px',\n        },\n      })}\n    >\n      <PersonalityHeader />\n      {Object.keys(personalityScores).length > 0 ? (\n        <PersonalityTraitsResultsContainer\n          personalityScores={personalityScores}\n          fourAspectsAnalysis={fourAspectsAnalysis}\n          retakeTest={retakeTest}\n        />\n      ) : (\n        <PreTestPersonalityTraits onSearch={handleTraitsModalOpen} />\n      )}\n      <TraitsMultiStepModal\n        open={isTraitsModalOpen}\n        handleClose={handleTraitsModalClose}\n      />\n    </Stack>\n  );\n};\n", "import {\n  Stack,\n  Text,\n  styled,\n  Card,\n  Grid,\n  StackProps,\n  GridProps,\n  CardProps,\n} from '@ltvco/refresh-lib/theme';\n\nexport const SectionHeader = styled(Text)(({ theme }) => ({\n  textAlign: 'center',\n  marginBottom: theme.spacing(5),\n}));\n\nexport const ScanImage1 = styled('img')(({ theme }) => ({\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  marginRight: theme.spacing(3),\n  marginTop: theme.spacing(3),\n  display: 'none',\n\n  [theme.breakpoints.up('sm')]: {\n    display: 'initial',\n    width: 150,\n  },\n\n  [theme.breakpoints.up('md')]: {\n    width: 250,\n  },\n\n  [theme.breakpoints.up('lg')]: {\n    width: 300,\n  },\n\n  [theme.breakpoints.up('xl')]: {\n    width: 370,\n    marginRight: theme.spacing(4),\n    marginTop: theme.spacing(4),\n  },\n}));\n\nexport const ScanImage2 = styled('img')(({ theme }) => ({\n  width: '50%',\n  maxWidth: 180,\n\n  [theme.breakpoints.up('sm')]: {\n    maxWidth: 200,\n  },\n\n  [theme.breakpoints.up('md')]: {\n    width: '80%',\n    maxWidth: 'initial',\n  },\n}));\n\nexport const HowItWorksGridItem = styled((props: GridProps) => (\n  <Grid item xs={12} md={6} {...props} />\n))(({ theme }) => ({\n  border: `1px solid ${theme.palette.divider}`,\n\n  [theme.breakpoints.up('xs')]: {\n    borderTop: 'none',\n\n    '&:first-child': {\n      borderTop: `1px solid ${theme.palette.divider}`,\n    },\n  },\n\n  [theme.breakpoints.up('md')]: {\n    '&:nth-child(2)': {\n      borderTop: `1px solid ${theme.palette.divider}`,\n    },\n\n    '&:nth-of-type(even)': {\n      borderLeft: 'none',\n    },\n  },\n}));\n\nexport const HowItWorksStack = styled((props: StackProps) => (\n  <Stack direction=\"row\" spacing={4} {...props} />\n))(({ theme }) => ({\n  background: theme.palette.background.paper,\n  padding: theme.spacing(2),\n}));\n\nexport const FullHeightCard = styled((props: CardProps) => (\n  <Card variant=\"outlined\" {...props} />\n))(({ theme }) => ({\n  height: '100%',\n  backgroundColor: theme.palette.background.default,\n  border: 0,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  gap: theme.spacing(2.5),\n}));\n\nexport const StyledIconBox = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  width: 65,\n  height: 65,\n  borderRadius: '50%',\n  backgroundColor: theme.palette.background.light,\n}));\n\nexport const StyledCard = styled(Card)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(2),\n  backgroundColor: theme.palette.background.default,\n  border: 0,\n}));\n", "import { Text, Box, Card, Grid, useTheme } from '@ltvco/refresh-lib/theme';\nimport React from 'react';\nimport { getFraudSearchSubtitleText } from '../../components/reports/fraud/utils';\nimport {\n  FraudSearchContainer,\n  type SearchFormProps,\n} from '@ltvco/refresh-lib/v1';\nimport imgFraudScan1 from 'images/fraud-scan-1.svg';\nimport imgFraudScan2 from 'images/fraud-scan-2.svg';\nimport {\n  FullHeightCard,\n  HowItWorksGridItem,\n  HowItWorksStack,\n  ScanImage1,\n  ScanImage2,\n  SectionHeader,\n  StyledCard,\n  StyledIconBox,\n} from './fraud-components';\nimport { Radar, PhoneIphone, Mail, LocationOn, InsertLink, EmojiEvents, Public, AutoGraph, FactCheck, CleaningServices, Shield, ContentPasteSearch } from '@mui/icons-material';\n\ninterface CommonReportProps {\n  onSearchSuccess?: SearchFormProps['onSuccess'];\n  onSearchError?: SearchFormProps['onError'];\n}\n\nexport function Fraud({ onSearchSuccess, onSearchError }: CommonReportProps) {\n  const [tabState, setTabState] = React.useState<string>('');\n  const theme = useTheme();\n  return (\n    <Box>\n      <Card variant=\"outlined\" sx={{ position: 'relative' }}>\n        <Text\n          variant=\"h1\"\n          sx={{ display: 'flex', alignItems: 'center', gap: 1 }}\n        >\n          <Radar sx={{ color: theme.palette.primary.main}} fontSize=\"large\" />\n          FraudScan\n        </Text>\n\n        <Text\n          sx={(theme) => ({\n            marginBottom: theme.spacing(5),\n            maxWidth: { xs: '100%', sm: 400, md: 300, lg: 500 },\n          })}\n        >\n          {getFraudSearchSubtitleText(tabState)}\n        </Text>\n\n        <Text fontWeight=\"bold\" mb={2}>\n          What would you like to check?\n        </Text>\n\n        <FraudSearchContainer\n          onSearchSuccess={onSearchSuccess}\n          onSearchError={onSearchError}\n          onSearchChange={setTabState}\n          displayBulkUpload={true}\n        />\n\n        <ScanImage1 src={imgFraudScan1} alt=\"Scan\" />\n      </Card>\n\n      <Card\n        variant=\"outlined\"\n        sx={(theme) => ({\n          background: `linear-gradient(102.42deg, ${theme.palette.background.paper} 15.39%, ${theme.palette.background.light} 84.61%)`,\n        })}\n      >\n        <SectionHeader variant=\"h1\">How It Works</SectionHeader>\n\n        <Grid\n          container\n          sx={(theme) => ({\n            background: theme.palette.background.paper,\n          })}\n        >\n          <HowItWorksGridItem>\n            <HowItWorksStack>\n              <Box>\n                <PhoneIphone />\n              </Box>\n\n              <Box>\n                <Text variant=\"h4\">Phone Number Verification</Text>\n\n                <Text variant=\"body2\" textAlign=\"left\">\n                  Find signals needed to verify a phone number including its\n                  likelihood to be fraudulent, threat level, active status,\n                  whether it appears on a Do Not Call list, and comments from\n                  our network of users.\n                </Text>\n              </Box>\n            </HowItWorksStack>\n          </HowItWorksGridItem>\n\n          <HowItWorksGridItem>\n            <HowItWorksStack>\n              <Box>\n                <Mail />\n              </Box>\n\n              <Box>\n                <Text variant=\"h4\">Email Verification</Text>\n                <Text variant=\"body2\" textAlign=\"left\">\n                  Verify the legitimacy or threat level of an email address with\n                  information such as its likelihood to be fraudulent, valid,\n                  whether it can receive emails, and various threat signals\n                  indicating malicious/spammy behavior.\n                </Text>\n              </Box>\n            </HowItWorksStack>\n          </HowItWorksGridItem>\n\n          <HowItWorksGridItem>\n            <HowItWorksStack>\n              <Box>\n                <LocationOn />\n              </Box>\n\n              <Box>\n                <Text variant=\"h4\">IP Lookup</Text>\n                <Text variant=\"body2\" textAlign=\"left\">\n                  Check global IP addresses for location, risk signals that\n                  could indicate a history of abusive or malicious behavior, and\n                  signs that the user may be masking their true identity.\n                </Text>\n              </Box>\n            </HowItWorksStack>\n          </HowItWorksGridItem>\n\n          <HowItWorksGridItem>\n            <HowItWorksStack>\n              <Box>\n                <InsertLink />\n              </Box>\n\n              <Box>\n                <Text variant=\"h4\">URL Scanning</Text>\n                <Text variant=\"body2\" textAlign=\"left\">\n                  Help protect yourself by scanning URLs for suspicious or\n                  malicious behavior, adult content, and redirects that could\n                  lead you to a risky destination online.\n                </Text>\n              </Box>\n            </HowItWorksStack>\n          </HowItWorksGridItem>\n        </Grid>\n      </Card>\n\n      <Card variant=\"outlined\">\n        <SectionHeader variant=\"h1\">Why Choose Us</SectionHeader>\n\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={4}>\n            <FullHeightCard>\n              <StyledIconBox>\n                <EmojiEvents sx={{ color: theme.palette.primary.main}} fontSize=\"large\" />\n              </StyledIconBox>\n\n              <Text variant=\"h3\" textAlign=\"center\" m={0}>\n                Industry Leading Partners\n              </Text>\n              <Text textAlign=\"center\">\n                We work with an industry leader known for its{' '}\n                <b>unmatched data accuracy</b>, powered by software built by\n                ex-NSA engineers.\n              </Text>\n            </FullHeightCard>\n          </Grid>\n\n          <Grid item xs={12} md={4}>\n            <FullHeightCard>\n              <StyledIconBox>\n                <Public sx={{ color: theme.palette.primary.main}} fontSize=\"large\" />\n              </StyledIconBox>\n\n              <Text variant=\"h3\" textAlign=\"center\" m={0}>\n                Vast Global Coverage\n              </Text>\n              <Text textAlign=\"center\">\n                With access to hundreds of different signals across{' '}\n                <b>billions of global data points</b>, our coverage beats the\n                competition.\n              </Text>\n            </FullHeightCard>\n          </Grid>\n\n          <Grid item xs={12} md={4}>\n            <FullHeightCard>\n              <StyledIconBox>\n                <AutoGraph sx={{ color: theme.palette.primary.main}} fontSize=\"large\" />\n              </StyledIconBox>\n\n              <Text variant=\"h3\" textAlign=\"center\" m={0}>\n                {' '}\n                Fresh Data\n              </Text>\n              <Text textAlign=\"center\">\n                While others use data that may be months old, we use data{' '}\n                <b>as fresh as the last few hours</b>.\n              </Text>\n            </FullHeightCard>\n          </Grid>\n        </Grid>\n      </Card>\n\n      <Card variant=\"outlined\">\n        <SectionHeader variant=\"h1\">How FraudScan Can Help You</SectionHeader>\n\n        <Grid container spacing={3}>\n          <Grid\n            item\n            xs={12}\n            md={4}\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <ScanImage2 src={imgFraudScan2} alt=\"Scan\" />\n          </Grid>\n          <Grid item xs={12} md={8}>\n            <StyledCard variant=\"outlined\">\n              <FactCheck />\n\n              <Text>\n                <b>Verifying the legitimacy</b> of phone numbers, emails, and IP\n                addresses\n              </Text>\n            </StyledCard>\n\n            <StyledCard variant=\"outlined\">\n              <CleaningServices />\n\n              <Text>\n                <b>Cleaning up inaccurate or outdated information</b> in contact\n                lists, or flagging numbers that are on the “Do Not Call” list\n              </Text>\n            </StyledCard>\n\n            <StyledCard variant=\"outlined\">\n              <Shield />\n\n              <Text>\n                <b>Protecting</b> against bad actors and malicious activity\n              </Text>\n            </StyledCard>\n\n            <StyledCard variant=\"outlined\">\n              <ContentPasteSearch />\n\n              <Text>\n                <b>Finding more details on</b> the phone numbers, email\n                addresses, IP addresses, and URLs you interact with every day\n              </Text>\n            </StyledCard>\n          </Grid>\n        </Grid>\n      </Card>\n    </Box>\n  );\n}\n", "import { useAccount } from '@ltvco/refresh-lib/v1';\nimport { Astrology } from 'components/Astrology';\n\nexport const AstrologyPage = () => {\n  const { data: account } = useAccount(true);\n  const memberId = account?.account.user_info?.user_code || '';\n\n  return <Astrology identifier={memberId} enableOnboarding standaloneVersion />;\n};\n", "import { LizanoListInfo, useAccountListsV2 } from '@ltvco/refresh-lib/v1';\nimport { ListDetailsPage } from '@ltvco/refresh-lib/v2';\nimport { useParams } from 'react-router-dom';\n\nexport function ListsItem() {\n  const { data, isLoading } = useAccountListsV2();\n  const { listName } = useParams<{ listName: string }>();\n\n  if (isLoading) {\n    return null;\n  }\n\n  const list: LizanoListInfo | undefined = data?.find(\n    ({ name }: { name: string }) => name === listName\n  ) as LizanoListInfo;\n\n  return <ListDetailsPage list={list} />;\n}\n", "import {\n  forwardRef,\n  ForwardedRef,\n  useEffect,\n  useState,\n  useContext,\n} from 'react';\nimport { AppConfig } from '@ltvco/refresh-lib/ctx';\nimport {\n  Stack,\n  Text,\n  Link as MuiLink,\n  styled,\n  Alert,\n} from '@ltvco/refresh-lib/theme';\nimport { Outlet, Link } from 'react-router-dom';\nimport { useQueryParam, StringParam } from 'use-query-params';\nimport { LoginForm, LoginFormProps, useCaptcha } from '@ltvco/refresh-lib/v1';\n\nconst StyledText = styled(Text)(({ theme }) => ({\n  letterSpacing: 0.5,\n  marginTop: theme.spacing(1.5),\n  marginBottom: theme.spacing(0),\n  textAlign: 'center',\n  textDecoration: 'underline',\n}));\n\nconst Container = styled(Stack)(({ theme }) => ({\n  margin: theme.spacing(0, 'auto'),\n  overflow: 'visible !important',\n  position: 'relative',\n  padding: theme.spacing('19vh', 0),\n}));\n\ninterface Props {\n  onLoginSuccess: LoginFormProps['onLoginSuccess'];\n}\n\nconst VERIFICATION_EVENT_ACTION = 'view';\nconst VERIFICATION_EVENT_LABEL = 'email_verification_response';\n\nexport const Login = forwardRef(\n  ({ onLoginSuccess }: Props, ref: ForwardedRef<null>) => {\n    useEffect(() => {\n      document.title = 'Login - BeenVerified';\n    }, []);\n\n    const [statusParam, setStatusParam] = useQueryParam('status', StringParam);\n    const [emailVerificationAlert, setEmailVerificationAlert] = useState<\n      JSX.Element | undefined\n    >(undefined);\n    const { trackEvent } = useContext(AppConfig);\n    const [captcha, captchaReady, sitekey, renderCaptcha] = useCaptcha();\n\n    useEffect(() => {\n      let alertContent;\n\n      if (statusParam === 'success') {\n        alertContent = (\n          <Alert variant=\"outlined\" severity=\"success\">\n            Your email is successfully verified! Please sign in.\n          </Alert>\n        );\n        trackEvent(\n          'success_link',\n          VERIFICATION_EVENT_ACTION,\n          VERIFICATION_EVENT_LABEL\n        );\n      } else if (statusParam === 'expired') {\n        alertContent = (\n          <Alert\n            variant=\"outlined\"\n            sx={{ color: 'error.main' }}\n            severity=\"error\"\n          >\n            Sorry, the verification link you used is expired. We sent a new link\n            to your inbox, please try again.\n          </Alert>\n        );\n        trackEvent(\n          'expired_link',\n          VERIFICATION_EVENT_ACTION,\n          VERIFICATION_EVENT_LABEL\n        );\n      } else if (statusParam === 'invalid') {\n        alertContent = (\n          <Alert\n            variant=\"outlined\"\n            sx={{ color: 'error.main' }}\n            severity=\"error\"\n          >\n            Sorry, the verification link you used is invalid. Please sign in.\n          </Alert>\n        );\n        trackEvent(\n          'invalid_link',\n          VERIFICATION_EVENT_ACTION,\n          VERIFICATION_EVENT_LABEL\n        );\n      }\n\n      if (statusParam) {\n        setEmailVerificationAlert(alertContent);\n        setStatusParam(undefined, 'replaceIn');\n      }\n    }, [statusParam, setStatusParam]);\n\n    return (\n      <Container ref={ref} spacing={1.5} width={{ xs: '90%', md: '35%' }}>\n        <Text\n          variant=\"h2\"\n          fontSize=\"2.25rem\"\n          fontWeight={300}\n          sx={{ margin: 0, fontWeight: '700' }}\n          textAlign={'center'}\n        >\n          Sign In\n        </Text>\n        {emailVerificationAlert}\n        <LoginForm\n          captchaEnabled={!!captcha}\n          captcha={captcha}\n          captchaReady={captchaReady}\n          sitekey={sitekey}\n          renderCaptcha={renderCaptcha}\n          onLoginSuccess={onLoginSuccess}\n        />\n        <Stack spacing={1.5} alignItems=\"center\">\n          <Link\n            to={`/login/reset-password-request`}\n            data-cy=\"forgot_password_link\"\n          >\n            <StyledText variant=\"h5\" lineHeight={1}>\n              Forgot your password?\n            </StyledText>\n          </Link>\n          <Link to={`/login/magic-link`} data-cy=\"magic_link_login\">\n            <StyledText variant=\"h5\" lineHeight={1}>\n              Send a One Time Login Link\n            </StyledText>\n          </Link>\n          <Link to={`/login/forgot-email`} data-cy=\"forgot_email_link\">\n            <StyledText variant=\"h5\" lineHeight={1}>\n              Unsure what email you used?\n            </StyledText>\n          </Link>\n        </Stack>\n        <Outlet />\n        {captcha === 'cf-turnstile' ? (\n          <Text variant=\"caption\" textAlign=\"center\">\n            This site is protected by{' '}\n            <MuiLink\n              href=\"https://www.cloudflare.com/products/turnstile/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              color=\"success.main\"\n              underline=\"always\"\n            >\n              Cloudflare Turnstile\n            </MuiLink>{' '}\n            and its{' '}\n            <MuiLink\n              href=\"https://www.cloudflare.com/privacypolicy/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              color=\"success.main\"\n              underline=\"always\"\n            >\n              Privacy Policy\n            </MuiLink>{' '}\n            and{' '}\n            <MuiLink\n              href=\"https://www.cloudflare.com/website-terms/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              color=\"success.main\"\n              underline=\"always\"\n            >\n              Terms of Service\n            </MuiLink>{' '}\n            apply.\n          </Text>\n        ) : captcha === 'hcaptcha' ? (\n          <Text variant=\"caption\" textAlign=\"center\">\n            This site is protected by{' '}\n            <MuiLink\n              href=\"https://www.hCaptcha.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              color=\"success.main\"\n              underline=\"always\"\n            >\n              hCaptcha\n            </MuiLink>{' '}\n            and its{' '}\n            <MuiLink\n              href=\"https://www.hcaptcha.com/privacy\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              color=\"success.main\"\n              underline=\"always\"\n            >\n              Privacy Policy\n            </MuiLink>{' '}\n            and{' '}\n            <MuiLink\n              href=\"https://www.hcaptcha.com/terms\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              color=\"success.main\"\n              underline=\"always\"\n            >\n              Terms of Service\n            </MuiLink>{' '}\n            apply.\n          </Text>\n        ) : null}\n      </Container>\n    );\n  }\n);\n", "import { Button, styled, Text } from '@ltvco/refresh-lib/theme';\nimport { useNavigate } from 'react-router-dom';\nimport { constants } from 'appConstants';\nimport { useContext } from 'react';\nimport { ReportSection } from '@ltvco/refresh-lib/v1';\nimport { AppConfig } from '@ltvco/refresh-lib/ctx';\n\nconst OwnerSearchImg = styled('img')(({ theme }) => ({\n  width: '64px',\n  height: '64px',\n  alignSelf: 'center',\n}));\n\nexport const OwnerSearchGenericCTA = () => {\n  const navigate = useNavigate();\n  const {\n    images: { ownerSearchGenericCta },\n  } = constants;\n  const { routingUtils } = useContext(AppConfig);\n  const { location } = routingUtils;\n  console.log('location', location);\n  const redirectToOwnerSearch = () => {\n    navigate('/search/owner');\n  };\n  return (\n    <ReportSection hasContent sectionId=\"owner-search-generic-cta\">\n      <OwnerSearchImg src={ownerSearchGenericCta} alt=\"Owner Search\" />\n      <Text variant=\"h3\" marginTop={1} alignSelf=\"center\">\n        Search properties by owner\n      </Text>\n      <Text variant=\"body1\" alignSelf=\"center\">\n        Find additional property owners and their assets\n      </Text>\n      <Button\n        variant=\"contained\"\n        onClick={redirectToOwnerSearch}\n        sx={{ width: 'fit-content', alignSelf: 'center' }}\n      >\n        Search Owner Assets\n      </Button>\n    </ReportSection>\n  );\n};\n", "import { useContext } from 'react';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport {\n  PropertyReport,\n  VehicleReport,\n  ObituaryReport,\n  ContactReport,\n  EmailFraudReport,\n  PhoneFraudReport,\n  UrlFraudReport,\n  AncestorReport,\n  PersonReport,\n  UnclaimedMoneyReport,\n  IpFraudReport,\n  SocialReport,\n  PhoneReport,\n  EmailReport,\n  ContactReportV2,\n} from 'components/reports';\nimport { Sidenav } from 'components/sidenav/Sidenav';\nimport {\n  AppConfig,\n  AppConstants,\n  ReportContextProvider,\n} from '@ltvco/refresh-lib/ctx';\nimport { Grid, Box, styled } from '@ltvco/refresh-lib/theme';\nimport { useLimitedPlanInfo } from 'utils/useLimitedPlanInfo';\nimport { checkPlanVariations } from 'utils/checkPlanVariations';\nimport { SearchFooter } from '@ltvco/refresh-lib/v2';\nimport {\n  useQueryClient,\n  useGrowthBook,\n  useMutation,\n  useFeatureIsOn,\n} from '@ltvco/refresh-lib/vendors';\nimport {\n  type SearchFormProps,\n  reportGetters,\n  ReportLoading,\n  type SearchReportResponseData,\n  useSession,\n  useReportMonitors,\n  UnclaimedMoneyReportLoading,\n} from '@ltvco/refresh-lib/v1';\nimport imgUnclaimedMoney from '../images/img_unclaimed_money.svg';\n\nfunction useQueryParams(params: string) {\n  return useMemo(() => new URLSearchParams(params), [params]);\n}\n\nconst ReportBody = styled('div')(({ theme }) => ({\n  width: '100%',\n  margin: 'auto',\n\n  [theme.breakpoints.up('md')]: {\n    margin: 'auto',\n  },\n\n  [theme.breakpoints.up('lg')]: {\n    margin: 'auto',\n    maxWidth: '1100px',\n  },\n}));\n\nconst FooterSearchContainer = styled(Box)(({ theme }) => ({\n  marginTop: theme.spacing(4),\n  marginBottom: theme.spacing(2.5),\n\n  // Not only the ReportBody, but also the AppContent (App.tsx) are limited to 1600px max width\n  // So with this, we make sure the footer search is always 100% of the screen width\n  [theme.breakpoints.up(1600)]: {\n    width: '100vw',\n    // marginLeft: 'calc(-100vw / 2 + 1600px / 2)',\n    // marginRight: 'calc(-100vw / 2 + 1600px / 2)',\n  },\n}));\n\ninterface CommonReportProps {\n  onSearchSuccess?: SearchFormProps['onSuccess'];\n  onSearchError?: SearchFormProps['onError'];\n}\n\nexport function Report({ onSearchSuccess, onSearchError }: CommonReportProps) {\n  const { search } = useLocation();\n  const { reportType } = useParams();\n  const { logError } = useContext(AppConfig);\n  const {\n    featureFlags: { propertyReportFlags },\n  } = useContext(AppConstants);\n  const queryClient = useQueryClient();\n  const queryParams = useQueryParams(search);\n  const permalinkQuery = queryParams.get('permalink') || '';\n  const [permalink, setPermalink] = useState(permalinkQuery);\n  const { session, setSession, useAccount } = useSession();\n  const { refetch: refetchAccount } = useAccount(session.isAuthenticated);\n  const reportGetter = reportGetters[reportType as keyof typeof reportGetters];\n  if (typeof reportGetter !== 'function') {\n    throw new Error(`Invalid report type: ${reportType}`);\n  }\n  const { reportIsMonitored, reportMonitorIsLoading } = useReportMonitors();\n  const loading = !permalink || reportMonitorIsLoading;\n  const { planName } = useLimitedPlanInfo();\n  const { isInternationalVinTest } = checkPlanVariations(planName);\n  const isInPartialAddressesVariation = useFeatureIsOn('OAR-1569');\n  if (reportType === 'property') {\n    // Append report flags before generating the new report\n    queryParams.set('report_flags', JSON.stringify(propertyReportFlags));\n  }\n\n  let growthbook = useGrowthBook();\n\n  const permalinkMutation = useMutation({\n    mutationFn: () => reportGetter({ queryParams }),\n    onSuccess: async (data: SearchReportResponseData) => {\n      const { data: accountData } = await refetchAccount();\n      setSession({\n        account: accountData,\n      });\n      setPermalink(data.report.permalink);\n    },\n    onError: (error: Error, variables, context) => {\n      logError('Report Route', error);\n\n      const defaultOptions = queryClient.getDefaultOptions();\n\n      // if mutation/query onError is overridden, we must still call the\n      // global handler to make sure backend error codes are handled properly\n      if (defaultOptions.mutations && defaultOptions.mutations.onError) {\n        defaultOptions.mutations.onError(error, variables, context);\n      }\n    },\n  });\n\n  useEffect(() => {\n    if (\n      !permalink &&\n      !permalinkMutation.isError &&\n      !permalinkMutation.isLoading\n    ) {\n      if (reportType === 'person') {\n        queryParams.set(\n          'showPartialAddresses',\n          isInPartialAddressesVariation.toString()\n        );\n      }\n      permalinkMutation.mutate();\n    } else if (permalinkQuery && permalink !== permalinkQuery) {\n      setPermalink(permalinkQuery);\n    }\n  }, [\n    permalink,\n    permalinkMutation,\n    permalinkQuery,\n    isInPartialAddressesVariation,\n  ]);\n\n  const isOnContactReportV2 = growthbook?.isOn('RFRSH-2652');\n\n  const renderLoadingState = () => {\n    if (reportType === 'unclaimed-money') {\n      return (\n        <UnclaimedMoneyReportLoading\n          variation=\"default\"\n          topImage={imgUnclaimedMoney}\n        />\n      );\n    }\n    return <ReportLoading menuItems={10} />;\n  };\n\n  return (\n    <ReportContextProvider permalink={permalink} reportType={reportType}>\n      <>\n        {loading ? (\n          renderLoadingState()\n        ) : (\n          <Grid sx={{ bgcolor: 'background.default' }} container>\n            <Sidenav onReport={true} />\n            <ReportBody>\n              {reportType === 'person' && (\n                <PersonReport permalink={permalink} />\n              )}\n\n              {reportType === 'phone' && <PhoneReport permalink={permalink} />}\n              {reportType === 'property' && (\n                <PropertyReport permalink={permalink} />\n              )}\n              {reportType === 'email' && <EmailReport permalink={permalink} />}\n              {reportType === 'username' && (\n                <SocialReport permalink={permalink} />\n              )}\n              {reportType === 'vehicle' && (\n                <VehicleReport permalink={permalink} />\n              )}\n              {reportType === 'contact' && (\n                <ContactReportV2 permalink={permalink} />\n              )}\n              {reportType === 'email-fraud' && (\n                <EmailFraudReport\n                  onSearchSuccess={onSearchSuccess}\n                  onSearchError={onSearchError}\n                  permalink={permalink}\n                />\n              )}\n              {reportType === 'phone-fraud' && (\n                <PhoneFraudReport\n                  permalink={permalink}\n                  onSearchSuccess={onSearchSuccess}\n                  onSearchError={onSearchError}\n                />\n              )}\n              {reportType === 'ip-fraud' && (\n                <IpFraudReport\n                  onSearchSuccess={onSearchSuccess}\n                  onSearchError={onSearchError}\n                  permalink={permalink}\n                />\n              )}\n              {reportType === 'obituary' && (\n                <ObituaryReport permalink={permalink} />\n              )}\n              {reportType === 'ancestor' && (\n                <AncestorReport permalink={permalink} />\n              )}\n              {reportType === 'unclaimed-money' && (\n                <UnclaimedMoneyReport permalink={permalink} />\n              )}\n              {reportType === 'url-fraud' && (\n                <UrlFraudReport\n                  onSearchSuccess={onSearchSuccess}\n                  onSearchError={onSearchError}\n                  permalink={permalink}\n                />\n              )}\n            </ReportBody>\n          </Grid>\n        )}\n\n        {!isInternationalVinTest && (\n          <FooterSearchContainer>\n            <SearchFooter\n              onSearchSuccess={onSearchSuccess}\n              onSearchError={onSearchError}\n            />\n          </FooterSearchContainer>\n        )}\n      </>\n    </ReportContextProvider>\n  );\n}\n", "import { ResetPasswordForm } from '@ltvco/refresh-lib/v1';\nimport { useLocation } from 'react-router-dom';\n\nexport const ResetPassword = () => {\n  const searchParams = new URLSearchParams(useLocation().search);\n  const token = searchParams.get('t');\n\n  if (!token) {\n    return <h1>Invalid token</h1>;\n  }\n\n  return <ResetPasswordForm token={token} />;\n};\n", "import { Navigate, useLocation, useNavigate } from 'react-router-dom';\nimport { CookiesStorage } from '@ltvco/refresh-lib';\nimport { useEffect, useContext } from 'react';\nimport { goToLogin } from 'utils/goToLogin';\nimport { useLimitedPlanInfo } from 'utils/useLimitedPlanInfo';\nimport { checkPlanVariations } from 'utils/checkPlanVariations';\nimport {\n  invalidateSession,\n  isUserLoggedIn,\n  useSession,\n} from '@ltvco/refresh-lib/v1';\nimport { useQueryClient } from '@ltvco/refresh-lib/vendors';\nimport { AppConfig } from '@ltvco/refresh-lib/ctx';\nimport { useReactivation } from '@ltvco/refresh-lib/payments';\n\ninterface AuthenticatedRouteProps {\n  children: JSX.Element;\n}\n\nexport function AuthenticatedRoute({ children }: AuthenticatedRouteProps) {\n  const {\n    session: { account },\n  } = useSession(); // should be replaced by the user_info object\n  const queryClient = useQueryClient();\n  const isNonCompliant = account?.account.user_info.noncompliant;\n  const { routingUtils } = useContext(AppConfig);\n  const { location: locationAppConfig } = routingUtils;\n  const cookieStorage = new CookiesStorage();\n  const { planName } = useLimitedPlanInfo();\n  const { isInInternationalLanguageTest, isInternationalVinTest } =\n    checkPlanVariations(planName);\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const complianceRoutes = [\n    '/compliance-form',\n    '/noncompliance',\n    '/compliance-prohibited',\n    '/compliance-permitted',\n    '/compliance-recomply',\n  ];\n  const isDashboard = /^\\/dashboard\\/?$/.test(location.pathname);\n\n  useEffect(() => {\n    handleFreshnessHubUsers();\n  }, [account]);\n\n  useEffect(() => {\n    handleInternationalUsers();\n  }, [planName, isDashboard]);\n\n  useEffect(() => {\n    if (!account?.account || complianceRoutes.includes(location.pathname))\n      return;\n    if (\n      import.meta.env.VITE_TARGET_ENV &&\n      !['production', 'staging'].includes(import.meta.env.VITE_TARGET_ENV)\n    )\n      return;\n  }, [account?.account]);\n\n  function handleFreshnessHubUsers() {\n    if (!account) return;\n    if (account?.account?.staff_info?.staff) return;\n    if (\n      account?.account.user_info?.design_name === 'freshness' ||\n      account?.account.user_info?.design_version === 'v2'\n    ) {\n      window.location.href = 'https://www.beenverified.com/app/';\n    }\n  }\n\n  function handleInternationalUsers() {\n    if (isDashboard) {\n      if (isInInternationalLanguageTest || isInternationalVinTest) {\n        isInternationalVinTest\n          ? navigate('/dashboard/reports')\n          : navigate('/dashboard/language');\n      }\n    }\n  }\n\n  function handleOnboardingUsers() {\n    // We should redirect all users who have not completed the DQS onboarding\n    if (!account?.account) return;\n    const sessionOnboardingCompleted = sessionStorage.getItem('dqs_completed');\n    const localStorageRecordSearch = localStorage.getItem('recordSearch') || '';\n    if (\n      account.account.user_settings.dqs_completed ||\n      (sessionOnboardingCompleted && JSON.parse(sessionOnboardingCompleted)) ||\n      localStorageRecordSearch\n    )\n      return;\n    const url = location.pathname + location.search + location.hash;\n    // Sending the next url to the onboarding page on the\n    // location of the AppConfig because when I was sending the values\n    // through navigate they weren't being updated with the current path\n    // which was causing the user not getting redirected to the correct report generation\n    locationAppConfig.state = { next: url };\n    navigate('/onboarding');\n  }\n\n  useReactivation({ currentPathName: location.pathname });\n\n  if (!isUserLoggedIn()) {\n    const url = location.pathname + location.search + location.hash;\n\n    if (cookieStorage.getValue('loggedin')) {\n      invalidateSession();\n      queryClient.clear();\n\n      setTimeout(() => {\n        window.location.reload();\n      }, 500);\n    }\n\n    if (\n      import.meta.env.VITE_TARGET_ENV &&\n      !['production'].includes(import.meta.env.VITE_TARGET_ENV)\n    ) {\n      return <Navigate to=\"/login\" state={{ next: url }} replace />;\n    } else {\n      goToLogin('https://www.beenverified.com');\n      return null;\n    }\n  }\n  if (isNonCompliant && !complianceRoutes.includes(location.pathname)) {\n    return (\n      <Navigate to={`/noncompliance`} state={{ from: location }} replace />\n    );\n  }\n\n  return children;\n}\n", "import { Navigate, useLocation } from 'react-router-dom';\nimport { isUserLoggedIn, useSession } from '@ltvco/refresh-lib/v1';\n\ninterface PublicRouteProps {\n  children: JSX.Element | JSX.Element[];\n}\n\nexport function PublicRoute({ children }: PublicRouteProps) {\n  const {\n    session: { isAuthenticated },\n  } = useSession(); // should be replaced by the user_info object\n  const location = useLocation();\n\n  if (isAuthenticated && isUserLoggedIn()) {\n    return (\n      <Navigate\n        to={location.search ? `/dashboard${location.search}` : '/dashboard'}\n        state={{ from: location }}\n        replace\n      />\n    );\n  }\n\n  return <>{children}</>;\n}\n", "import { Box, Grid, Stack, styled } from '@ltvco/refresh-lib/theme';\n\nexport const StickyContainer = styled(Stack)(({ theme }) => ({\n  position: 'fixed',\n  top: 60,\n  width: '100%',\n  zIndex: 2,\n\n  [theme.breakpoints.up('md')]: {\n    zIndex: 1,\n    marginBottom: theme.spacing(3),\n    height: 'unset',\n    overflowY: 'unset',\n    position: 'sticky',\n  },\n}));\n\nexport const ConsolidatedStickyContainer = styled(Stack)(({ theme }) => ({\n  position: 'fixed',\n  top: 58,\n  width: '100%',\n  zIndex: 2,\n  left: 0,\n\n  [theme.breakpoints.up('md')]: {\n    top: 0,\n    paddingTop: 16,\n    zIndex: 1,\n    marginBottom: theme.spacing(3),\n    height: 'unset',\n    overflowY: 'unset',\n    position: 'sticky',\n    maxWidth: '400px',\n    minWidth: '220px',\n  },\n}));\n\nexport const PersonFilterNav = styled('ul')(({ theme }) => ({\n  listStyle: 'none',\n  display: 'flex',\n  margin: theme.spacing(0.5, 0.5, 2.5),\n  padding: 0,\n  position: 'relative',\n  top: '50px',\n  height: '90px',\n  [theme.breakpoints.up('md')]: {\n    position: 'unset',\n    height: 'unset',\n    top: 0,\n  },\n  '&.search-nav': {\n    [theme.breakpoints.up('md')]: {\n      gap: theme.spacing(4),\n    },\n  },\n}));\n\nexport const PersonFilterNavItem = styled('li')(({ theme }) => ({\n  float: 'left',\n  position: 'relative',\n  display: 'block',\n  paddingTop: theme.spacing(0.375),\n  ':hover,&.active': {\n    cursor: 'pointer',\n    color: theme.palette.primary.main,\n    '.selected-tab': {\n      display: 'block',\n    },\n  },\n  '.selected-tab': {\n    display: 'none',\n  },\n}));\n\nexport const NavButton = styled('button')(({ theme }) => ({\n  backgroundColor: 'transparent',\n  color: theme.palette.text.secondary,\n  padding: theme.spacing(0.5, 1),\n  borderRadius: '32px',\n  border: `1px solid ${theme.palette.grey[300]}`,\n  cursor: 'pointer',\n  '-webkit-tap-highlight-color': 'transparent',\n  '-webkit-appearance': 'none',\n  '-moz-appearance': 'none',\n  appearance: 'none',\n\n  ':hover': {\n    backgroundColor: theme.palette.background.default,\n  },\n\n  ':focus': {\n    outline: 'none',\n    backgroundColor: 'transparent',\n  },\n\n  ':active': {\n    backgroundColor: 'transparent',\n    color: 'inherit',\n    opacity: 1,\n  },\n\n  '&.active': {\n    border: `1px solid ${theme.palette.primary.main}`,\n    color: theme.palette.primary.main,\n    '.options-results': {\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n\n  '&.disabled': {\n    opacity: 0.35,\n  },\n\n  '&.filters-button': {\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.main,\n    display: 'flex',\n    alignItems: 'center',\n    gap: theme.spacing(0.5),\n  },\n}));\n\nexport const OptionResults = styled('div')(({ theme }) => ({\n  height: '25px',\n  width: '25px',\n  backgroundColor: theme.palette.text.secondary,\n  borderRadius: '50px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  color: theme.palette.common.white,\n}));\n\nexport const SearchHeader = styled(Stack)(({ theme }) => ({\n  position: 'sticky',\n  top: '52px',\n  zIndex: 2,\n  backgroundColor: theme.palette.primary.contrastText,\n  left: 0,\n  right: 0,\n  marginLeft: '-1vw',\n  paddingLeft: '100px',\n\n  [theme.breakpoints.between('md', 'lg')]: {\n    padding: '15px 24px',\n  },\n\n  [theme.breakpoints.up('md')]: {\n    top: '52px',\n    padding: '15px',\n    paddingLeft: '0',\n    marginLeft: '0',\n  },\n\n  [theme.breakpoints.between(1070, 'xl')]: {\n    top: '52px',\n  },\n\n  [theme.breakpoints.up('xl')]: {\n    top: '52px',\n  },\n}));\n\nexport const BoxCardContainer = styled(Box)(({ theme }) => ({\n  marginTop: '16px',\n  zIndex: 1,\n  marginLeft: '20px',\n  width: '100%',\n\n  [theme.breakpoints.up('md')]: {\n    width: '72%',\n    marginTop: '0',\n  },\n}));\n\nexport const PersonFiltersContainer = styled(Grid)(() => ({}));\n\nexport const ResultsContainer = styled(Grid)(({ theme }) => ({\n  marginLeft: 0,\n  position: 'relative',\n  zIndex: 0,\n  willChange: 'width',\n  transition: 'all 0.3s ease-in-out',\n  flex: 1,\n\n  [theme.breakpoints.down('sm')]: {\n    width: '100%',\n  },\n}));\n\nexport const SearchResultsGrid = styled(Grid)(({ theme }) => ({\n  marginTop: 0,\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'flex-start',\n  flexDirection: 'column',\n  padding: 0,\n  maxWidth: '100%',\n  width: '100%',\n  [theme.breakpoints.up('md')]: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n\n  [theme.breakpoints.up('xl')]: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(2),\n  },\n\n  [theme.breakpoints.up('md')]: {\n    flexDirection: 'row',\n  },\n\n  '& .MuiGrid-item': {\n    paddingTop: 0,\n  },\n}));\n\nexport const SearchbotStickyContainer = styled(Stack)(\n  ({ isChatbotOpen }: { isChatbotOpen: boolean }) => ({\n    top: 60,\n    zIndex: 1,\n    alignSelf: 'flex-start',\n    height: 'calc(100vh - 65px)',\n    position: isChatbotOpen ? 'sticky' : 'fixed',\n    transform: isChatbotOpen ? 'translateX(0)' : 'translateX(100%)',\n    opacity: isChatbotOpen ? 1 : 0,\n    flexDirection: 'column',\n    m: 0,\n    p: 1,\n    transition: 'all 0.3s ease-in-out',\n    width: '100%',\n  })\n);\n\nexport const SearchbotSizebleContainer = styled(Stack)(\n  ({ isChatbotOpen }: { theme: any; isChatbotOpen: boolean }) => ({\n    minWidth: isChatbotOpen ? '300px' : '0',\n    maxWidth: isChatbotOpen ? '400px' : '0',\n    height: '100%',\n    flexShrink: 1,\n    overflow: isChatbotOpen ? 'visible' : 'hidden',\n    transition: 'all 0.3s ease-in-out',\n    margin: isChatbotOpen ? '20px 0 20px 20px' : '0',\n    padding: '0',\n  })\n);\n", "import {\n  Accordion,\n  AccordionProps,\n  Box,\n  Button,\n  styled,\n  TabsNavigation,\n} from '@ltvco/refresh-lib/theme';\n\ninterface FilterAccordionProps extends AccordionProps {\n  shouldDisplayReportSearch?: boolean;\n}\n\nexport const FilterAccordion = styled((props: FilterAccordionProps) => (\n  <Accordion defaultExpanded disableGutters square {...props} />\n))(({ theme, shouldDisplayReportSearch }) => ({\n  margin: 0,\n  border: 0,\n  color: theme.palette.text.primary,\n\n  '&:hover': {\n    boxShadow: 'none',\n  },\n\n  '& .MuiAccordionSummary-root, & .MuiAccordionDetails-root': {\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n\n  '& .MuiAccordionSummary-content .MuiTypography-root': {\n    color: theme.palette.text.primary,\n    fontWeight: theme.typography.fontWeightBold,\n  },\n  '& .MuiAccordionSummary-expandIconWrapper .MuiSvgIcon-root': {\n    color: shouldDisplayReportSearch\n      ? `${theme.palette.primary.main} !important`\n      : theme.palette.text.primary,\n  },\n}));\n\nexport const SubmitButton = styled(Button)(({ theme }) => ({\n  backgroundColor: theme.palette.primary.main,\n  color: theme.palette.common.white,\n  margin: `0 ${theme.spacing(2)}`,\n  width: '90%',\n  '&:hover': {\n    backgroundColor: theme.palette.primary.dark,\n  },\n}));\n\nexport const StyledTabsNavigation = styled(TabsNavigation)`\n  .MuiTab-root {\n    min-height: 50px;\n    padding: 0;\n    width: 50%;\n\n    @media (min-width: 767px) {\n      padding: 0 20px;\n    }\n\n    @media (min-width: 1218px) {\n      padding: 0;\n    }\n  }\n`;\n\nexport const SidebarContainer = styled(Box)(({ theme }) => ({\n  overflowY: 'scroll',\n  '& div:first-of-type': {\n    paddingTop: '2px',\n  },\n\n  [theme.breakpoints.up('md')]: {\n    '& div:first-of-type': {\n      paddingTop: 0,\n    },\n  },\n}));\n", "import { useState, useRef, Dispatch, SetStateAction } from 'react';\nimport {\n  Box,\n  useTheme,\n  useMediaQuery,\n  Divider,\n  Text,\n  Stack,\n  IconButton,\n  Button,\n  Link,\n} from '@ltvco/refresh-lib/theme';\nimport { ArrowBack, Close, Tune, TuneRounded } from '@mui/icons-material';\nimport { SidebarContainer, SubmitButton } from './components';\nimport {\n  AdvancedSearchURLParams,\n  ConsolidatedFilter,\n  ConsolidatedFilterInfo,\n  ConsolidatedSidebar,\n  parseConsolidatedFilterInfo,\n} from '@ltvco/refresh-lib/v2';\nimport { useFeatureIsOn } from '@ltvco/refresh-lib/vendors';\nimport { useSearchParams } from 'react-router-dom';\nimport { useScreenSize } from '@ltvco/refresh-lib/utils';\n\nexport interface ResultFilterProps {\n  advancedSearchUrlParams: AdvancedSearchURLParams;\n  onCollapse?: () => void;\n  parentSidebarCollapsed?: boolean;\n  setParentSidebarCollapsed?: Dispatch<SetStateAction<boolean>>;\n}\n\nexport function PersonFilters({\n  advancedSearchUrlParams,\n  onCollapse,\n  parentSidebarCollapsed,\n  setParentSidebarCollapsed,\n}: ResultFilterProps) {\n  const formRef = useRef<HTMLFormElement>(null);\n  const [isSidebarCollapsed, setIsSidebarCollapsed] = useState(true);\n  const isInStreamlinedTestVariant = useFeatureIsOn('prop-2958');\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up('md'));\n  const isTabletOrMobile = useMediaQuery(theme.breakpoints.down('md'));\n  const { isMedium, isMobile } = useScreenSize();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const consolidatedFilterDefaults = parseConsolidatedFilterInfo(\n    advancedSearchUrlParams\n  );\n  const filterRef = useRef<{\n    clearFields: () => void;\n    submitForm: () => void;\n  } | null>(null);\n\n  const handleExternalSubmit = () => {\n    if (filterRef.current) {\n      filterRef.current.submitForm();\n    }\n  };\n\n  const handleExternalClear = () => {\n    if (filterRef.current) {\n      filterRef.current.clearFields();\n    }\n  };\n\n  const collapsible = {\n    isCollapsed:\n      parentSidebarCollapsed !== undefined\n        ? parentSidebarCollapsed\n        : isSidebarCollapsed,\n    setIsCollapsed:\n      setParentSidebarCollapsed !== undefined\n        ? setParentSidebarCollapsed\n        : setIsSidebarCollapsed,\n  };\n\n  const ShowExternalButton = () => {\n    if (isDesktop) {\n      return (\n        <Box\n          sx={{\n            backgroundColor: '#fff',\n            padding: '20px 0',\n            borderRadius: '10px',\n          }}\n        >\n          <Divider sx={{ mb: 2 }} />\n          <Stack\n            direction={'row'}\n            alignItems={'center'}\n            justifyContent={'space-between'}\n          >\n            {isInStreamlinedTestVariant && (\n              <Link\n                onClick={() => handleExternalClear()}\n                data-cy=\"clear_all_fields_button\"\n                sx={{\n                  cursor: 'pointer',\n                  margin: '0 10px',\n                  width: '50%',\n                }}\n              >\n                <Text\n                  variant=\"h5\"\n                  sx={(theme) => ({\n                    color: theme.palette.primary.main,\n                    marginBottom: '0',\n                    textAlign: 'center',\n                  })}\n                >\n                  Clear all\n                </Text>\n              </Link>\n            )}\n\n            <SubmitButton\n              id=\"filters-toggle\"\n              type=\"button\"\n              name=\"filters-toggle\"\n              variant=\"contained\"\n              fullWidth\n              onClick={handleExternalSubmit}\n              sx={{\n                display: isDesktop ? 'block' : 'none',\n                width: isInStreamlinedTestVariant ? '72%' : '100%',\n              }}\n            >\n              {isInStreamlinedTestVariant ? 'Show Results' : 'Refine Results'}\n            </SubmitButton>\n          </Stack>\n        </Box>\n      );\n    }\n  };\n\n  const filterHeaderStyles = () => {\n    return {\n      top: isMobile ? '72px' : '0px',\n      zIndex: 200,\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      margin: 0,\n      padding: isMobile ? '10px 20px 0px 20px' : '20px 20px 0px 20px',\n      paddingTop: isMobile ? '40px' : '20px',\n      backgroundColor: 'white',\n      borderBottom: `1px solid ${theme.palette.divider}`,\n      flexDirection: 'row',\n      position: 'sticky',\n    };\n  };\n  return (\n    <Box\n      sx={{\n        border: isTabletOrMobile ? 'unset' : '1px solid',\n        borderColor: isTabletOrMobile ? 'unset' : 'divider',\n        borderRadius: isTabletOrMobile ? 'unset' : '10px',\n        marginLeft: 'unset',\n        position: 'relative',\n        backgroundColor: !isSidebarCollapsed\n          ? theme.palette.background.paper\n          : 'none',\n        height: isTabletOrMobile ? 'unset' : '92vh',\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n    >\n      {/* HEADER - Sticky */}\n      <Box\n        sx={{\n          flexShrink: 0,\n          position: 'sticky',\n          top: 0,\n          zIndex: 1200,\n          backgroundColor: theme.palette.background.paper,\n          borderBottom: isTabletOrMobile\n            ? `1px solid ${theme.palette.divider}`\n            : 'none',\n          borderRadius: isTabletOrMobile ? 'unset' : '10px 10px 0 0',\n        }}\n      >\n        {isDesktop && (\n          <Stack\n            direction=\"row\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            sx={{\n              width: '100%',\n              paddingTop: '28px',\n              padding: '28px 20px 10px 20px',\n              borderRadius: '10px',\n            }}\n          >\n            <Stack\n              flexDirection=\"row\"\n              gap={1}\n              alignItems={'center'}\n              sx={{ display: { xs: 'none', md: 'flex' } }}\n            >\n              <TuneRounded fontSize=\"medium\" sx={{ fontWeight: 'bold' }} />\n              <Text variant=\"h3\" m={0}>\n                Filter results\n              </Text>\n            </Stack>\n            {isInStreamlinedTestVariant && (\n              <IconButton onClick={onCollapse} size=\"small\">\n                <ArrowBack />\n              </IconButton>\n            )}\n          </Stack>\n        )}\n        {isMedium && !collapsible.isCollapsed && (\n          <Stack sx={filterHeaderStyles()}>\n            <Text variant=\"h3\">\n              <Tune sx={{ m: 0.75, mb: -0.75 }} color={'inherit'} />\n              Filter results\n            </Text>\n            <Button\n              id=\"filters-toggle\"\n              type=\"button\"\n              name=\"filters-toggle\"\n              onClick={() =>\n                collapsible.setIsCollapsed(!collapsible.isCollapsed)\n              }\n              sx={(theme) => ({\n                alignSelf: 'flex-start',\n                color: `${theme.palette.text.secondary}`,\n                '&:hover': {\n                  background: 'transparent',\n                },\n\n                [theme.breakpoints.up('md')]: {\n                  display: 'none',\n                },\n              })}\n            >\n              <Close />\n            </Button>\n          </Stack>\n        )}\n      </Box>\n\n      {/* BODY - Scrollable */}\n      <Box\n        sx={{\n          flex: 1,\n          overflow: 'auto',\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <SidebarContainer\n          sx={{\n            borderRadius: '10px',\n            paddingTop: isMobile ? '26px' : 'unset',\n            flex: 1,\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <ConsolidatedSidebar\n            hideSubmitButton={true}\n            collapsible={collapsible}\n            handleExternalSubmit={handleExternalSubmit}\n          >\n            <ConsolidatedFilter\n              ref={filterRef}\n              formRef={formRef}\n              defaults={consolidatedFilterDefaults as ConsolidatedFilterInfo}\n              isSidebarCollapsed={\n                parentSidebarCollapsed !== undefined\n                  ? parentSidebarCollapsed\n                  : isSidebarCollapsed\n              }\n              setIsSidebarCollapsed={\n                setParentSidebarCollapsed !== undefined\n                  ? setParentSidebarCollapsed\n                  : setIsSidebarCollapsed\n              }\n              searchParams={searchParams}\n              setSearchParams={setSearchParams}\n            />\n          </ConsolidatedSidebar>\n        </SidebarContainer>\n      </Box>\n\n      {/* FOOTER - Sticky */}\n      <Box\n        sx={{\n          flexShrink: 0,\n          position: 'sticky',\n          bottom: 0,\n          zIndex: 1200,\n          backgroundColor: theme.palette.background.paper,\n          borderTop: 'none',\n          borderRadius: isTabletOrMobile ? 'unset' : '0 0 10px 10px',\n        }}\n      >\n        <ShowExternalButton />\n      </Box>\n    </Box>\n  );\n}\n", "import { Box, Button, styled } from '@ltvco/refresh-lib/theme';\n\nexport const SearchHeaderContainerCarousel = styled(Box)(({ theme, top }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  position: 'sticky',\n  zIndex: 1,\n  backgroundColor: theme.palette.primary.contrastText,\n  paddingTop: '15px',\n  paddingBottom: '15px',\n  top: `${top ? top : '150px'}`,\n  behavior: 'smooth',\n  [theme.breakpoints.up('sm')]: {\n    top: '148px',\n    padding: '15px',\n  },\n}));\n\nexport const ViewTypeContainer = styled(Box)(({ theme }) => ({\n  borderRadius: '50%',\n  width: '42px',\n  height: '42px',\n  cursor: 'pointer',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  color: theme.palette.text.secondary,\n  '&.active': {\n    backgroundColor: theme.palette.background.default,\n  },\n  '&.disabled': {\n    backgroundColor: 'transparent',\n    color: theme.palette.text.disabled,\n  },\n}));\n\nexport const ActiveFiltersButton = styled(Button)(({ theme }) => ({\n  border: `1px solid ${theme.palette.divider}`,\n  borderRadius: '10px',\n  color: theme.palette.text.primary,\n  fontWeight: 'bold',\n  paddingX: 3,\n  paddingY: 1,\n  minWidth: '210px',\n  height: '42px',\n}));\n", "import { Box, Stack, Text } from '@ltvco/refresh-lib/theme';\nimport { useEffect, useRef } from 'react';\nimport { NavButton, OptionResults } from 'routes/SearchPerson/components';\nimport { SearchHeaderContainerCarousel } from './components';\nimport { CollectionType, OptionType } from '@ltvco/refresh-lib/v2';\nimport { TuneRounded } from '@mui/icons-material';\nimport { useSearchParams } from 'react-router-dom';\n\ninterface SearchHeaderCarouselProps {\n  options: OptionType[];\n  selectedOption: CollectionType;\n  setSelectedOption: (value: OptionType) => void;\n  isInMobileFiltersAndTabsVariation?: boolean;\n  setParentSidebarCollapsed?: (value: boolean) => void;\n}\n\nconst SearchHeaderCarousel = ({\n  options,\n  selectedOption,\n  setSelectedOption,\n  isInMobileFiltersAndTabsVariation,\n  setParentSidebarCollapsed,\n}: SearchHeaderCarouselProps) => {\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const optionRefs = useRef<Record<string, HTMLButtonElement | null>>({});\n  const [searchParams] = useSearchParams();\n\n  useEffect(() => {\n    const container = scrollContainerRef.current;\n    const selectedButton = optionRefs.current[selectedOption];\n\n    if (container && selectedButton) {\n      const containerRect = container.getBoundingClientRect();\n      const buttonRect = selectedButton.getBoundingClientRect();\n      const offset =\n        buttonRect.left - containerRect.width / 2 + buttonRect.width / 2;\n\n      container.scrollBy({\n        left: offset,\n        behavior: 'smooth',\n      });\n    }\n  }, [selectedOption]);\n\n  const handleSelectTab = (option: OptionType) => {\n    if (option.value !== selectedOption) {\n      setSelectedOption(option);\n    }\n  };\n\n  const getFiltersCount = () => {\n    const params = {\n      fullname: searchParams.get('fullname'),\n      fname: searchParams.get('fname'),\n      ln: searchParams.get('ln'),\n      mn: searchParams.get('mn'),\n      age: searchParams.get('age'),\n      city: searchParams.get('city'),\n      state: searchParams.get('state'),\n      country: searchParams.get('country'),\n      birthYear: searchParams.get('birthYear'),\n      deathYear: searchParams.get('deathYear'),\n      birthMonth: searchParams.get('birthMonth'),\n      deathMonth: searchParams.get('deathMonth'),\n      title: searchParams.get('title'),\n      company: searchParams.get('company'),\n      level: searchParams.get('level'),\n      industry: searchParams.get('industry'),\n      company_size_max: searchParams.get('companySizeMax'),\n      company_size_min: searchParams.get('companySizeMin'),\n      address: searchParams.get('address'),\n    };\n\n    return Object.values(params).filter(Boolean).length;\n  };\n\n  return (\n    <SearchHeaderContainerCarousel\n      className=\"navbar\"\n      top={isInMobileFiltersAndTabsVariation ? '0' : '150px'}\n    >\n      <Box\n        ref={scrollContainerRef}\n        sx={{\n          display: 'flex',\n          overflowX: 'auto',\n          scrollBehavior: 'smooth',\n          '::-webkit-scrollbar': { display: 'none' },\n          flexGrow: 1,\n          whiteSpace: 'nowrap',\n          gap: '4px',\n          position: 'relative',\n        }}\n      >\n        {' '}\n        {isInMobileFiltersAndTabsVariation && setParentSidebarCollapsed && (\n          <NavButton\n            onClick={() => {\n              setParentSidebarCollapsed(false);\n            }}\n            className=\"filters-button\"\n            sx={{\n              position: 'sticky',\n              left: '0',\n              zIndex: 100,\n            }}\n          >\n            <TuneRounded sx={{ fontSize: '20px' }} />\n            <Text variant=\"body1\" m={0} noWrap>\n              ({getFiltersCount()})\n            </Text>\n          </NavButton>\n        )}\n        {options\n          .filter((option) => option.visible)\n          .map((option) => (\n            <NavButton\n              key={option.value}\n              ref={(el) => (optionRefs.current[option.value] = el)}\n              onClick={() => handleSelectTab(option)}\n              className={selectedOption === option.value ? 'active' : ''}\n              sx={{ marginRight: '2px' }}\n            >\n              <Stack flexDirection=\"row\" mt={0} alignItems=\"center\">\n                <OptionResults\n                  className=\"options-results\"\n                  sx={{\n                    width: parseInt(option.length) > 9 ? '40px' : '25px',\n                    marginRight: '4px',\n                  }}\n                >\n                  {option.length ? option.length : '0'}\n                </OptionResults>\n                <Text variant=\"body1\" m={0} noWrap>\n                  {option.label}\n                </Text>\n              </Stack>\n            </NavButton>\n          ))}\n      </Box>\n    </SearchHeaderContainerCarousel>\n  );\n};\n\nexport default SearchHeaderCarousel;\n", "export interface FamilySearchRowValue {\n  id: string;\n  name: JSX.Element;\n  age: JSX.Element;\n  locations: JSX.Element;\n  relatives: JSX.Element;\n}\n\nexport interface PersonRowValue {\n  id: string;\n  name: JSX.Element;\n  age: JSX.Element;\n  aliases: JSX.Element;\n  locations: JSX.Element;\n  relatives: JSX.Element;\n}\nexport interface ContactRowValue {\n  id: string;\n  name: JSX.Element;\n  job: string;\n  companies: JSX.Element;\n  locations: JSX.Element;\n}\n\nexport interface ObituaryRowValue {\n  id: string | null;\n  name: JSX.Element;\n  locations: JSX.Element;\n  born: string;\n  death: string;\n}\nexport interface ResidentRowValue {\n  id: string;\n  name: JSX.Element;\n  age: JSX.Element;\n  aliases: JSX.Element;\n  dateSeen: JSX.Element;\n}\nexport type ViewTypes = 'table' | 'list';\nexport const viewTypes = {\n  TABLE: 'table' as ViewTypes,\n  LIST: 'list' as ViewTypes,\n};\n\nexport type TableTypes =\n  | 'person'\n  | 'genealogy'\n  | 'obituary'\n  | 'professional'\n  | 'address';\n\nexport const tableTypes = {\n  PERSON: 'person' as TableTypes,\n  GENEALOGY: 'genealogy ' as TableTypes,\n  OBITUARY: 'obituary' as TableTypes,\n  PROFESSIONAL: 'professional' as TableTypes,\n  ADDRESS: 'address' as TableTypes,\n};\nexport type SearchType =\n  | 'username'\n  | 'phone'\n  | 'email'\n  | 'person'\n  | 'property'\n  | 'obituary'\n  | 'contact'\n  | 'ancestor'\n  | 'vehicle'\n  | 'email-fraud'\n  | 'phone-fraud'\n  | 'ip-fraud'\n  | 'url-fraud';\n\nexport interface RelativeNotSerialized {\n  bvid?: string;\n}\n", "export const contactSeniorityLevels: { value: string; label: string }[] = [\n  { value: 'cxo', label: 'CXO (Executive)' },\n  { value: 'owner', label: 'Owner' },\n  { value: 'partner', label: 'Partner' },\n  { value: 'vp', label: 'VP' },\n  { value: 'director', label: 'Director' },\n  { value: 'manager', label: 'Manager' },\n  { value: 'senior', label: 'Senior' },\n  { value: 'entry', label: 'Entry level' },\n  { value: 'training', label: 'Trainee' },\n  { value: 'unpaid', label: 'Intern' },\n];\n\nexport const contactIndustries: string[] = [\n  'Accounting',\n  'Airlines/Aviation',\n  'Alternative Dispute Resolution',\n  'Alternative Medicine',\n  'Animation',\n  'Apparel & Fashion',\n  'Architecture & Planning',\n  'Arts And Crafts',\n  'Automotive',\n  'Aviation & Aerospace',\n  'Banking',\n  'Biotechnology',\n  'Broadcast Media',\n  'Building Materials',\n  'Business Supplies And Equipment',\n  'Capital Markets',\n  'Chemicals',\n  'Civic & Social Organization',\n  'Civil Engineering',\n  'Commercial Real Estate',\n  'Computer & Network Security',\n  'Computer Games',\n  'Computer Hardware',\n  'Computer Networking',\n  'Computer Software',\n  'Construction',\n  'Consumer Electronics',\n  'Consumer Goods',\n  'Consumer Services',\n  'Cosmetics',\n  'Dairy',\n  'Defense & Space',\n  'Design',\n  'E Learning',\n  'Education Management',\n  'Electrical/Electronic Manufacturing',\n  'Entertainment',\n  'Environmental Services',\n  'Events Services',\n  'Executive Office',\n  'Facilities Services',\n  'Farming',\n  'Financial Services',\n  'Fine Art',\n  'Fishery',\n  'Food & Beverages',\n  'Food Production',\n  'Fund Raising',\n  'Furniture',\n  'Gambling & Casinos',\n  'Glass, Ceramics & Concrete',\n  'Government Administration',\n  'Government Relations',\n  'Graphic Design',\n  'Health, Wellness And Fitness',\n  'Higher Education',\n  'Hospital & Health Care',\n  'Hospitality',\n  'Human Resources',\n  'Import And Export',\n  'Individual & Family Services',\n  'Industrial Automation',\n  'Information Services',\n  'Information Technology And Services',\n  'Insurance',\n  'International Affairs',\n  'International Trade And Development',\n  'Internet',\n  'Investment Banking',\n  'Investment Management',\n  'Law Practice',\n  'Legal Services',\n  'Legislative Office',\n  'Leisure, Travel & Tourism',\n  'Libraries',\n  'Logistics And Supply Chain',\n  'Luxury Goods & Jewelry',\n  'Machinery',\n  'Management Consulting',\n  'Maritime',\n  'Market Research',\n  'Marketing And Advertising',\n  'Mechanical Or Industrial Engineering',\n  'Media Production',\n  'Medical Devices',\n  'Medical Practice',\n  'Mental Health Care',\n  'Military',\n  'Mining & Metals',\n  'Motion Pictures And Film',\n  'Museums And Institutions',\n  'Music',\n  'Nanotechnology',\n  'Newspapers',\n  'Non Profit Organization Management',\n  'Oil & Energy',\n  'Online Media',\n  'Outsourcing/Offshoring',\n  'Package/Freight Delivery',\n  'Packaging And Containers',\n  'Paper & Forest Products',\n  'Performing Arts',\n  'Pharmaceuticals',\n  'Philanthropy',\n  'Photography',\n  'Plastics',\n  'Political Organization',\n  'Primary/Secondary Education',\n  'Printing',\n  'Professional Training & Coaching',\n  'Program Development',\n  'Public Policy',\n  'Public Relations And Communications',\n  'Public Safety',\n  'Publishing',\n  'Railroad Manufacture',\n  'Real Estate',\n  'Recreational Facilities And Services',\n  'Religious Institutions',\n  'Renewables & Environment',\n  'Research',\n  'Restaurants',\n  'Retail',\n  'Security And Investigations',\n  'Semiconductors',\n  'Shipbuilding',\n  'Sporting Goods',\n  'Sports',\n  'Staffing And Recruiting',\n  'Supermarkets',\n  'Telecommunications',\n  'Textiles',\n  'Think Tanks',\n  'Tobacco',\n  'Translation And Localization',\n  'Transportation/Trucking/Railroad',\n  'Utilities',\n  'Venture Capital & Private Equity',\n  'Veterinary',\n  'Warehousing',\n  'Wholesale',\n  'Wine And Spirits',\n  'Wireless',\n  'Writing And Editing',\n];\n\nexport const contactEmployeeCountRanges: { value: number; label: string }[] = [\n  { value: 1, label: '1' },\n  { value: 2, label: '10' },\n  { value: 3, label: '50' },\n  { value: 4, label: '200' },\n  { value: 5, label: '500' },\n  { value: 6, label: '1000' },\n  { value: 7, label: '5000' },\n  { value: 8, label: '10000' },\n  { value: 9, label: '10000+' },\n];\n\nexport const monthOptions = [\n  { value: '01', display: '01- January' },\n  { value: '02', display: '02- February' },\n  { value: '03', display: '03- March' },\n  { value: '04', display: '04- April' },\n  { value: '05', display: '05- May' },\n  { value: '06', display: '06- June' },\n  { value: '07', display: '07- July' },\n  { value: '08', display: '08- August' },\n  { value: '09', display: '09- September' },\n  { value: '10', display: '10- October' },\n  { value: '11', display: '11- November' },\n  { value: '12', display: '12- December' },\n];\n\nexport const CHATBOT_INTERACTION_TYPES = {\n  OPEN: 'open',\n  CLOSE: 'close',\n} as const;\n", "import {\n  AdvancedSearchURLParams,\n  CollectionType,\n  OptionType,\n} from '@ltvco/refresh-lib/v2';\nimport {\n  NavButton,\n  OptionResults,\n  SearchHeader,\n} from 'routes/SearchPerson/components';\nimport {\n  Stack,\n  Text,\n  useMediaQuery,\n  useTheme,\n  Button,\n} from '@ltvco/refresh-lib/theme';\nimport { capitalizeEachWord } from '@ltvco/refresh-lib/utils';\nimport {\n  AutoAwesome,\n  Cancel,\n  GridViewSharp,\n  TableRowsSharp,\n} from '@mui/icons-material';\nimport { viewTypes, ViewTypes } from 'routes/SearchPerson/ResultTables/types';\nimport { ViewTypeContainer } from './components';\nimport { useFeatureIsOn } from '@ltvco/refresh-lib/vendors';\nimport { FilterList } from '@mui/icons-material';\nimport { ActiveFiltersButton } from './components';\nimport { NotificationMessage } from 'components/SearchpalChatbot/components/NotificationMessage';\nimport { CHATBOT_INTERACTION_TYPES } from '../constants';\n\nexport interface SearchHeaderProps {\n  options: OptionType[];\n  selectedOption: CollectionType;\n  setSelectedOption: (value: OptionType) => void;\n  searchData: AdvancedSearchURLParams;\n  isFilterCollapsed: boolean;\n  setIsFilterCollapsed: (value: boolean) => void;\n  currentView?: ViewTypes;\n  setCurrentView?: (value: ViewTypes) => void;\n  isChatbotOpen: boolean;\n  setIsChatbotOpen: (type: string) => void;\n  initialNotificationVisible: boolean;\n  setInitialNotificationVisible: (visible: boolean) => void;\n}\n\nexport const SearchHeaderDesktop = ({\n  options,\n  selectedOption,\n  setSelectedOption,\n  searchData,\n  currentView,\n  setCurrentView,\n  isFilterCollapsed,\n  setIsFilterCollapsed,\n  isChatbotOpen,\n  setIsChatbotOpen,\n  initialNotificationVisible,\n  setInitialNotificationVisible,\n}: SearchHeaderProps) => {\n  const capitalizeFullName = capitalizeEachWord(searchData.fullName);\n  const isInStreamlinedTestVariant = useFeatureIsOn('prop-2958');\n  const isInChatbotVariation = useFeatureIsOn('prop_2964');\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up('md'));\n  const isInChatbotVariationDesktop = isDesktop && isInChatbotVariation;\n  \n  // Disabled table view in test prop-2958 while we proceed with the\n  // clean up of the table view test/code (WU. 06/24/2025)\n  // const meetTableViewCriteria = isInStreamlinedTestVariant && isDesktop;\n  const meetTableViewCriteria = false;\n\n  const getActiveFiltersCount = () => {\n    let {\n      age,\n      state,\n      city,\n      address,\n      title,\n      company,\n      industry,\n      level,\n      birthYear,\n      birthMonth,\n      deathYear,\n      deathMonth,\n      fullName,\n      company_size_max,\n      company_size_min,\n    } = searchData;\n    age = age !== '0' ? age : '';\n    company_size_max = company_size_max !== '9' ? company_size_max : '';\n    company_size_min = company_size_min !== '1' ? company_size_min : '';\n\n    const filters = [\n      age,\n      state,\n      city,\n      address,\n      title,\n      company,\n      industry,\n      ...(level || []),\n      birthYear,\n      birthMonth,\n      deathYear,\n      deathMonth,\n      fullName,\n      company_size_max,\n      company_size_min,\n    ];\n    return filters.filter(\n      (val) => val && val.toString().trim() !== '' && val !== '[]'\n    ).length;\n  };\n\n  const CollapsedFiltersButton = () => {\n    if (!isFilterCollapsed || !isDesktop) {\n      return null;\n    }\n\n    return (\n      <ActiveFiltersButton\n        startIcon={<FilterList sx={{ fontSize: 20 }} />}\n        onClick={() => setIsFilterCollapsed(false)}\n        sx={{ mr: 1 }}\n        variant=\"outlined\"\n      >\n        Filter results ({getActiveFiltersCount()})\n      </ActiveFiltersButton>\n    );\n  };\n\n  const viewOptions = [\n    { type: viewTypes.LIST, icon: <GridViewSharp fontSize=\"small\" /> },\n    { type: viewTypes.TABLE, icon: <TableRowsSharp fontSize=\"small\" /> },\n  ];\n\n  return (\n    <SearchHeader\n      flexDirection=\"column\"\n      alignItems=\"left\"\n      pt={2.5}\n      pb={2.5}\n      display={'flex'}\n    >\n      <Stack flexDirection=\"row\" order={2}>\n        <Stack flexDirection=\"row\" flexWrap=\"wrap\" ml={1.25} gap={1}>\n          <CollapsedFiltersButton />\n          {options\n            .filter((option) => option.visible)\n            .map((option) => (\n              <NavButton\n                key={option.value}\n                onClick={() => setSelectedOption(option)}\n                className={selectedOption === option.value ? 'active' : ''}\n              >\n                <Stack flexDirection=\"row\" mt={0} alignItems=\"center\">\n                  <OptionResults\n                    className=\"options-results\"\n                    sx={{\n                      width: parseInt(option.length) > 9 ? '40px' : '25px',\n                      marginRight: '5px',\n                    }}\n                  >\n                    {option.length ? option.length : '0'}\n                  </OptionResults>\n                  <Text variant=\"body1\" m={0}>\n                    {option.label}\n                  </Text>\n                </Stack>\n              </NavButton>\n            ))}\n        </Stack>\n\n        {meetTableViewCriteria && (\n          <Stack flexDirection=\"row\" ml=\"auto\">\n            {viewOptions.map((option) => (\n              <ViewTypeContainer\n                key={option.type}\n                className={currentView === option.type ? 'active' : ''}\n                onClick={() => setCurrentView && setCurrentView(option.type)}\n              >\n                {option.icon}\n              </ViewTypeContainer>\n            ))}\n          </Stack>\n        )}\n      </Stack>\n      {\n        <Stack\n          className=\"results-for\"\n          flexDirection=\"row\"\n          ml={1.25}\n          sx={{\n            order: 1,\n            mb: 2,\n            mt: 1,\n          }}\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n        >\n          <Stack direction=\"row\" alignItems=\"center\">\n            <Text\n              variant=\"h3\"\n              sx={{\n                fontWeight: 'normal',\n                marginRight: '5px',\n                marginBottom: '0',\n              }}\n            >\n              Results for:\n            </Text>\n            <Text variant=\"h3\" m={0}>\n              {capitalizeFullName}\n            </Text>\n          </Stack>\n          {isInChatbotVariationDesktop && (\n            <>\n              <Button\n                variant={'outlined'}\n                size=\"small\"\n                onClick={() => {\n                  if (isChatbotOpen)\n                    setIsChatbotOpen(CHATBOT_INTERACTION_TYPES.CLOSE);\n                  else {\n                    setIsChatbotOpen(CHATBOT_INTERACTION_TYPES.OPEN);\n                    setInitialNotificationVisible(false);\n                  }\n                }}\n                sx={{\n                  px: 1,\n                  py: 0.5,\n                  gap: 0.5,\n                }}\n              >\n                {isChatbotOpen ? (\n                  <Cancel sx={{ color: theme.palette.primary.main }} />\n                ) : (\n                  <AutoAwesome sx={{ color: theme.palette.primary.main }} />\n                )}{' '}\n                <Text\n                  color={theme.palette.premium.contrastText}\n                  variant=\"body2\"\n                >\n                  {' '}\n                  {isChatbotOpen ? 'Close' : 'Search Assistant'}\n                </Text>\n              </Button>\n              <NotificationMessage\n                initialNotificationVisible={initialNotificationVisible}\n                setInitialNotificationVisible={setInitialNotificationVisible}\n                capitalizeFullName={capitalizeFullName}\n                setIsChatbotOpen={setIsChatbotOpen}\n              />\n            </>\n          )}\n        </Stack>\n      }\n    </SearchHeader>\n  );\n};\n", "import { titleize } from '@ltvco/refresh-lib/utils';\nimport { commonTypes } from '@ltvco/refresh-lib/v1';\nimport { NameData } from './types';\n\nconst SCROLL_OFFSET = 215;\nconst MAX_NAME_LENGTH = 35;\nexport const MAX_LIST_ITEMS = 5;\n\n// Helper function to deduplicate arrays\nexport const deduplicateArray = <T,>(array: T[]): T[] => {\n  return Array.from(new Set(array));\n};\n\n// Helper function to deduplicate arrays of objects by a key\nexport const deduplicateObjectsByKey = <T extends Record<string, any>>(\n  array: T[],\n  key: keyof T\n): T[] => {\n  const seen = new Set();\n  return array.filter((item) => {\n    const value = item[key];\n    if (seen.has(value)) return false;\n    seen.add(value);\n    return true;\n  });\n};\n\nexport const formatName = (name: string) => {\n  return titleize(name || '').toLowerCase() || '';\n};\n\nexport const excludeAgeFromName = (name: string, age?: string) => {\n  if (!age) return name;\n\n  if (name.includes(`, ${age}`)) {\n    return name.replace(`, ${age}`, '').slice(0, MAX_NAME_LENGTH);\n  }\n\n  return name;\n};\n\nexport const scrollToCard = (element: Element) => {\n  // Scroll to the beginning of the card with offset to avoid being hidden\n  const cardRect = element.getBoundingClientRect();\n  const offsetPosition = window.pageYOffset + cardRect.top - SCROLL_OFFSET;\n  window.scrollTo({\n    top: offsetPosition,\n    behavior: 'smooth',\n  });\n};\n\nexport const formatShorthandDate = (\n  date: commonTypes.Date | undefined,\n  includeDay?: boolean\n) => {\n  if (!date) {\n    return;\n  }\n\n  if (date.parsed) {\n    const { parsed } = date;\n    if (parsed.year && parsed.month) {\n      return new Date(\n        parsed.year,\n        parsed.month - 1,\n        parsed.day || 1\n      ).toLocaleDateString('en-us', {\n        year: 'numeric',\n        month: includeDay ? '2-digit' : 'long',\n        day: includeDay ? 'numeric' : undefined,\n      });\n    }\n  }\n};\n\nexport const getUniqueRelatives = (\n  relatives: string[] = [],\n  relativesBvIds: NameData | NameData[] = []\n) => {\n  // Deduplicate relatives while preserving the relation with relativesBvIds\n  const uniqueRelatives: string[] = [];\n  const uniqueRelativesBvIds: string[] = [];\n\n  // Use Map to maintain order and preserve the bvid connections\n  const relativeMap = new Map<string, string>();\n  (relatives || []).forEach((relative, index) => {\n    const relativeBvId = Array.isArray(relativesBvIds)\n      ? relativesBvIds[index]?.bvid\n      : relativesBvIds.bvid;\n    relativeMap.set(relative.toLowerCase(), relativeBvId || '');\n  });\n\n  // Convert back to arrays\n  relativeMap.forEach((bvid, name) => {\n    uniqueRelatives.push(name);\n    uniqueRelativesBvIds.push(bvid);\n  });\n\n  return { uniqueRelatives, uniqueRelativesBvIds };\n}; ", "import {\n  Box,\n  Stack,\n  Text,\n  styled,\n  Divider,\n  List,\n  ListItem,\n} from '@ltvco/refresh-lib/theme';\nimport { titleize } from '@ltvco/refresh-lib/utils';\nimport { ContactCompany } from '@ltvco/refresh-lib/v1';\nimport { ChevronRight, Spellcheck } from '@mui/icons-material';\nimport {\n  deduplicateArray,\n  deduplicateObjectsByKey,\n  MAX_LIST_ITEMS,\n} from './utils';\nimport {\n  CompaniesListProps,\n  CustomListProps,\n  PhonesListProps,\n  RelativesListProps,\n} from './types';\n\nexport const CardContainer = styled(Box)(({ theme }) => ({\n  backgroundColor: theme.palette.common.white,\n  borderRadius: `${theme.spacing(1.5)}`,\n  border: '1px solid #ddd',\n  padding: theme.spacing(2),\n  marginBottom: theme.spacing(1.5),\n  position: 'relative',\n  color: theme.palette.text.primary,\n}));\n\nexport const HeaderStack = styled(Stack)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'flex-start',\n}));\n\nexport const IconWrapper = styled(Box)(({ theme }) => ({\n  backgroundColor: theme.palette.primary.light,\n  borderRadius: '50%',\n  padding: theme.spacing(1),\n  width: '36px',\n  height: '36px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n}));\n\nexport const PersonIconWrapper = styled(IconWrapper)(({ theme }) => ({\n  '& .MuiSvgIcon-root': {\n    color: theme.palette.primary.main,\n  },\n}));\n\nexport const InfoSection = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(0, 1, 1, 1),\n  color: theme.palette.text.secondary,\n}));\n\nexport const ExpandButton = styled(Box)<{ mt?: number }>(\n  ({ theme, mt = 0 }) => ({\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: theme.spacing(mt),\n    color: theme.palette.text.secondary,\n\n    '& .MuiTypography-root': {\n      fontWeight: 'bold',\n    },\n  })\n);\n\nexport const AdditionalDetailsBox = styled(Box)(({ theme }) => ({\n  backgroundColor: theme.palette.primary.light,\n  padding: theme.spacing(1.5),\n  borderRadius: theme.shape.borderRadius,\n  marginTop: theme.spacing(3),\n  cursor: 'pointer',\n}));\n\nexport const StyledChevron = styled(ChevronRight)(({ theme }) => ({\n  color: theme.palette.grey[500],\n  cursor: 'pointer',\n  fontSize: 20,\n}));\n\nexport const NameTypography = styled(Text)<{ component?: string }>(\n  ({ theme }) => ({\n    textTransform: 'capitalize',\n    display: 'flex',\n    alignItems: 'center',\n  })\n);\n\nexport const SecondaryTextTypography = styled(Text)(({ theme }) => ({\n  color: theme.palette.text.secondary,\n  margin: theme.spacing(0.8, 0),\n}));\n\nexport const SecondaryTextSubtitleTypography = styled(Text)(({ theme }) => ({\n  '&.MuiTypography-root': {\n    color: theme.palette.text.secondary,\n    fontWeight: 'bold',\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport const SpellCheckIcon = styled(Spellcheck)(({ theme }) => ({\n  height: '16px',\n  width: '16px',\n  margin: 'auto',\n  color: theme.palette.neighborhoodWatch?.main,\n  marginLeft: theme.spacing(1),\n  marginRight: theme.spacing(1),\n}));\n\nexport const DetailsBox = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  width: '100%',\n  alignItems: 'flex-start',\n  position: 'relative',\n}));\n\nexport const ListContentItem = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  padding: theme.spacing(1, 0),\n  cursor: 'pointer',\n}));\n\nexport const MoreItemsIndicator = ({\n  items = [],\n  displayed = MAX_LIST_ITEMS,\n}: {\n  items: unknown[];\n  displayed: number;\n}) => {\n  const total = items.length;\n\n  if (total === 0 || total <= displayed) return null;\n\n  return (\n    <SecondaryTextTypography variant=\"body2\" sx={{ mt: 1 }}>\n      + {total - displayed} more\n    </SecondaryTextTypography>\n  );\n};\n\nexport const CustomList = ({\n  items,\n  maxItems = MAX_LIST_ITEMS,\n}: CustomListProps) => {\n  // Deduplicate items\n  const uniqueItems = items ? deduplicateArray(items) : [];\n\n  return (\n    <List dense>\n      {uniqueItems.slice(0, maxItems).map((item, index) => (\n        <ListItem\n          key={index}\n          sx={{\n            textTransform: 'capitalize',\n            paddingLeft: '8px',\n            alignItems: 'start',\n          }}\n        >\n          <Box component=\"span\" sx={{ marginRight: '7px' }}>\n            &#8226;\n          </Box>\n          {titleize(item).toLowerCase()}\n        </ListItem>\n      ))}\n      {<MoreItemsIndicator items={uniqueItems} displayed={maxItems} />}\n    </List>\n  );\n};\n\nexport const CustomListItem = ({\n  item,\n  hasAction = false,\n  onClickHandler,\n  index = 0,\n  isCapitalized = true,\n}: {\n  item: string;\n  hasAction?: boolean;\n  onClickHandler?: (index: number) => void;\n  index?: number;\n  isCapitalized?: boolean;\n}) => (\n  <>\n    <ListContentItem\n      onClick={\n        hasAction && onClickHandler ? () => onClickHandler(index) : undefined\n      }\n    >\n      <SecondaryTextTypography\n        variant=\"body2\"\n        sx={{\n          textTransform: isCapitalized ? 'capitalize' : 'none',\n          whiteSpace: 'nowrap',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n        }}\n      >\n        {isCapitalized ? titleize(item).toLowerCase() : item}\n      </SecondaryTextTypography>\n      {hasAction && <StyledChevron />}\n    </ListContentItem>\n    <Divider />\n  </>\n);\n\nexport const RelativesList = ({\n  uniqueRelatives,\n  uniqueRelativesBvIds,\n  onClickHandler,\n  maxItems = MAX_LIST_ITEMS,\n}: RelativesListProps) => {\n  return (\n    <Box>\n      {uniqueRelatives\n        .slice(0, maxItems)\n        .map((relative: string, index: number) => (\n          <CustomListItem\n            key={index}\n            item={relative}\n            hasAction={!!uniqueRelativesBvIds?.[index]}\n            onClickHandler={onClickHandler}\n            index={index}\n            isCapitalized={true}\n          />\n        ))}\n      {<MoreItemsIndicator items={uniqueRelatives} displayed={maxItems} />}\n    </Box>\n  );\n};\n\nexport const CompaniesList = ({\n  companies,\n  onClickHandler,\n  maxItems = MAX_LIST_ITEMS,\n}: CompaniesListProps) => {\n  // Convert to array and deduplicate\n  const companiesArray = Array.isArray(companies) ? companies : [companies];\n\n  let uniqueCompanies: (string | ContactCompany)[];\n\n  if (typeof companiesArray[0] === 'string') {\n    // For string arrays\n    uniqueCompanies = deduplicateArray(companiesArray as string[]);\n  } else {\n    // For object arrays\n    uniqueCompanies = deduplicateObjectsByKey(\n      companiesArray as ContactCompany[],\n      'name'\n    );\n  }\n\n  return (\n    <Box>\n      {uniqueCompanies.slice(0, maxItems).map((company, index) => (\n        <CustomListItem\n          key={index}\n          item={typeof company === 'string' ? company : company.name}\n          hasAction={true}\n          onClickHandler={onClickHandler}\n          index={index}\n          isCapitalized={false}\n        />\n      ))}\n      {<MoreItemsIndicator items={uniqueCompanies} displayed={maxItems} />}\n    </Box>\n  );\n};\n\nexport const PhonesList = ({\n  phones,\n  maxItems = MAX_LIST_ITEMS,\n}: PhonesListProps) => {\n  // Deduplicate phone numbers\n  const uniquePhones = phones ? deduplicateArray(phones) : [];\n\n  return (\n    <List dense>\n      {uniquePhones.slice(0, maxItems).map((phone, index) => (\n        <CustomListItem\n          key={index}\n          item={phone}\n          index={index}\n          isCapitalized={false}\n        />\n      ))}\n      {<MoreItemsIndicator items={uniquePhones} displayed={maxItems} />}\n    </List>\n  );\n}; ", "import React, { useContext, useState } from 'react';\nimport {\n  KeyboardArrowDown,\n  KeyboardArrowUp,\n  OpenInNew,\n} from '@mui/icons-material';\nimport { Box, Text, Divider, useTheme } from '@ltvco/refresh-lib/theme';\nimport { AppConfig } from '@ltvco/refresh-lib/ctx';\nimport {\n  CardContainer,\n  HeaderStack,\n  ExpandButton,\n  AdditionalDetailsBox,\n  DetailsBox,\n  StyledChevron,\n  SecondaryTextTypography,\n} from './common/components';\nimport { scrollToCard } from './common/utils';\n\nexport interface BaseCardProps {\n  bvid?: string;\n  name?: string;\n  isExpandable?: boolean;\n  onDetailsClick?: () => void;\n  renderIcon: () => React.ReactNode;\n  renderHeader: () => React.ReactNode;\n  renderExpandedContent?: () => React.ReactNode;\n  footerText?: string;\n}\n\nexport const BaseCard: React.FC<BaseCardProps> = ({\n  name = '',\n  isExpandable = true,\n  onDetailsClick,\n  renderIcon,\n  renderHeader,\n  renderExpandedContent,\n  footerText,\n}) => {\n  const theme = useTheme();\n  const { trackEventGA4 } = useContext(AppConfig);\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const handleExpandToggle = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (isExpanded) {\n      const target = event.target as HTMLElement;\n      const cardElement = target.closest('.base-card-container');\n      if (cardElement) {\n        scrollToCard(cardElement);\n      }\n    }\n\n    trackEventGA4({\n      event_name: 'search_results_interaction',\n      type: 'card click',\n      action: isExpanded ? 'collapse' : 'expand',\n    });\n\n    setIsExpanded(!isExpanded);\n  };\n\n  return (\n    <CardContainer className=\"base-card-container\">\n      <HeaderStack onClick={onDetailsClick ? onDetailsClick : undefined}>\n        {renderIcon()}\n        <Box sx={{ flex: 1 }} mt=\"4px\" ml=\"14px\">\n          {renderHeader()}\n        </Box>\n        {onDetailsClick && <StyledChevron onClick={onDetailsClick} />}\n      </HeaderStack>\n\n      {isExpandable && !isExpanded ? (\n        <>\n          <Divider\n            sx={{ margin: '18px 0 8px', borderColor: theme.palette.divider }}\n          />\n          <ExpandButton onClick={handleExpandToggle}>\n            <SecondaryTextTypography variant=\"body2\">\n              Expand Details\n            </SecondaryTextTypography>\n            <KeyboardArrowDown fontSize=\"small\" sx={{ marginLeft: '2px' }} />\n          </ExpandButton>\n        </>\n      ) : isExpandable && renderExpandedContent ? (\n        <>\n          <Divider\n            sx={{ margin: '18px 0', borderColor: theme.palette.divider }}\n          />\n          {renderExpandedContent()}\n\n          {footerText && onDetailsClick && (\n            <AdditionalDetailsBox onClick={onDetailsClick}>\n              <DetailsBox>\n                <Box sx={{ flexDirection: 'column', display: 'flex' }}>\n                  <SecondaryTextTypography variant=\"body2\" mb={0.5}>\n                    See additional details for:\n                  </SecondaryTextTypography>\n                  <Text\n                    variant=\"body2\"\n                    fontWeight=\"bold\"\n                    color=\"primary\"\n                    sx={{ textTransform: 'capitalize' }}\n                  >\n                    {footerText}\n                  </Text>\n                </Box>\n                <OpenInNew\n                  color=\"primary\"\n                  fontSize=\"small\"\n                  sx={{ position: 'absolute', right: 0, top: 0 }}\n                />\n              </DetailsBox>\n            </AdditionalDetailsBox>\n          )}\n\n          {isExpandable && (\n            <ExpandButton onClick={handleExpandToggle} mt={3}>\n              <SecondaryTextTypography variant=\"body2\">\n                Close Details\n              </SecondaryTextTypography>\n              <KeyboardArrowUp fontSize=\"small\" />\n            </ExpandButton>\n          )}\n        </>\n      ) : null}\n    </CardContainer>\n  );\n}; ", "import { Person, Spellcheck } from '@mui/icons-material';\nimport { DarkTooltip, useTheme, Stack } from '@ltvco/refresh-lib/theme';\nimport { openReportInNewTab } from '@ltvco/refresh-lib/v1';\nimport { constants } from 'appConstants';\nimport { BaseCard } from '../BaseCard';\nimport {\n  PersonIconWrapper,\n  InfoSection,\n  NameTypography,\n  SecondaryTextTypography,\n  SecondaryTextSubtitleTypography,\n  CustomList,\n  RelativesList,\n} from '../common/components';\nimport {\n  formatName,\n  excludeAgeFromName,\n  getUniqueRelatives,\n} from '../common/utils';\nimport { PersonCardData } from '../common/types';\n\nexport function MobilePersonCard({\n  bvid,\n  name,\n  nameMatched,\n  birthInfo,\n  locations,\n  aliases,\n  relatives,\n  onSuccess,\n  age,\n  relativesNotSerialized,\n}: PersonCardData) {\n  const theme = useTheme();\n  const { uniqueRelatives, uniqueRelativesBvIds } = getUniqueRelatives(\n    relatives,\n    relativesNotSerialized\n  );\n\n  const openReport = (bvid: string) => {\n    openReportInNewTab({ bvid, searchType: 'person' }, constants.links.baseUrl);\n  };\n\n  const handleRelativeClick = (index: number) => {\n    const relativeBvId = uniqueRelativesBvIds[index];\n    if (relativeBvId) {\n      openReport(relativeBvId);\n    }\n  };\n\n  const handleOpenMainPersonReport = () => {\n    onSuccess?.();\n    openReport(bvid);\n  };\n\n  const mainLocation = locations?.[0];\n  const formattedName = formatName(name || '');\n  const safeName = name || '';\n\n  return (\n    <BaseCard\n      name={safeName}\n      isExpandable={true}\n      onDetailsClick={handleOpenMainPersonReport}\n      renderIcon={() => (\n        <PersonIconWrapper>\n          <Person color=\"primary\" fontSize=\"small\" />\n        </PersonIconWrapper>\n      )}\n      renderHeader={() => (\n        <>\n          <NameTypography variant=\"subtitle1\" fontWeight=\"bold\">\n            {formattedName}\n            <Stack flexDirection=\"row\">\n              {nameMatched && (\n                <DarkTooltip\n                  enterTouchDelay={0}\n                  leaveTouchDelay={2000}\n                  title=\"Name Matched\"\n                >\n                  <Spellcheck\n                    className=\"SpellCheck\"\n                    sx={{\n                      height: '16px',\n                      width: '16px',\n                      margin: 'auto',\n                      color: theme.palette.neighborhoodWatch?.main,\n                      ml: 1,\n                      mr: 1,\n                    }}\n                  />\n                </DarkTooltip>\n              )}\n            </Stack>\n          </NameTypography>\n          <SecondaryTextTypography variant=\"body2\">\n            Born: {birthInfo || '-'}\n          </SecondaryTextTypography>\n          {mainLocation && (\n            <SecondaryTextTypography variant=\"body2\">\n              {mainLocation}\n            </SecondaryTextTypography>\n          )}\n        </>\n      )}\n      renderExpandedContent={() => (\n        <InfoSection>\n          <SecondaryTextSubtitleTypography variant=\"subtitle2\">\n            Aliases\n          </SecondaryTextSubtitleTypography>\n          {aliases && aliases.length > 0 ? (\n            <CustomList items={aliases} />\n          ) : (\n            <SecondaryTextTypography variant=\"body2\">-</SecondaryTextTypography>\n          )}\n\n          <SecondaryTextSubtitleTypography variant=\"subtitle2\">\n            Locations\n          </SecondaryTextSubtitleTypography>\n          {locations && locations.length > 0 ? (\n            <CustomList items={locations as string[]} />\n          ) : (\n            <SecondaryTextTypography variant=\"body2\">-</SecondaryTextTypography>\n          )}\n\n          <SecondaryTextSubtitleTypography variant=\"subtitle2\">\n            Relatives\n          </SecondaryTextSubtitleTypography>\n          {relatives && relatives.length > 0 ? (\n            <RelativesList\n              uniqueRelatives={uniqueRelatives}\n              uniqueRelativesBvIds={uniqueRelativesBvIds}\n              onClickHandler={handleRelativeClick}\n            />\n          ) : (\n            <SecondaryTextTypography variant=\"body2\">-</SecondaryTextTypography>\n          )}\n        </InfoSection>\n      )}\n      footerText={excludeAgeFromName(formattedName, age)}\n    />\n  );\n} ", "import React from 'react';\nimport { PersonSearchNoResults, type Record } from '@ltvco/refresh-lib/v1';\nimport { ConsolidatedSearchResultCard } from '@ltvco/refresh-lib/v2';\nimport { useFeatureIsOn } from '@ltvco/refresh-lib/vendors';\nimport { useScreenSize } from '@ltvco/refresh-lib/utils';\nimport { MobilePersonCard as MobilePersonCardVariation1 } from './NewCardsDesignVariation1/PersonCards/MobilePersonCard';\ninterface PersonCardProps {\n  searchPersonResult: Record[];\n}\n\nexport const PersonCards = ({ searchPersonResult }: PersonCardProps) => {\n  const { isMobile } = useScreenSize();\n  const isInStreamlinedTestVariant = useFeatureIsOn('prop-2958');\n  const isInMobileAndIsInStreamlinedTestVariant =\n    isMobile && isInStreamlinedTestVariant;\n\n  if (!searchPersonResult || searchPersonResult.length === 0) {\n    return <PersonSearchNoResults />;\n  }\n\n  return (\n    <>\n      {searchPersonResult.map((person: Record, index: number) => {\n        const allBvIds = Array.isArray(person.relativesNotSerialized)\n          ? person.relativesNotSerialized\n              .map((relative) => relative.bvid)\n              .join(', ')\n          : '';\n\n        if (isInMobileAndIsInStreamlinedTestVariant) {\n          return (\n            <React.Fragment key={index}>\n              <MobilePersonCardVariation1 {...person} />\n            </React.Fragment>\n          );\n        }\n\n        return (\n          <React.Fragment key={index}>\n            <ConsolidatedSearchResultCard\n              {...person}\n              isConsolidatedSearch={true}\n              relativeBvId={allBvIds}\n            />\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n};\n", "import { Skeleton, Grid, Stack, Box, styled } from '@ltvco/refresh-lib/theme';\n\nconst CardContainer = styled(Box)(({ theme }) => ({\n  position: 'relative',\n  backgroundColor: theme.palette.background.paper,\n  padding: `${theme.spacing(3)}`,\n  marginBottom: `${theme.spacing(3)}`,\n  borderRadius: `${theme.spacing(0.5)}`,\n}));\n\n/**\n *\n * This is a loading component while the search person is loading.\n * Currently, there is no props for this component. It is just a skeleton\n * to show that the search is loading.\n */\nexport const PersonCardLoading = () => {\n  const itemList = [1, 2, 3];\n\n  return (\n    <Stack>\n      <Grid container spacing={2} sx={{ mt: 3 }}>\n        <Grid item xs={12} md={9}>\n          {itemList.map((_index) => (\n            <CardContainer key={_index}>\n              <Stack spacing={2} direction={{ xs: 'column', md: 'row' }}>\n                <Box width={{ xs: '100%', md: '70%' }}>\n                  <Grid container spacing={1} sx={{ mb: 1 }}>\n                    <Grid item xs={12} sx={{ pt: 0, mt: 0 }}>\n                      <Skeleton width=\"25%\" height={30} variant=\"rectangular\" />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Skeleton\n                        sx={{\n                          width: '20%',\n                          height: 24,\n                          mb: 2,\n                        }}\n                        variant=\"rectangular\"\n                      />\n                    </Grid>\n                  </Grid>\n\n                  <Box>\n                    <Skeleton\n                      sx={{\n                        width: '10%',\n                        height: 19,\n                        mb: 2,\n                        display: 'inline-block',\n                        mr: 2,\n                      }}\n                      variant=\"rectangular\"\n                    />\n                    <Skeleton\n                      sx={{\n                        width: '35%',\n                        height: 19,\n                        mb: 2,\n                        display: 'inline-block',\n                      }}\n                      variant=\"rectangular\"\n                    />\n                  </Box>\n                  <Box>\n                    <Skeleton\n                      sx={{\n                        width: '10%',\n                        height: 19,\n                        mb: 2,\n                        display: 'inline-block',\n                        mr: 2,\n                      }}\n                      variant=\"rectangular\"\n                    />\n                    <Skeleton\n                      sx={{\n                        width: '35%',\n                        height: 19,\n                        mb: 2,\n                        display: 'inline-block',\n                      }}\n                      variant=\"rectangular\"\n                    />\n                  </Box>\n                  <Box>\n                    <Skeleton\n                      sx={{\n                        width: '10%',\n                        height: 19,\n                        mb: 2,\n                        display: 'inline-block',\n                        mr: 2,\n                      }}\n                      variant=\"rectangular\"\n                    />\n                    <Skeleton\n                      sx={{\n                        width: '35%',\n                        height: 19,\n                        mb: 2,\n                        display: 'inline-block',\n                      }}\n                      variant=\"rectangular\"\n                    />\n                  </Box>\n                </Box>\n                <Box width={{ xs: '100%', md: '30%' }}>\n                  <Skeleton\n                    sx={{\n                      width: '100%',\n                      height: 40,\n                    }}\n                    variant=\"rectangular\"\n                  />\n                </Box>\n              </Stack>\n            </CardContainer>\n          ))}\n        </Grid>\n      </Grid>\n    </Stack>\n  );\n};\n", "import { Box, Stack, styled, Text } from '@ltvco/refresh-lib/theme';\n\nexport const IconContainer = styled(Box)(({ theme }) => ({\n  backgroundColor: theme.palette.primary.light,\n  borderRadius: '50%',\n  width: '16px',\n  height: '16px',\n  display: 'flex',\n  flexShrink: 0,\n  justifyContent: 'center',\n  alignItems: 'center',\n  transition: 'all 0.3s ease',\n}));\n\nexport const StyledResultsTableHead = styled(Stack)(({ theme }) => ({\n  position: 'sticky',\n  top: 0,\n  backgroundColor: theme.palette.background.default,\n  zIndex: 1,\n}));\n\nexport const StyledResultsTableRow = styled(Stack)(({ theme }) => ({\n  padding: '8px',\n  flexDirection: 'row',\n  justifyContent: 'space-between',\n  transition: 'background-color 0.3s ease',\n  border: `1px solid ${theme.palette.divider}`,\n  ':hover': {\n    backgroundColor: theme.palette.background.default,\n  },\n  '&:hover .icon-container': {\n    width: '24px',\n    height: '24px',\n  },\n  '@media (max-width: 1200px)': {\n    justifyContent: 'flex-start',\n    gap: 4,\n  },\n}));\n\nexport const StyledResultsTableCell = styled(Stack)(() => ({\n  width: '20%',\n  padding: '16px 12px',\n  '&.table-header': {\n    padding: '8px 12px',\n    lineHeight: '1',\n    height: '24px',\n    fontWeight: '700',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  '@media (max-width: 1200px)': {\n    width: '20%',\n    padding: '0 2px 5px 0',\n    marginRight: '0',\n    marginLeft: '0',\n  },\n}));\n\nexport const StyledResultsTableContainer = styled(Stack)(({}) => ({\n  position: 'relative',\n  right: '0',\n  borderRadius: '4px',\n  padding: '0 0 12px 0',\n  marginRight: '1px',\n  overflowY: 'scroll',\n  maxHeight: '85.5vh',\n  '::-webkit-scrollbar': {\n    width: '5px',\n    position: 'relative',\n  },\n  '::-webkit-scrollbar-thumb': {\n    backgroundColor: 'darkgrey',\n    borderRadius: '10px',\n  },\n  '@media (max-width: 1000px)': {\n    flexShrink: 10,\n    maxWidth: '600px',\n    padding: '0 0 5px 0',\n    marginRight: '0',\n  },\n}));\n\nexport const StyledResultsTableText = styled(Text)(({ theme }) => ({\n  color: theme.palette.text.primary,\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  '&.link': {\n    textDecoration: 'underline',\n    textDecorationThickness: '1px',\n    cursor: 'pointer',\n  },\n}));\n\nexport const StyledResultsTableNameColumn = styled(Stack)(() => ({\n  flexDirection: 'row',\n  alignItems: 'center',\n  minHeight: '30px',\n  gap: 4,\n  '@media (max-width: 1200px)': {\n    gap: 1,\n  },\n}));\n", "export const personHeaders = [\n  { id: 'name', label: 'Name' },\n  { id: 'age', label: 'Age' },\n  { id: 'aliases', label: 'Aliases' },\n  { id: 'locations', label: 'Location' },\n  { id: 'relatives', label: 'Relatives' },\n];\n\nexport const familySearchHeaders = [\n  { id: 'name', label: 'Name' },\n  { id: 'age', label: 'Year of birth' },\n  { id: 'locations', label: 'Location' },\n  { id: 'relatives', label: 'Relatives' },\n];\n\nexport const obituaryHeaders = [\n  { id: 'name', label: 'Name' },\n  { id: 'locations', label: 'Location' },\n  { id: 'born', label: 'Born' },\n  { id: 'death', label: 'Death' },\n];\n\nexport const contactHeaders = [\n  { id: 'name', label: 'Name' },\n  { id: 'job', label: 'Job Title' },\n  { id: 'companies', label: 'Company' },\n  { id: 'locations', label: 'Location' },\n];\n\nexport const residentHeaders = [\n  { id: 'name', label: 'Name' },\n  { id: 'age', label: 'Age' },\n  { id: 'aliases', label: 'Aliases' },\n  { id: 'phones', label: 'Phone' },\n  { id: 'dateSeen', label: 'Date Seen' },\n];\n\nexport const TABLE_LIST_LIMIT = 5;\n", "import { Stack } from '@ltvco/refresh-lib/theme';\nimport { titleize } from '@ltvco/refresh-lib/utils';\nimport { StyledResultsTableText } from '../components';\nimport { TABLE_LIST_LIMIT } from '../constants';\n\nexport interface ListInfo {\n  fullname: string;\n  bvid?: string;\n}\nexport interface ListColumnProps {\n  list: ListInfo[] | [];\n  goToReport?: (bvid: string) => void;\n}\n\nexport const setValidListInfo = (\n  words?: string[],\n  bvids?: string[] | string\n): ListInfo[] | [] => {\n  if (words !== undefined && words.length > 0) {\n    const lists: ListInfo[] = words.map((word, index) => {\n      const list = {\n        fullname: word,\n        bvid: bvids ? (Array.isArray(bvids) ? bvids[index] : bvids) : undefined,\n      };\n      return list;\n    });\n    return lists;\n  }\n  return [];\n};\n\nexport const ListColumn = (props: ListColumnProps) => {\n  const { list, goToReport } = props;\n  const extraItems =\n    list.length > TABLE_LIST_LIMIT ? list.length - TABLE_LIST_LIMIT : 0;\n  return (\n    <Stack display=\"flex\" flexDirection=\"column\" gap={'4px'}>\n      {list.map((item, index) => {\n        if (index > TABLE_LIST_LIMIT) return;\n        return (\n          <StyledResultsTableText\n            className={item?.bvid ? 'link' : ''}\n            key={index}\n            sx={{\n              lineHeight: '22px',\n            }}\n            onClick={() => {\n              if (item?.bvid !== undefined && goToReport) goToReport(item.bvid);\n            }}\n          >\n            {item?.fullname\n              ? titleize((item.fullname as string).toLowerCase())\n              : ''}\n          </StyledResultsTableText>\n        );\n      })}\n      {extraItems !== 0 && (\n        <StyledResultsTableText\n          sx={{\n            lineHeight: '22px',\n          }}\n        >\n          + {extraItems} more\n        </StyledResultsTableText>\n      )}\n    </Stack>\n  );\n};\n", "import { Text } from '@ltvco/refresh-lib/theme';\ninterface AgeColumnProps {\n  age?: string;\n  birthInfo?: string;\n}\nexport const AgeColumn = (props: AgeColumnProps): JSX.Element => {\n  const { age, birthInfo } = props;\n  return (\n    <>\n      <Text\n        variant=\"subtitle2\"\n        sx={(theme) => ({\n          color: theme.palette.text.secondary,\n        })}\n      >\n        {age && age !== '-' ? age : ''}\n      </Text>\n      <Text\n        variant=\"caption\"\n        sx={(theme) => ({\n          color: theme.palette.text.secondary,\n        })}\n      >\n        {birthInfo && birthInfo.trim() !== '' ? `Born ${birthInfo}` : ''}\n      </Text>\n    </>\n  );\n};\n", "import {\n  FamilySearchPersonData,\n  getMonthAbbreviation,\n  personAddresses,\n  personRelatives,\n  RawFamilySearchPersonResults,\n} from '@ltvco/refresh-lib/fmt';\nimport { commonTypes, type Record } from '@ltvco/refresh-lib/v1';\n\nexport const removeNumberPattern = (word: string) => {\n  return word.replace(/, ?\\d+/g, '');\n};\n\nexport const extractAddresses = (fullAddress: string): string[] => {\n  if (!fullAddress) return [];\n  return fullAddress?.split(',').map((item) => item.trim());\n};\n\nexport const formattedFamilySearchDataForTable = (\n  familySearchData: RawFamilySearchPersonResults,\n  fName: string,\n  lName: string\n): Record[] => {\n  return familySearchData.entities.options.people.map(\n    (person: FamilySearchPersonData): Record => {\n      return {\n        age: person.identity.ages?.[0] ? String(person.identity.ages[0]) : '',\n        name: `${person.identity.names[0].full} ${\n          person.identity.ages?.[0] ? `,${person.identity.ages[0]}` : ''\n        }`,\n        birthInfo: `${getMonthAbbreviation(\n          person.identity.dobs?.[0]?.date?.parsed?.month ?? ''\n        )} ${person.identity.dobs?.[0]?.date?.parsed?.year || ''}`,\n        relatives: personRelatives(person.connections?.relatives || []).filter(\n          (relative): relative is string => relative !== null\n        ),\n        locations: extractAddresses(\n          personAddresses(person.contact?.addresses || [])[0]\n        ),\n        nameMatched:\n          person.identity.names[0].full\n            ?.toLowerCase()\n            .includes(fName.toLowerCase()) &&\n          person.identity.names[0].full\n            ?.toLowerCase()\n            .includes(lName.toLowerCase()),\n        familySearchId: person.identity.fs_ids[0],\n        bvid: '',\n      };\n    }\n  );\n};\n\n// Remove this function and use the one from the refresh-lib if the test gets hardcoded\nexport const formatShorthandDate = (\n  date: commonTypes.Date | undefined,\n  includeDay?: boolean\n) => {\n  if (!date) {\n    return;\n  }\n\n  if (date.parsed) {\n    const { parsed } = date;\n    if (parsed.year && parsed.month) {\n      return new Date(\n        parsed.year,\n        parsed.month - 1,\n        parsed.day || 1\n      ).toLocaleDateString('en-us', {\n        year: 'numeric',\n        month: includeDay ? '2-digit' : 'long',\n        day: includeDay ? 'numeric' : undefined,\n      });\n    }\n  }\n};\n", "import {\n  IconContainer,\n  StyledResultsTableNameColumn,\n  StyledResultsTableText,\n} from '../components';\nimport {\n  Stack,\n  DarkTooltip,\n  Box,\n  useTheme,\n  CustomIcons,\n} from '@ltvco/refresh-lib/theme';\nimport { titleize } from '@ltvco/refresh-lib/utils';\nimport { Person } from '@mui/icons-material';\nimport { removeNumberPattern } from '../utils';\nimport { UsableResidentData } from '../TableTypes/ResidentTable';\n\ninterface NameColumnProps {\n  name: string;\n  nameMatched: boolean;\n  id?: string | UsableResidentData;\n  goToReport: (bvid: any) => void;\n}\nexport const NameColumn = (props: NameColumnProps) => {\n  const { name, nameMatched, id, goToReport } = props;\n  const theme = useTheme();\n  return (\n    <StyledResultsTableNameColumn>\n      <IconContainer className=\"icon-container\">\n        <Person color=\"primary\" sx={{ fontSize: '16px', height: '16px' }} />\n      </IconContainer>\n      <StyledResultsTableText\n        className={id ? 'link' : ''}\n        onClick={() => id && goToReport(id)}\n      >\n        {name && removeNumberPattern(titleize((name as string).toLowerCase()))}\n      </StyledResultsTableText>\n      <Stack flexDirection=\"row\">\n        {nameMatched && (\n          <DarkTooltip\n            title=\"Name Matched\"\n            enterTouchDelay={0}\n            leaveTouchDelay={2000}\n          >\n            <Box>\n              <CustomIcons.Spellcheck\n                sx={() => ({\n                  height: '18px',\n                  width: '18px',\n                  color: theme.palette.primary.main,\n                })}\n              />\n            </Box>\n          </DarkTooltip>\n        )}\n      </Stack>\n    </StyledResultsTableNameColumn>\n  );\n};\n", "import {\n  ContactRowValue,\n  FamilySearchRowValue,\n  ObituaryRowValue,\n  PersonRowValue,\n  ResidentRowValue,\n  tableTypes,\n  TableTypes,\n} from 'routes/SearchPerson/ResultTables/types';\nimport {\n  StyledResultsTableContainer,\n  StyledResultsTableHead,\n  StyledResultsTableRow,\n  StyledResultsTableCell,\n} from '../components';\nimport { LoadingReports } from 'routes/Dashboard/RecentReports/components';\nimport { Stack } from '@ltvco/refresh-lib/theme';\nimport { useScreenSize } from '@ltvco/refresh-lib/utils';\ninterface TableContainerProps {\n  tableType: TableTypes;\n  results: any[];\n  headers: { id: string; label: string }[];\n  showRow: (\n    row: any\n  ) =>\n    | PersonRowValue\n    | FamilySearchRowValue\n    | ObituaryRowValue\n    | ContactRowValue\n    | ResidentRowValue;\n  goToReport?: (id: any) => void;\n}\n\nexport const TableContainer = ({\n  tableType,\n  results,\n  headers,\n  showRow,\n  goToReport,\n}: TableContainerProps) => {\n  const { isDesktop } = useScreenSize();\n  return (\n    <StyledResultsTableContainer id=\"tableContainer\">\n      <Stack>\n        <StyledResultsTableHead className=\"sticky-header\">\n          <StyledResultsTableRow className=\"table-header\">\n            {headers?.map((header) => (\n              <StyledResultsTableCell className=\"table-header\" key={header.id}>\n                {header.label}\n              </StyledResultsTableCell>\n            ))}\n          </StyledResultsTableRow>\n        </StyledResultsTableHead>\n        <Stack>\n          {results && results.length > 0 ? (\n            results.map((row) => {\n              const rowValue = showRow(row);\n              const id = rowValue?.id ?? crypto.randomUUID();\n              return (\n                <StyledResultsTableRow key={id}>\n                  {headers.map((header) => {\n                    const value = rowValue[header.id as keyof typeof rowValue];\n                    const isLink =\n                      (header.id === 'relatives' &&\n                        tableType === tableTypes.PERSON) ||\n                      (header.id === 'companies' &&\n                        tableType === tableTypes.PROFESSIONAL) ||\n                      header.id === 'name';\n                    return (\n                      <StyledResultsTableCell\n                        key={`${id}-${header.id}`}\n                        sx={{ cursor: !isLink ? 'pointer' : '' }}\n                        onClick={() => {\n                          if (goToReport && !isLink)\n                            goToReport(rowValue?.id ?? '');\n                        }}\n                      >\n                        {value}\n                      </StyledResultsTableCell>\n                    );\n                  })}\n                </StyledResultsTableRow>\n              );\n            })\n          ) : (\n            <LoadingReports />\n          )}\n        </Stack>\n      </Stack>\n    </StyledResultsTableContainer>\n  );\n};\n", "import {\n  openReportInExistingTab,\n  openReportInNewTab,\n  type Record,\n} from '@ltvco/refresh-lib/v1';\nimport { useAppConstantsContext } from '@ltvco/refresh-lib/ctx';\nimport { useFeatureIsOn } from '@ltvco/refresh-lib/vendors';\nimport {\n  ListColumn,\n  ListInfo,\n  setValidListInfo,\n} from '../TableComponents/ListColumn';\nimport { AgeColumn } from '../TableComponents/AgeColumn';\nimport { NameColumn } from '../TableComponents/NameColumn';\nimport { personHeaders } from '../constants';\nimport { TableContainer } from '../TableComponents/TableContainer';\nimport {\n  PersonRowValue,\n  RelativeNotSerialized,\n  SearchType,\n  tableTypes,\n} from '../types';\nimport { useNavigate } from 'react-router-dom';\ninterface PersonTableProps {\n  results: Record[];\n}\n\nexport interface UsablePersonData {\n  name: string;\n  nameMatched: boolean;\n  bvid: string;\n  age: string;\n  birthInfo: string;\n  aliases: string[];\n  locations: string[];\n  relatives: string[];\n  relativesNotSerialized:\n    | RelativeNotSerialized\n    | RelativeNotSerialized[]\n    | ListInfo[];\n  validRelativesIds: string[];\n}\n\nexport const PersonTable = ({ results }: PersonTableProps) => {\n  const {\n    links: { baseUrl },\n    featureFlags: { shouldOpenReportInCurrentTab },\n  } = useAppConstantsContext();\n  const isInPartialAddressesVariation = useFeatureIsOn('OAR-1569');\n  const navigate = useNavigate();\n  const goToReport = (bvid: string) => {\n    const tabData = {\n      bvid: bvid || '',\n      searchType: 'person' as SearchType,\n      showPartialAddresses: isInPartialAddressesVariation,\n    };\n    if (isInPartialAddressesVariation) {\n      navigate(\n        `report/${tabData.searchType}?bvid=${\n          bvid || ''\n        }&showPartialAddresses=${isInPartialAddressesVariation}`\n      );\n      return;\n    }\n    if (shouldOpenReportInCurrentTab) {\n      openReportInExistingTab(tabData, baseUrl);\n    } else {\n      openReportInNewTab(tabData, baseUrl);\n    }\n  };\n\n  const data: UsablePersonData[] = results.map((person) => {\n    const personData = {\n      name: person?.name ?? '',\n      nameMatched: Boolean(person?.nameMatched),\n      bvid: person?.bvid ?? '',\n      age: person?.age ?? '',\n      birthInfo: person?.birthInfo ?? '',\n      aliases: person?.aliases ?? [],\n      locations: (person?.locations ?? []).filter(\n        (location): location is string => location !== undefined\n      ),\n      relatives: person?.relatives ?? [],\n      relativesNotSerialized: person?.relativesNotSerialized ?? [],\n      validRelativesIds: Array.isArray(person.relativesNotSerialized)\n        ? person.relativesNotSerialized\n            .map((relative) => relative.bvid)\n            .filter((bvid): bvid is string => bvid !== undefined)\n        : [],\n    };\n\n    return personData;\n  });\n\n  const showRow = (person: UsablePersonData): PersonRowValue => {\n    const columnFornName = (\n      <NameColumn\n        name={person.name}\n        nameMatched={person.nameMatched}\n        id={person.bvid}\n        goToReport={goToReport}\n      />\n    );\n    const columnForAge = (\n      <AgeColumn age={person.age} birthInfo={person.birthInfo} />\n    );\n    const columnForAliases = (\n      <ListColumn list={setValidListInfo(person.aliases)} />\n    );\n    const columnForLocations = (\n      <ListColumn list={setValidListInfo(person.locations)} />\n    );\n    const columnForRelatives = (\n      <ListColumn\n        list={setValidListInfo(person.relatives, person.validRelativesIds)}\n        goToReport={goToReport}\n      />\n    );\n\n    const rowValue = {\n      id: person.bvid,\n      name: columnFornName,\n      age: columnForAge,\n      aliases: columnForAliases,\n      locations: columnForLocations,\n      relatives: columnForRelatives,\n    };\n    return rowValue;\n  };\n  return (\n    <TableContainer\n      tableType={tableTypes.PERSON}\n      results={data}\n      showRow={showRow}\n      headers={personHeaders}\n      goToReport={goToReport}\n    />\n  );\n};\n", "import { PersonSearchNoResults, Record } from '@ltvco/refresh-lib/v1';\nimport { PersonCards } from '../Cards/PersonCards';\nimport { PersonCardLoading } from '../Loading/PersonCardLoading';\nimport { PersonTable } from '../ResultTables/TableTypes/PersonTable';\n\ninterface PersonResultsContainerProps {\n  results: Record[] | undefined;\n  isInTableView?: boolean;\n}\n\nexport function PersonResultsContainer({\n  results,\n  isInTableView,\n}: PersonResultsContainerProps) {\n  return !results ? (\n    <PersonCardLoading />\n  ) : results.length <= 0 ? (\n    <PersonSearchNoResults />\n  ) : isInTableView ? (\n    <PersonTable results={results} />\n  ) : (\n    <PersonCards searchPersonResult={results} />\n  );\n}\n", "import { Person } from '@mui/icons-material';\nimport { reportGetters } from '@ltvco/refresh-lib/v1';\nimport { BaseCard } from '../BaseCard';\nimport {\n  PersonIconWrapper,\n  NameTypography,\n  SecondaryTextTypography,\n} from '../common/components';\nimport { formatName, formatShorthandDate } from '../common/utils';\nimport { ObituaryCardData } from '../common/types';\nimport { constants } from 'appConstants';\nimport { useQueryParams } from 'utils/useQueryParams';\n\nexport function MobileObituaryCard({\n  id,\n  name,\n  dob,\n  dod,\n  city,\n  state,\n}: ObituaryCardData) {\n  const queryParams = useQueryParams();\n  const handleOpenObituaryReport = async () => {\n    queryParams.set('id', id || '');\n    const response = await reportGetters.obituary({ queryParams });\n    const permalink = response?.report?.permalink;\n    const windowObjectReference = window.open();\n\n    if (!permalink) {\n      if (windowObjectReference) {\n        windowObjectReference.close();\n      }\n\n      return;\n    }\n\n    // It's possible for the browser to block opening a new window, in which case windowObjectReference will be null.\n    // In that case, we just redirect the current window.\n    const windowTarget = windowObjectReference || window;\n    windowTarget.location.href = `${constants.links.baseUrl}/report/obituary?permalink=${permalink}`;\n  };\n\n  const formattedName = formatName(name || '');\n\n  return (\n    <BaseCard\n      name={name}\n      isExpandable={false}\n      onDetailsClick={handleOpenObituaryReport}\n      renderIcon={() => (\n        <PersonIconWrapper>\n          <Person color=\"primary\" fontSize=\"small\" />\n        </PersonIconWrapper>\n      )}\n      renderHeader={() => (\n        <>\n          <NameTypography variant=\"subtitle1\" fontWeight=\"bold\">\n            {formattedName}\n          </NameTypography>\n          <SecondaryTextTypography variant=\"body2\">\n            Born: {formatShorthandDate(dob) || '-'}\n          </SecondaryTextTypography>\n          <SecondaryTextTypography variant=\"body2\">\n            Death: {formatShorthandDate(dod, true) || '-'}\n          </SecondaryTextTypography>\n          {city && state && (\n            <SecondaryTextTypography variant=\"body2\">\n              {city}, {state}\n            </SecondaryTextTypography>\n          )}\n        </>\n      )}\n      footerText={formattedName}\n    />\n  );\n} ", "import React from 'react';\nimport { SerializedObituaryDetails } from '@ltvco/refresh-lib/v1';\nimport { ObituaryResultsCardv2 } from '@ltvco/refresh-lib/v2';\nimport { useSortedObitResults } from '@ltvco/refresh-lib/hooks';\nimport { useFeatureIsOn } from '@ltvco/refresh-lib/vendors';\nimport { useScreenSize } from '@ltvco/refresh-lib/utils';\nimport { MobileObituaryCard as MobileObituaryCardVariation1 } from './NewCardsDesignVariation1/ObituaryCards/MobileObituaryCard';\ninterface ObituaryResultsCardProps {\n  searchObituaryResult: SerializedObituaryDetails;\n  searchObituaryQuery: any;\n}\n\nexport const ObituaryCards = ({\n  searchObituaryResult,\n  searchObituaryQuery,\n}: ObituaryResultsCardProps) => {\n  const { isMobile } = useScreenSize();\n  const isInStreamlinedTestVariant = useFeatureIsOn('prop-2958');\n  const isInMobileAndIsInStreamlinedTestVariant =\n    isMobile && isInStreamlinedTestVariant;\n\n  const sortedObits = useSortedObitResults(\n    searchObituaryResult,\n    searchObituaryQuery\n  );\n\n  return (\n    <>\n      {sortedObits.map((obituary: any, index: number) => {\n        if (isInMobileAndIsInStreamlinedTestVariant) {\n          return (\n            <React.Fragment key={index}>\n              <MobileObituaryCardVariation1 {...obituary} />\n            </React.Fragment>\n          );\n        }\n\n        return (\n          <React.Fragment key={index}>\n            <ObituaryResultsCardv2 obituaryData={obituary} />\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n};\n", "import { useSortedObitResults } from '@ltvco/refresh-lib/hooks';\nimport { SerializedObituaryDetails } from '@ltvco/refresh-lib/v1';\nimport { reportGetters } from '@ltvco/refresh-lib/v1';\nimport {\n  ObituaryRowValue,\n  tableTypes,\n} from 'routes/SearchPerson/ResultTables/types';\nimport { NameColumn } from '../TableComponents/NameColumn';\nimport { ListColumn, setValidListInfo } from '../TableComponents/ListColumn';\nimport { titleize } from '@ltvco/refresh-lib/utils';\nimport { TableContainer } from '../TableComponents/TableContainer';\nimport { obituaryHeaders } from '../constants';\nimport { constants } from 'appConstants';\nimport { useQueryParams } from 'utils/useQueryParams';\nimport { formatShorthandDate } from '../utils';\n\ninterface ObituaryTableProps {\n  searchObituaryResult: SerializedObituaryDetails;\n  searchObituaryQuery: any;\n}\nexport interface UsableObituaryData {\n  name: string;\n  id: string;\n  locations: string;\n  dateOfBirth: string;\n  dateOfDeath: string;\n}\nexport const ObituaryTable = ({\n  searchObituaryQuery,\n  searchObituaryResult,\n}: ObituaryTableProps) => {\n  const sortedObits = useSortedObitResults(\n    searchObituaryResult,\n    searchObituaryQuery\n  );\n\n  const queryParams = useQueryParams();\n  const goToObituaryReport = async (id: string) => {\n    queryParams.set('id', id || '');\n    const response = await reportGetters.obituary({ queryParams });\n    const permalink = response?.report?.permalink;\n    const windowObjectReference = window.open();\n\n    if (!permalink) {\n      if (windowObjectReference) {\n        windowObjectReference.close();\n      }\n\n      return;\n    }\n    const windowTarget = windowObjectReference || window;\n    windowTarget.location.href = `${constants.links.baseUrl}/report/obituary?permalink=${permalink}`;\n  };\n\n  const data: UsableObituaryData[] = sortedObits.map((person) => {\n    const { name, dob, dod, id } = person;\n    const obituaryData = {\n      name: name ?? '',\n      id: id ?? '',\n      locations: `${\n        (person.city ?? '') +\n        (person.city && person.state ? ', ' : '') +\n        (person?.state ?? '')\n      }`,\n      dateOfBirth: dob ? formatShorthandDate(dob) ?? '' : '',\n      dateOfDeath: dod ? formatShorthandDate(dod, true) ?? '' : '',\n    };\n\n    return obituaryData;\n  });\n\n  const showRow = (person: UsableObituaryData): ObituaryRowValue => {\n    const columnFornName = (\n      <NameColumn\n        name={titleize((person.name as string).toLowerCase())}\n        nameMatched={false}\n        id={person.id ?? ''}\n        goToReport={goToObituaryReport}\n      />\n    );\n    const columnForLocations = (\n      <ListColumn list={setValidListInfo([person.locations])} />\n    );\n    const rowValue = {\n      id: person.id,\n      name: columnFornName,\n      locations: columnForLocations,\n      born: person.dateOfBirth,\n      death: person.dateOfDeath || '',\n    };\n    return rowValue;\n  };\n  return (\n    <TableContainer\n      tableType={tableTypes.OBITUARY}\n      results={data}\n      showRow={showRow}\n      headers={obituaryHeaders}\n      goToReport={goToObituaryReport}\n    />\n  );\n};\n", "import {\n  PersonSearchNoResults,\n  SerializedObituaryDetails,\n} from '@ltvco/refresh-lib/v1';\nimport {\n  AdvancedSearchURLParams,\n  getObituarySearchParams,\n} from '@ltvco/refresh-lib/v2';\nimport { ObituaryCards } from '../Cards/ObituaryCards';\nimport { PersonCardLoading } from '../Loading/PersonCardLoading';\nimport { ObituaryTable } from '../ResultTables/TableTypes/ObituaryTable';\n\ninterface ObituaryResultsContainerProps {\n  searchData: AdvancedSearchURLParams;\n  results: SerializedObituaryDetails | undefined;\n  isInTableView?: boolean;\n}\n\nexport function ObituaryResultsContainer({\n  searchData,\n  results,\n  isInTableView,\n}: ObituaryResultsContainerProps) {\n  return !results ? (\n    <PersonCardLoading />\n  ) : results.length === 0 ? (\n    <PersonSearchNoResults />\n  ) : isInTableView ? (\n    <ObituaryTable\n      searchObituaryResult={results}\n      searchObituaryQuery={getObituarySearchParams(searchData)}\n    />\n  ) : (\n    <ObituaryCards\n      searchObituaryResult={results}\n      searchObituaryQuery={getObituarySearchParams(searchData)}\n    />\n  );\n}\n", "import { useSearchParams } from 'react-router-dom';\nimport { Stack, Text, Box } from '@ltvco/refresh-lib/theme';\nimport { RapidsInput, useReportRedirect } from '@ltvco/refresh-lib/v1';\nimport {\n  AdvancedSearchURLParams,\n  getSearchQueryParams,\n} from '@ltvco/refresh-lib/v2';\nimport { RapidsSearchData } from '../SearchFilter/interfaces';\nimport { constants } from 'appConstants';\n\nconst SearchLogo = function SearchLogo() {\n  const searchLogo = constants.images.searchLogo;\n\n  return (\n    <picture style={{ display: 'inline-block' }}>\n      <img src={searchLogo} alt=\"Search Logo\" width={40} height={40} />\n    </picture>\n  );\n};\n\nexport function ResidentNoResults() {\n  const [searchParams] = useSearchParams();\n  const { redirectToSearchPersonUrlv2 } = useReportRedirect();\n  const searchData: AdvancedSearchURLParams =\n    getSearchQueryParams(searchParams);\n\n  const handleSearchLocation = (propertyData: RapidsSearchData) => {\n    const { city, state, zipcode, street_line } = propertyData;\n    const data = {\n      ...searchData,\n      city: '',\n      state: '',\n      address: '',\n    };\n    let locationValue = '';\n    if (zipcode && state && city && street_line) {\n      locationValue = `${street_line} ${city}, ${state} ${zipcode}`;\n      data.location;\n      data.address = locationValue;\n      data.state = state;\n      data.city = city;\n    } else {\n      data.state = state;\n      data.city = city;\n    }\n\n    redirectToSearchPersonUrlv2(data);\n  };\n\n  return (\n    <Stack\n      spacing={2}\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      textAlign=\"center\"\n    >\n      <SearchLogo />\n\n      <Text variant=\"h5\" fontWeight={400} display=\"inline-block\">\n        No results found try removing filters or try searching again\n      </Text>\n      <Box width={'75%'}>\n        <RapidsInput\n          parentFormSubmitHandler={handleSearchLocation}\n          includeCounties\n          updateEmptyOptions\n          inputOptions={{\n            placeholder: 'City, County, or State',\n            hideSearchButton: true,\n            hideInputLabel: true,\n            customStyles: {\n              width: '100%',\n              '.MuiGrid-root': { width: '100%' },\n              '.MuiStack-root': { display: 'none' },\n            },\n          }}\n        />\n      </Box>\n    </Stack>\n  );\n}\n", "import { Person } from '@mui/icons-material';\nimport { Text } from '@ltvco/refresh-lib/theme';\nimport { openReportInNewTab } from '@ltvco/refresh-lib/v1';\nimport { BaseCard } from '../BaseCard';\nimport {\n  PersonIconWrapper,\n  InfoSection,\n  NameTypography,\n  SecondaryTextTypography,\n  SecondaryTextSubtitleTypography,\n  CustomList,\n  PhonesList,\n} from '../common/components';\nimport { formatName } from '../common/utils';\nimport { ResidentCardData } from '../common/types';\nimport { formatPhone, getDatesSeen, nameize } from '@ltvco/refresh-lib/utils';\nimport { constants } from 'appConstants';\n\nexport function MobileResidentCard({\n  id,\n  addresses,\n  names,\n  phones,\n}: ResidentCardData) {\n  const handleOpenAddressReport = () => {\n    openReportInNewTab(\n      { bvid: id || '', searchType: 'person' },\n      constants.links.baseUrl\n    );\n  };\n  const fullName = nameize(names[0]?.full) || '';\n  const formattedName = formatName(fullName || '');\n  const dateRange = getDatesSeen(addresses?.[0]) || '-';\n  const phone = phones?.[0]?.number || '';\n  const formattedPhone = formatPhone(phone) || '';\n  const formattedPhones =\n    phones?.slice(1).map((phone) => formatPhone(phone.number || '-')) || [];\n  const aliases = names.slice(1).map((name) => nameize(name.full)) || [];\n\n  return (\n    <BaseCard\n      name={fullName}\n      isExpandable={true}\n      onDetailsClick={handleOpenAddressReport}\n      renderIcon={() => (\n        <PersonIconWrapper>\n          <Person color=\"primary\" fontSize=\"small\" />\n        </PersonIconWrapper>\n      )}\n      renderHeader={() => (\n        <>\n          <NameTypography variant=\"subtitle1\" fontWeight=\"bold\">\n            {formattedName}\n          </NameTypography>\n          {dateRange && (\n            <SecondaryTextTypography variant=\"body2\">\n              Date Seen: {dateRange}\n            </SecondaryTextTypography>\n          )}\n          {formattedPhone && (\n            <SecondaryTextTypography variant=\"body2\">\n              {formattedPhone}\n            </SecondaryTextTypography>\n          )}\n        </>\n      )}\n      renderExpandedContent={() => (\n        <InfoSection>\n          <SecondaryTextSubtitleTypography variant=\"subtitle2\">\n            Aliases\n          </SecondaryTextSubtitleTypography>\n          {aliases.length > 0 ? (\n            <CustomList items={aliases} />\n          ) : (\n            <Text variant=\"body2\">-</Text>\n          )}\n\n          <SecondaryTextSubtitleTypography variant=\"subtitle2\">\n            Phone\n          </SecondaryTextSubtitleTypography>\n          {phones.length > 0 ? (\n            <PhonesList phones={formattedPhones} />\n          ) : (\n            <Text variant=\"body2\">-</Text>\n          )}\n        </InfoSection>\n      )}\n      footerText={formattedName}\n    />\n  );\n} ", "import React from 'react';\nimport { useFeatureIsOn } from '@ltvco/refresh-lib/vendors';\nimport {\n  PersonSearchNoResults,\n  SerializedPropertyReport,\n} from '@ltvco/refresh-lib/v1';\nimport { ResidentCardv2 } from '@ltvco/refresh-lib/v2';\nimport { useScreenSize } from '@ltvco/refresh-lib/utils';\nimport { MobileResidentCard as MobileResidentCardVariation1 } from './NewCardsDesignVariation1/ResidentCards/MobileResidentCard';\nimport { Stack } from '@ltvco/refresh-lib/theme';\n\ninterface ResidentCardProps {\n  searchResidentResult: SerializedPropertyReport;\n}\n\nexport const ResidentCards = ({ searchResidentResult }: ResidentCardProps) => {\n  const { isMobile } = useScreenSize();\n  const isInStreamlinedTestVariant = useFeatureIsOn('prop-2958');\n  const isInMobileAndIsInStreamlinedTestVariant =\n    isMobile && isInStreamlinedTestVariant;\n\n  if (!searchResidentResult) {\n    return <PersonSearchNoResults />;\n  }\n\n  const residents = searchResidentResult?.properties?.[0]?.residents || [];\n\n  if (isInMobileAndIsInStreamlinedTestVariant) {\n    return (\n      <Stack spacing={2}>\n        {residents.map((resident) => {\n          return (\n            <React.Fragment key={resident.id}>\n              <MobileResidentCardVariation1 {...resident} />\n            </React.Fragment>\n          );\n        })}\n      </Stack>\n    );\n  }\n\n  return <ResidentCardv2 residents={residents} />;\n};\n", "import { useAppConstantsContext } from '@ltvco/refresh-lib/ctx';\nimport { formatPhone, getDatesSeen, nameize } from '@ltvco/refresh-lib/utils';\nimport {\n  mapResidentsToResidentInfo,\n  openReportInExistingTab,\n  openReportInNewTab,\n  propertiesTypes,\n  SerializedPropertyReport,\n} from '@ltvco/refresh-lib/v1';\nimport { useFeatureIsOn } from '@ltvco/refresh-lib/vendors';\nimport { AgeColumn } from '../TableComponents/AgeColumn';\nimport { ListColumn, setValidListInfo } from '../TableComponents/ListColumn';\nimport { NameColumn } from '../TableComponents/NameColumn';\nimport { TableContainer } from '../TableComponents/TableContainer';\nimport { tableTypes, ResidentRowValue, SearchType } from '../types';\nimport { residentHeaders } from '../constants';\n\ninterface ResidentTableProps {\n  results: SerializedPropertyReport;\n}\n\nexport interface UsableResidentData {\n  bvid: string;\n  name: string;\n  age: string;\n  aliases: string[];\n  phones: string[];\n  dateSeen: string;\n  residentOriginalData: propertiesTypes.ResidentInfo;\n}\n\nexport const ResidentTable = ({ results }: ResidentTableProps) => {\n  const isInPartialAddressesVariation = useFeatureIsOn('OAR-1569');\n  const residentsList = results?.properties?.[0]?.residents || [];\n  const residentInfo = mapResidentsToResidentInfo(\n    residentsList,\n    isInPartialAddressesVariation\n  );\n  const {\n    links: { baseUrl },\n    featureFlags: { shouldOpenReportInCurrentTab },\n  } = useAppConstantsContext();\n\n  const goToReport = (bvid: string) => {\n    const tabData = {\n      bvid: bvid || '',\n      searchType: 'person' as SearchType,\n      showPartialAddresses: isInPartialAddressesVariation,\n    };\n    if (shouldOpenReportInCurrentTab) {\n      openReportInExistingTab(tabData, baseUrl);\n    } else {\n      openReportInNewTab(tabData, baseUrl);\n    }\n  };\n\n  const data: UsableResidentData[] = residentInfo.map((resident, index) => {\n    const rawResidentData = residentsList[index];\n    const phones = rawResidentData?.phones ?? [];\n    const residentData: UsableResidentData = {\n      bvid: resident?.bvId ?? '',\n      name: resident?.fullName ?? '',\n      age: resident?.personSearch?.age ?? '',\n      aliases: rawResidentData?.names\n        .slice(1)\n        .map((name) => nameize(name.full)),\n      phones:\n        phones.length > 0\n          ? phones.map((phone) =>\n              phone?.number ? formatPhone(phone.number) : ''\n            )\n          : [],\n      dateSeen: rawResidentData?.addresses\n        ? getDatesSeen(rawResidentData.addresses?.[0])\n        : '-',\n      residentOriginalData: resident,\n    };\n    return residentData;\n  });\n\n  const showRow = (resident: UsableResidentData): ResidentRowValue => {\n    const columnForName = (\n      <NameColumn\n        name={resident.name}\n        nameMatched={false}\n        id={resident.bvid}\n        goToReport={goToReport}\n      />\n    );\n    const columnForAge = <AgeColumn age={resident.age} />;\n    const columnForAliases = (\n      <ListColumn list={setValidListInfo(resident.aliases)} />\n    );\n    const columnForPhones = (\n      <ListColumn list={setValidListInfo(resident.phones)} />\n    );\n    const columnForDateSeen = (\n      <ListColumn list={setValidListInfo([resident.dateSeen])} />\n    );\n\n    const rowValue = {\n      id: resident.residentOriginalData.bvId,\n      name: columnForName,\n      age: columnForAge,\n      aliases: columnForAliases,\n      phones: columnForPhones,\n      dateSeen: columnForDateSeen,\n    };\n    return rowValue;\n  };\n  return (\n    <TableContainer\n      tableType={tableTypes.ADDRESS}\n      results={data}\n      headers={residentHeaders}\n      showRow={showRow}\n      goToReport={goToReport}\n    />\n  );\n};\n", "import { SerializedPropertyReport } from '@ltvco/refresh-lib/v1';\nimport { PersonCardLoading } from '../Loading/PersonCardLoading';\nimport { ResidentNoResults } from '../NoResults/ResidentNoResults';\nimport { ResidentCards } from '../Cards/ResidentCards';\nimport { ResidentTable } from '../ResultTables/TableTypes/ResidentTable';\n\ninterface ResidentResultsContainerProps {\n  results: SerializedPropertyReport | undefined;\n  isInTableView?: boolean;\n}\n\nexport function ResidentResultsContainer({\n  results,\n  isInTableView,\n}: ResidentResultsContainerProps) {\n  const count = results?.properties?.[0]?.residents?.length || 0;\n\n  return !results ? (\n    <PersonCardLoading />\n  ) : count === 0 ? (\n    <ResidentNoResults />\n  ) : isInTableView ? (\n    <ResidentTable results={results} />\n  ) : (\n    <ResidentCards searchResidentResult={results} />\n  );\n}\n", "import { Person } from '@mui/icons-material';\nimport { Text } from '@ltvco/refresh-lib/theme';\nimport { BaseCard } from '../BaseCard';\nimport {\n  PersonIconWrapper,\n  InfoSection,\n  NameTypography,\n  SecondaryTextTypography,\n  SecondaryTextSubtitleTypography,\n} from '../common/components';\nimport { formatName } from '../common/utils';\nimport { CompaniesList } from '../common/components';\nimport { ProfessionalCardData } from '../common/types';\n\nexport function MobileProfessionalCard({\n  id,\n  name,\n  title,\n  companies,\n  address,\n  onCompanyClick,\n  onViewReport,\n}: ProfessionalCardData) {\n  const handleOpenProfessionalReport = () => {\n    onViewReport(id);\n  };\n\n  const handleCompanyClick = (index: number) => {\n    const companyName =\n      typeof displayedCompanies[index] === 'string'\n        ? displayedCompanies[index]\n        : displayedCompanies[index].name;\n    onCompanyClick?.(companyName);\n  };\n\n  const formattedName = formatName(name || '');\n\n  let displayedCompanies = companies;\n\n  if (Array.isArray(displayedCompanies)) {\n    displayedCompanies = displayedCompanies.filter((company) => company.name);\n  }\n\n  // Extract first company name\n  const firstCompany =\n    displayedCompanies && displayedCompanies.length > 0\n      ? typeof displayedCompanies[0] === 'string'\n        ? displayedCompanies[0]\n        : displayedCompanies[0].name\n      : null;\n\n  return (\n    <BaseCard\n      name={name}\n      isExpandable={true}\n      onDetailsClick={handleOpenProfessionalReport}\n      renderIcon={() => (\n        <PersonIconWrapper>\n          <Person color=\"primary\" fontSize=\"small\" />\n        </PersonIconWrapper>\n      )}\n      renderHeader={() => (\n        <>\n          <NameTypography variant=\"subtitle1\" fontWeight=\"bold\">\n            {formattedName}\n          </NameTypography>\n          {title && (\n            <SecondaryTextTypography variant=\"body2\">\n              {title}\n            </SecondaryTextTypography>\n          )}\n          {firstCompany && (\n            <SecondaryTextTypography variant=\"body2\">\n              {firstCompany}\n            </SecondaryTextTypography>\n          )}\n          {address && (\n            <SecondaryTextTypography variant=\"body2\">\n              {address}\n            </SecondaryTextTypography>\n          )}\n        </>\n      )}\n      renderExpandedContent={() => (\n        <InfoSection>\n          <SecondaryTextSubtitleTypography variant=\"subtitle2\">\n            Companies\n          </SecondaryTextSubtitleTypography>\n          {companies && companies.length > 0 ? (\n            <CompaniesList\n              companies={displayedCompanies}\n              onClickHandler={handleCompanyClick}\n            />\n          ) : (\n            <Text variant=\"body2\">-</Text>\n          )}\n        </InfoSection>\n      )}\n      footerText={formattedName}\n    />\n  );\n} ", "import React from 'react';\nimport { Stack } from '@ltvco/refresh-lib/theme';\nimport { useContext } from 'react';\nimport { constants } from 'appConstants';\nimport {\n  type ContactCompany,\n  type ContactDetail,\n  NoContactResults,\n  type SerializedContactTeaserData,\n  openReportInNewTab,\n  useReportRedirect,\n} from '@ltvco/refresh-lib/v1';\nimport { ProfessionalCard } from '@ltvco/refresh-lib/v2';\nimport { AppConfig } from '@ltvco/refresh-lib/ctx';\nimport { useFeatureIsOn } from '@ltvco/refresh-lib/vendors';\nimport { useScreenSize } from '@ltvco/refresh-lib/utils';\nimport { MobileProfessionalCard as MobileProfessionalCardVariation1 } from './NewCardsDesignVariation1/ProfessionalCards/MobileProfessionalCard';\n\ninterface ContactCardProps {\n  searchContactResult: SerializedContactTeaserData;\n  fullName?: string;\n  company?: string;\n}\n\nexport const ContactCards = ({\n  searchContactResult,\n  fullName,\n  company,\n}: ContactCardProps) => {\n  const { contacts = [] } = searchContactResult;\n  const { routingUtils } = useContext(AppConfig);\n  const { redirectToSearchContactUrl, redirectToSearchContactUrlNewTab } =\n    useReportRedirect();\n  const { isMobile } = useScreenSize();\n  const isInStreamlinedTestVariant = useFeatureIsOn('prop-2958');\n  const isInMobileAndIsInStreamlinedTestVariant =\n    isMobile && isInStreamlinedTestVariant;\n\n  const getCompanyUrl = (company: string) =>\n    routingUtils.searchContactUrl({ company: company });\n\n  const handleCompanyClick = (\n    company: string | ContactCompany,\n    openInNewTab?: boolean\n  ) => {\n    let companyName = typeof company === 'string' ? company : company.name;\n\n    if (openInNewTab) {\n      redirectToSearchContactUrlNewTab({ company: companyName });\n    } else {\n      redirectToSearchContactUrl({ company: companyName });\n    }\n  };\n\n  const handleViewReport = (contactId: string) => {\n    openReportInNewTab(\n      {\n        contact_id: contactId,\n        searchType: 'contact',\n      },\n      constants.links.baseUrl\n    );\n  };\n\n  if (!contacts) {\n    return <NoContactResults />;\n  }\n\n  return (\n    <Stack spacing={2}>\n      {contacts.map((result: ContactDetail) => {\n        if (isInMobileAndIsInStreamlinedTestVariant) {\n          return (\n            <React.Fragment key={result.id}>\n              <MobileProfessionalCardVariation1\n                {...result}\n                onCompanyClick={(company) => handleCompanyClick(company, true)}\n                onViewReport={handleViewReport}\n              />\n            </React.Fragment>\n          );\n        }\n\n        return (\n          <ProfessionalCard\n            key={result.id}\n            {...result}\n            nameMatch={\n              result.name.toLowerCase() === (fullName || '').toLowerCase()\n            }\n            companyToMatch={company || ''}\n            onCompanyClick={(company) => handleCompanyClick(company, false)}\n            getCompanyUrl={getCompanyUrl}\n            onViewReport={handleViewReport}\n            subsection=\"\"\n          />\n        );\n      })}\n    </Stack>\n  );\n};\n", "import {\n  ContactCompany,\n  openReportInNewTab,\n  SerializedContactTeaserData,\n  useReportRedirect,\n} from '@ltvco/refresh-lib/v1';\nimport { constants } from 'appConstants';\nimport { ListColumn, setValidListInfo } from '../TableComponents/ListColumn';\nimport { NameColumn } from '../TableComponents/NameColumn';\nimport { ContactRowValue, tableTypes } from '../types';\nimport { contactHeaders } from '../constants';\nimport { TableContainer } from '../TableComponents/TableContainer';\n\ninterface ContactTableProps {\n  results: SerializedContactTeaserData;\n}\nexport interface UsableContactData {\n  name: string;\n  contactId: string;\n  job: string;\n  companies: string[];\n  locations: string[];\n}\n\nexport const ContactTable = ({ results }: ContactTableProps) => {\n  const { contacts = [] } = results;\n  const { redirectToSearchContactUrl } = useReportRedirect();\n\n  const handleCompanyClick = (company: string | ContactCompany) => {\n    if (typeof company === 'string') {\n      redirectToSearchContactUrl({ company });\n\n      return;\n    }\n\n    redirectToSearchContactUrl({ company: company.name });\n  };\n  const handleViewReport = (contactId: string) => {\n    openReportInNewTab(\n      {\n        contact_id: contactId,\n        searchType: 'contact',\n      },\n      constants.links.baseUrl\n    );\n  };\n\n  const data: UsableContactData[] = contacts.map((contact) => {\n    const contactData = {\n      name: contact?.name ?? '',\n      job: contact?.title ?? '',\n      contactId: contact?.id ?? '',\n      companies:\n        contact?.companies\n          ?.filter((company) => company.name)\n          ?.map((company) => company.name) || [],\n      locations: [contact?.address ?? ''],\n    };\n    return contactData;\n  });\n\n  const showRow = (person: UsableContactData): ContactRowValue => {\n    const columnFornName = (\n      <NameColumn\n        name={person.name}\n        id={person.contactId}\n        goToReport={handleViewReport}\n        nameMatched={false}\n      />\n    );\n    const columnForCompanies = (\n      <ListColumn\n        list={setValidListInfo(person.companies, person.companies)}\n        goToReport={handleCompanyClick}\n      />\n    );\n    const columnForLocations = (\n      <ListColumn list={setValidListInfo(person.locations)} />\n    );\n\n    const rowValue = {\n      id: person.contactId,\n      name: columnFornName,\n      job: person.job,\n      companies: columnForCompanies,\n      locations: columnForLocations,\n    };\n    return rowValue;\n  };\n\n  return (\n    <TableContainer\n      results={data}\n      showRow={showRow}\n      headers={contactHeaders}\n      tableType={tableTypes.PROFESSIONAL}\n      goToReport={handleViewReport}\n    />\n  );\n};\n", "import {\n  ContactResultSkeleton,\n  NoContactResults,\n  SerializedContactTeaserData,\n} from '@ltvco/refresh-lib/v1';\nimport { ContactCards } from '../Cards/ContactCards';\nimport { ContactTable } from '../ResultTables/TableTypes/ContactTable';\n\ninterface ContactResultsContainerProps {\n  results: SerializedContactTeaserData | undefined;\n  isInTableView?: boolean;\n}\n\nexport function ContactResultsContainer({\n  results,\n  isInTableView,\n}: ContactResultsContainerProps) {\n  return !results ? (\n    <ContactResultSkeleton />\n  ) : results.total <= 0 ? (\n    <NoContactResults />\n  ) : isInTableView ? (\n    <ContactTable results={results} />\n  ) : (\n    <ContactCards searchContactResult={results} />\n  );\n}\n", "import { Person } from '@mui/icons-material';\nimport { BaseCard } from '../BaseCard';\nimport {\n  PersonIconWrapper,\n  InfoSection,\n  NameTypography,\n  SecondaryTextTypography,\n  SecondaryTextSubtitleTypography,\n  CustomList,\n  RelativesList,\n} from '../common/components';\nimport {\n  formatName,\n  excludeAgeFromName,\n  getUniqueRelatives,\n} from '../common/utils';\nimport { GenealogyCardData } from '../common/types';\nimport { constants } from 'appConstants';\n\nexport function MobileGenealogyCard({\n  name,\n  birthInfo,\n  locations,\n  relatives,\n  onSuccess,\n  age,\n  familySearchId,\n}: GenealogyCardData) {\n  const { uniqueRelatives } = getUniqueRelatives(relatives, []);\n\n  const handleOpenMainGenealogyReport = () => {\n    onSuccess?.();\n\n    if (familySearchId) {\n      const windowObjectReference = window.open();\n      // It's possible for the browser to block opening a new window, in which case windowObjectReference will be null.\n      // In that case, we just redirect the current window.\n      const windowTarget = windowObjectReference || window;\n\n      windowTarget.location.href = `${constants.links.baseUrl}/report/ancestor?family_search_id=${familySearchId}`;\n    }\n  };\n\n  const mainLocation = locations?.[0];\n  const formattedName = formatName(name || '');\n\n  return (\n    <BaseCard\n      name={name}\n      isExpandable={true}\n      onDetailsClick={handleOpenMainGenealogyReport}\n      renderIcon={() => (\n        <PersonIconWrapper>\n          <Person color=\"primary\" fontSize=\"small\" />\n        </PersonIconWrapper>\n      )}\n      renderHeader={() => (\n        <>\n          <NameTypography variant=\"subtitle1\" fontWeight=\"bold\">\n            {formattedName}\n          </NameTypography>\n          <SecondaryTextTypography variant=\"body2\">\n            Born: {birthInfo?.trim() || '-'}\n          </SecondaryTextTypography>\n          {mainLocation && (\n            <SecondaryTextTypography variant=\"body2\">\n              {mainLocation}\n            </SecondaryTextTypography>\n          )}\n        </>\n      )}\n      renderExpandedContent={() => (\n        <InfoSection>\n          <SecondaryTextSubtitleTypography variant=\"subtitle2\">\n            Locations\n          </SecondaryTextSubtitleTypography>\n          {locations && locations.length > 0 ? (\n            <CustomList items={locations as string[]} />\n          ) : (\n            <SecondaryTextTypography variant=\"body2\">-</SecondaryTextTypography>\n          )}\n\n          <SecondaryTextSubtitleTypography variant=\"subtitle2\">\n            Relatives\n          </SecondaryTextSubtitleTypography>\n          {relatives && relatives.length > 0 ? (\n            <RelativesList uniqueRelatives={uniqueRelatives} />\n          ) : (\n            <SecondaryTextTypography variant=\"body2\">-</SecondaryTextTypography>\n          )}\n        </InfoSection>\n      )}\n      footerText={excludeAgeFromName(formattedName, age)}\n    />\n  );\n} ", "import { Stack, Text, Grid, Box } from '@ltvco/refresh-lib/theme';\nimport { titleize, useScreenSize } from '@ltvco/refresh-lib/utils';\nimport { useSearchParams } from 'react-router-dom';\nimport { Record } from '@ltvco/refresh-lib/v1';\nimport {\n  formattedFamilySearchData,\n  RawFamilySearchPersonResults,\n} from '@ltvco/refresh-lib/fmt';\nimport { useEffect, useState } from 'react';\nimport { constants } from 'appConstants';\nimport {\n  AdvancedSearchURLParams,\n  ConsolidatedSearchResultCard,\n} from '@ltvco/refresh-lib/v2';\nimport { useFeatureIsOn } from '@ltvco/refresh-lib/vendors';\nimport React from 'react';\nimport { MobileGenealogyCard as MobileGenealogyCardVariation1 } from './Cards/NewCardsDesignVariation1/GenealogyCards/MobileGenealogyCard';\n\ninterface FamilySearchResultsProps {\n  familySearchInfo: AdvancedSearchURLParams;\n  familySearchData: RawFamilySearchPersonResults;\n}\n\nexport const FamilySearchResults = ({\n  familySearchInfo,\n  familySearchData,\n}: FamilySearchResultsProps) => {\n  const [ip, setIp] = useState<string>('');\n  const [searchParams] = useSearchParams();\n  const { isMobile } = useScreenSize();\n  const isInStreamlinedTestVariant = useFeatureIsOn('prop-2958');\n  const isInMobileAndIsInStreamlinedTestVariant =\n    isMobile && isInStreamlinedTestVariant;\n\n  useEffect(() => {\n    document.title = 'Search - BeenVerified';\n  }, []);\n\n  useEffect(() => {\n    if (!constants.featureFlags.familySearchEnabled) return;\n    (async () => {\n      const response = await fetch('https://api.ipify.org?format=json');\n      const data = await response.json();\n\n      setIp(data.ip);\n    })();\n  }, []);\n\n  let personResults: Record[] = [];\n\n  let formattedFamily: any = [];\n\n  if (familySearchData)\n    formattedFamily = formattedFamilySearchData(\n      familySearchData,\n      familySearchInfo.fName,\n      familySearchInfo.lName\n    );\n  personResults = formattedFamily;\n\n  // Utils\n  const getFullName = () => {\n    const { fName, mName, lName } = familySearchInfo;\n\n    const nameData = [fName, mName, lName].filter(Boolean);\n    const fullName = nameData.join(' ');\n\n    return titleize(fullName.toLowerCase());\n  };\n\n  let obitRedirectMessage: string | null = null;\n\n  if (searchParams.get('redirected_from_obit')) {\n    obitRedirectMessage = `Looks like we don't have obituary search data for ${getFullName()}, but we have person search results for similar names`;\n  }\n\n  function title() {\n    if (obitRedirectMessage) {\n      return (\n        <Text variant=\"h3\" display={'inline'}>\n          {obitRedirectMessage}\n        </Text>\n      );\n    }\n  }\n\n  if (isInMobileAndIsInStreamlinedTestVariant) {\n    return (\n      <>\n        {personResults.map((person: Record, index: number) => {\n          return (\n            <React.Fragment key={index}>\n              <MobileGenealogyCardVariation1 {...person} />\n            </React.Fragment>\n          );\n        })}\n      </>\n    );\n  }\n\n  return (\n    <Stack sx={{ minHeight: 800, position: 'relative' }}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={12} sx={{ mt: { xs: 8.75, md: 0 } }}>\n          <Grid item xs={12}>\n            <Box\n              mb={{ xs: 2, md: 2 }}\n              ml={{ xs: 2, md: 0 }}\n              nonce={undefined}\n              onResize={undefined}\n              onResizeCapture={undefined}\n            >\n              {title()}\n            </Box>\n          </Grid>\n          {personResults.map((person: Record, index: number) => {\n            return (\n              <React.Fragment key={index}>\n                <ConsolidatedSearchResultCard\n                  {...person}\n                  ip={ip}\n                  ancestorButton={person.familySearchId ? true : false}\n                  textButtonProp={person.familySearchId ? 'View' : ''}\n                />\n              </React.Fragment>\n            );\n          })}\n        </Grid>\n      </Grid>\n    </Stack>\n  );\n};\n", "import { type Record } from '@ltvco/refresh-lib/v1';\nimport { useAppConstantsContext } from '@ltvco/refresh-lib/ctx';\nimport { ListColumn, setValidListInfo } from '../TableComponents/ListColumn';\nimport { AgeColumn } from '../TableComponents/AgeColumn';\nimport { NameColumn } from '../TableComponents/NameColumn';\nimport { RawFamilySearchPersonResults } from '@ltvco/refresh-lib/fmt';\nimport { AdvancedSearchURLParams } from '@ltvco/refresh-lib/v2';\nimport { familySearchHeaders } from '../constants';\nimport { useEffect, useState } from 'react';\nimport { formattedFamilySearchDataForTable } from '../utils';\nimport {\n  FamilySearchRowValue,\n  tableTypes,\n} from 'routes/SearchPerson/ResultTables/types';\nimport { TableContainer } from '../TableComponents/TableContainer';\n\ninterface FamilySearchTableProps {\n  familySearchInfo: AdvancedSearchURLParams;\n  familySearchData: RawFamilySearchPersonResults;\n}\n\nexport interface UsableFamilySearchData {\n  name: string;\n  nameMatched: boolean;\n  familySearchId: string;\n  age: string;\n  birthInfo: string;\n  locations: string[];\n  relatives: string[];\n}\n\nexport const FamilySearchTable = ({\n  familySearchData,\n  familySearchInfo,\n}: FamilySearchTableProps) => {\n  const [results, setResults] = useState<Record[]>([]);\n  const {\n    links: { baseUrl },\n  } = useAppConstantsContext();\n\n  const goToFamilySearchReport = (familySearchId: string): void => {\n    const windowObjectReference = window.open();\n    const windowTarget = windowObjectReference || window;\n    windowTarget.location.href = `${baseUrl}/report/ancestor?family_search_id=${familySearchId}`;\n  };\n\n  const data: UsableFamilySearchData[] = results.map((person) => {\n    const familySearchData = {\n      name: person?.name ?? '',\n      nameMatched: Boolean(person?.nameMatched),\n      familySearchId: person?.familySearchId ?? '',\n      bvid: person?.bvid ?? '',\n      age: person?.age ?? '',\n      birthInfo: person?.birthInfo ?? '',\n      locations: (person?.locations ?? []).filter(\n        (location): location is string => location !== undefined\n      ),\n      relatives: person?.relatives ?? [],\n    };\n\n    return familySearchData;\n  });\n\n  const showRow = (person: UsableFamilySearchData): FamilySearchRowValue => {\n    const columnFornName = (\n      <NameColumn\n        name={person.name}\n        nameMatched={person.nameMatched}\n        id={person.familySearchId}\n        goToReport={goToFamilySearchReport}\n      />\n    );\n    const columnForAge = (\n      <AgeColumn age={person.age} birthInfo={person.birthInfo} />\n    );\n    const columnForLocations = (\n      <ListColumn list={setValidListInfo(person.locations)} />\n    );\n    const columnForRelatives = (\n      <ListColumn\n        list={setValidListInfo(person?.relatives)}\n        goToReport={goToFamilySearchReport}\n      />\n    );\n\n    const rowValue = {\n      id: person.familySearchId,\n      name: columnFornName,\n      age: columnForAge,\n      locations: columnForLocations,\n      relatives: columnForRelatives,\n    };\n    return rowValue;\n  };\n\n  useEffect(() => {\n    if (familySearchData) {\n      const formattedFamily = formattedFamilySearchDataForTable(\n        familySearchData,\n        familySearchInfo.fName,\n        familySearchInfo.lName\n      );\n      setResults(formattedFamily);\n    }\n  }, [familySearchData, familySearchInfo]);\n  return (\n    <TableContainer\n      results={data}\n      showRow={showRow}\n      headers={familySearchHeaders}\n      tableType={tableTypes.GENEALOGY}\n      goToReport={goToFamilySearchReport}\n    />\n  );\n};\n", "import { RawFamilySearchPersonResults } from '@ltvco/refresh-lib/fmt';\nimport { PersonSearchNoResults } from '@ltvco/refresh-lib/v1';\nimport { AdvancedSearchURLParams } from '@ltvco/refresh-lib/v2';\nimport { FamilySearchResults } from '../FamilySearchResults';\nimport { PersonCardLoading } from '../Loading/PersonCardLoading';\nimport { FamilySearchTable } from '../ResultTables/TableTypes/FamilySearchTable';\n\ninterface FamilySearchResultsContainerProps {\n  searchData: AdvancedSearchURLParams;\n  results: RawFamilySearchPersonResults | undefined;\n  isInTabletView?: boolean;\n}\n\nexport function FamilySearchResultsContainer({\n  searchData,\n  results,\n  isInTabletView,\n}: FamilySearchResultsContainerProps) {\n  const counts = results?.meta.counts.options.people ?? 0;\n\n  return !results ? (\n    <PersonCardLoading />\n  ) : counts === 0 ? (\n    <PersonSearchNoResults />\n  ) : isInTabletView ? (\n    <FamilySearchTable\n      familySearchInfo={searchData}\n      familySearchData={results}\n    />\n  ) : (\n    <FamilySearchResults\n      familySearchInfo={searchData}\n      familySearchData={results}\n    />\n  );\n}\n", "import React from 'react';\nimport { Record, useSearchPerson } from '@ltvco/refresh-lib/v1';\nimport {\n  AdvancedSearchURLParams,\n  getPersonSearchParams,\n} from '@ltvco/refresh-lib/v2';\nimport { useFeatureIsOn } from '@ltvco/refresh-lib/vendors';\ninterface PersonFetcherProps {\n  searchData: AdvancedSearchURLParams;\n  setPersonResults: (results: Record[] | undefined) => void;\n}\n\nexport function PersonFetcher({\n  searchData,\n  setPersonResults,\n}: PersonFetcherProps) {\n  const isInPartialAddressesVariation = useFeatureIsOn('OAR-1569');\n  const updatedSearchData: AdvancedSearchURLParams = {\n    ...searchData,\n    ...(isInPartialAddressesVariation && { showPartialAddresses: true }),\n  };\n\n  const { data, isFetched, isError } = useSearchPerson({\n    searchPersonBy: 'name',\n    options: {\n      personSearchParams: getPersonSearchParams(updatedSearchData),\n      isOptout: false,\n    },\n  });\n\n  const result = data as Record[] | undefined;\n\n  if (isFetched && !isError) {\n    setPersonResults(result);\n  } else {\n    setPersonResults(undefined);\n  }\n\n  return <React.Fragment />;\n}\n", "import React from 'react';\nimport {\n  SerializedObituaryDetails,\n  useSearchObituary,\n} from '@ltvco/refresh-lib/v1';\nimport {\n  AdvancedSearchURLParams,\n  getObituarySearchParams,\n} from '@ltvco/refresh-lib/v2';\n\ninterface ObituaryFetcherProps {\n  searchData: AdvancedSearchURLParams;\n  setObituaryResults: (results: SerializedObituaryDetails | undefined) => void;\n}\n\nexport function ObituaryFetcher({\n  searchData,\n  setObituaryResults,\n}: ObituaryFetcherProps) {\n  const { data, isError, isFetched } = useSearchObituary({\n    obituarySearchParams: getObituarySearchParams(searchData),\n  });\n\n  const result = data as SerializedObituaryDetails | undefined;\n\n  if (isFetched && !isError) {\n    setObituaryResults(result);\n  } else {\n    setObituaryResults(undefined);\n  }\n  return <React.Fragment />;\n}\n", "import React, { useEffect, useState } from 'react';\nimport {\n  AdvancedSearchURLParams,\n  getAncestorSearchParams,\n} from '@ltvco/refresh-lib/v2';\nimport { RawFamilySearchPersonResults, useFamilySearch } from '@ltvco/refresh-lib/fmt';\n\ninterface FamilySearchFetcherProps {\n  searchData: AdvancedSearchURLParams;\n  setFamilySearchResults: (\n    results: RawFamilySearchPersonResults | undefined\n  ) => void;\n}\n\nexport function FamilySearchFetcher({\n  searchData,\n  setFamilySearchResults,\n}: FamilySearchFetcherProps) {\n  const [ip, setIp] = useState<string>('');\n\n  useEffect(() => {\n    (async () => {\n      const response = await fetch('https://api.ipify.org?format=json');\n      const data = await response.json();\n\n      setIp(data.ip);\n    })();\n  }, []);\n\n  const { data, isLoading, isError } = useFamilySearch(\n    ip,\n    getAncestorSearchParams(searchData),\n    !!ip\n  );\n\n  const result = data as RawFamilySearchPersonResults | undefined;\n\n  if (!isLoading && !isError) {\n    setFamilySearchResults(result);\n  } else {\n    setFamilySearchResults(undefined);\n  }\n\n  return <React.Fragment />;\n}\n", "import React, { useEffect, useState } from 'react';\nimport { AdvancedSearchURLParams } from '@ltvco/refresh-lib/v2';\nimport {\n  useNewYorkDeathIndex1957To1972,\n  useCaliforniaDeathIndex1940To1997,\n} from '@ltvco/refresh-lib/fmt';\nimport { DataCollectionRecord } from '@ltvco/refresh-lib/fmt';\nenum DeathIndexType {\n  NEW_YORK = 'NEW_YORK',\n  CALIFORNIA = 'CALIFORNIA',\n}\n\ninterface DeathIndexesFetcherProps {\n  searchData: AdvancedSearchURLParams;\n  setDeathIndexResults: (data: DataCollectionRecord[] | undefined) => void;\n}\n\nconst calculateAgeAtDeath = (\n  birthYearStr: string,\n  birthMonthStr: string,\n  deathYearStr: string,\n  deathMonthStr: string\n): number | null => {\n  const birthYear = parseInt(birthYearStr);\n  const birthMonth = parseInt(birthMonthStr);\n  const deathYear = parseInt(deathYearStr);\n  const deathMonth = parseInt(deathMonthStr);\n\n  if (\n    isNaN(birthYear) ||\n    isNaN(birthMonth) ||\n    isNaN(deathYear) ||\n    isNaN(deathMonth)\n  ) {\n    return null;\n  }\n\n  let age = deathYear - birthYear;\n\n  if (deathMonth < birthMonth) {\n    age -= 1;\n  }\n\n  return age;\n};\n\nconst parseDate = (deathYear: string | null, deathMonth: string | null) => {\n  if (!deathYear) return null;\n  if (!deathMonth) {\n    return {\n      year: parseInt(deathYear),\n      month: null,\n    };\n  }\n\n  return {\n    year: parseInt(deathYear),\n    month: parseInt(deathMonth),\n  };\n};\n\nexport const getDeathIndexSearchParams = (\n  searchData: AdvancedSearchURLParams\n) => {\n  const { fName, lName, mName, deathYear, deathMonth, birthMonth, birthYear } =\n    searchData;\n\n  const deathDate = parseDate(deathYear, deathMonth);\n\n  const birthDate = parseDate(birthYear, birthMonth);\n\n  return {\n    first_name: fName,\n    last_name: lName,\n    middle_name: mName,\n    page_size: 100,\n    page_number: 0,\n    age_at_death: calculateAgeAtDeath(\n      birthYear as string,\n      birthMonth as string,\n      deathYear as string,\n      deathMonth as string\n    ),\n    death: {\n      date: deathDate,\n    },\n    birth: {\n      date: birthDate,\n    },\n  };\n};\n\n// This might need to be refactored later to make it more dynamic\n// We can use the existing `eventYear` and EventType.DEATH\n// from src/v2/shared/SearchForms/SearchPersonForms/AdvancedSearchForm/constants.ts (lib)\n// to get this information from the advanced search.\nconst MIN_DEATH_YEAR_NY = 1957;\nconst MAX_DEATH_YEAR_NY = 1972;\nconst MIN_DEATH_YEAR_CA = 1940;\nconst MAX_DEATH_YEAR_CA = 1997;\n\nexport function DeathIndexesFetcher({\n  searchData,\n  setDeathIndexResults,\n}: DeathIndexesFetcherProps) {\n  const [enableNYRequest, setEnableNYRequest] = useState(false);\n  const [enableCARequest, setEnableCARequest] = useState(false);\n\n  const {\n    data: nyData,\n    isError: nyError,\n    isFetching: nyFetching,\n  } = useNewYorkDeathIndex1957To1972(\n    enableNYRequest,\n    getDeathIndexSearchParams(searchData)\n  );\n\n  const {\n    data: caData,\n    isError: caError,\n    isFetching: caFetching,\n  } = useCaliforniaDeathIndex1940To1997(\n    enableCARequest,\n    getDeathIndexSearchParams(searchData)\n  );\n\n  // Reset request states when searchData changes\n  useEffect(() => {\n    setEnableNYRequest(false);\n    setEnableCARequest(false);\n  }, [searchData]);\n\n  const isInDeathYearRange = (\n    year: string,\n    indexType: DeathIndexType\n  ): boolean => {\n    const value = parseInt(year);\n    if (isNaN(value)) return false;\n\n    switch (indexType) {\n      case DeathIndexType.NEW_YORK:\n        return value >= MIN_DEATH_YEAR_NY && value <= MAX_DEATH_YEAR_NY;\n      case DeathIndexType.CALIFORNIA:\n        return value >= MIN_DEATH_YEAR_CA && value <= MAX_DEATH_YEAR_CA;\n      default:\n        return false;\n    }\n  };\n\n  const canExecuteNYRequest = (data: AdvancedSearchURLParams): boolean => {\n    const { deathYear, state } = data;\n\n    if (state && !['NY', 'All', ''].includes(state)) return false;\n    if (deathYear && !isInDeathYearRange(deathYear, DeathIndexType.NEW_YORK))\n      return false;\n\n    return true;\n  };\n\n  const canExecuteCARequest = (data: AdvancedSearchURLParams): boolean => {\n    const { deathYear, state } = data;\n\n    if (state && !['CA', 'All', ''].includes(state)) return false;\n    if (deathYear && !isInDeathYearRange(deathYear, DeathIndexType.CALIFORNIA))\n      return false;\n\n    return true;\n  };\n\n  useEffect(() => {\n    if (canExecuteNYRequest(searchData)) {\n      setEnableNYRequest(true);\n    }\n    if (canExecuteCARequest(searchData)) {\n      setEnableCARequest(true);\n    }\n  }, [searchData]);\n\n  useEffect(() => {\n    const results: DataCollectionRecord[] = [];\n    const enabledRequests = [\n      { enabled: enableNYRequest, data: nyData },\n      { enabled: enableCARequest, data: caData },\n      // We can add more requests here if needed\n    ].filter((request) => request.enabled);\n\n    if (enabledRequests.length > 0) {\n      // Calculate how many records to take from each source\n      const recordsPerSource = Math.floor(100 / enabledRequests.length);\n\n      // First pass: Take equal number of records from each source\n      const firstPassResults: DataCollectionRecord[] = [];\n      // Remaining records: Records that were not taken in the first pass\n      const remainingRecords: DataCollectionRecord[] = [];\n\n      enabledRequests.forEach((request) => {\n        if (request.data) {\n          // Take the calculated number of records\n          firstPassResults.push(...request.data.slice(0, recordsPerSource));\n          // Store remaining records for potential second pass\n          remainingRecords.push(...request.data.slice(recordsPerSource));\n        }\n      });\n\n      // Add first pass results\n      results.push(...firstPassResults);\n\n      // Second pass: if we have less than 100 records, fill with remaining records\n      if (results.length < 100 && remainingRecords.length > 0) {\n        const remainingSlots = 100 - results.length;\n        results.push(...remainingRecords.slice(0, remainingSlots));\n      }\n    }\n\n    if (results.length > 0) {\n      setDeathIndexResults(results);\n    } else if (nyError || caError || nyFetching || caFetching) {\n      setDeathIndexResults(undefined);\n    } else if (!enableNYRequest && !enableCARequest) {\n      setDeathIndexResults([]);\n    } else {\n      setDeathIndexResults([]);\n    }\n  }, [\n    nyData,\n    caData,\n    nyError,\n    caError,\n    setDeathIndexResults,\n    enableNYRequest,\n    enableCARequest,\n  ]);\n\n  return <React.Fragment />;\n}\n", "import React from 'react';\nimport {\n  SerializedContactTeaserData,\n  useSearchContact,\n} from '@ltvco/refresh-lib/v1';\nimport {\n  AdvancedSearchURLParams,\n  getContactSearchParams,\n} from '@ltvco/refresh-lib/v2';\n\ninterface ContactFetcherProps {\n  searchData: AdvancedSearchURLParams;\n  setContactResults: (results: SerializedContactTeaserData | undefined) => void;\n}\n\nexport function ContactFetcher({\n  searchData,\n  setContactResults,\n}: ContactFetcherProps) {\n  const { data, isError, isFetched } = useSearchContact({\n    contactSearchParams: getContactSearchParams(searchData),\n  });\n\n  const result = data as SerializedContactTeaserData | undefined;\n\n  if (isFetched && !isError) {\n    setContactResults(result);\n  } else {\n    setContactResults(undefined);\n  }\n\n  return <React.Fragment />;\n}\n", "import React from 'react';\nimport {\n  useSearchPerson,\n  SerializedPropertyReport,\n} from '@ltvco/refresh-lib/v1';\nimport {\n  AdvancedSearchURLParams,\n  getResidentSearchParams,\n} from '@ltvco/refresh-lib/v2';\n\ninterface ResidentFetcherProps {\n  searchData: AdvancedSearchURLParams;\n  setResidentResults: (results: SerializedPropertyReport | undefined) => void;\n}\nexport function ResidentFetcher({\n  searchData,\n  setResidentResults,\n}: ResidentFetcherProps) {\n  const { data, isFetched, isError } = useSearchPerson({\n    searchPersonBy: 'address',\n    options: {\n      personSearchParams: getResidentSearchParams(searchData),\n    },\n  });\n\n  const result = data as SerializedPropertyReport | undefined;\n\n  if (isFetched && !isError) {\n    setResidentResults(result);\n  } else {\n    setResidentResults(undefined);\n  }\n  return <React.Fragment />;\n}\n", "import { ArrowOutward } from '@mui/icons-material';\nimport { COLLECTION_RECORD_IDS, DataCollectionRecord, isRecordAlreadyAdded, useAncestryTree, formatFamilyTreeDataFromDataCollection } from '@ltvco/refresh-lib/fmt';\nimport { useReportMonitors } from '@ltvco/refresh-lib/v1';\nimport { useAppConstantsContext } from '@ltvco/refresh-lib/ctx';\nimport { Button } from '@ltvco/refresh-lib/theme';\nimport { useNavigate } from 'react-router-dom';\nimport { getClaimedReports } from 'utils/getClaimedReports';\nimport { BaseCard } from '../BaseCard';\nimport {\n  InfoSection,\n  NameTypography,\n  SecondaryTextTypography,\n  SecondaryTextSubtitleTypography,\n  CustomList,\n  IconWrapper,\n} from '../common/components';\nimport { formatName } from '../common/utils';\nimport { useEffect, useState } from 'react';\n\n\nexport function MobileDeathIndexCard({\n  deathIndexRecord,\n  collectionName,\n}: {\n  deathIndexRecord: DataCollectionRecord;\n  collectionName: string;\n}) {\n  const REPORT_TYPE = 'detailed_person_report';\n  const {\n    images: { familyTreeImages },\n    links: { baseUrl },\n  } = useAppConstantsContext();\n  const navigate = useNavigate();\n  \n  const firstName = deathIndexRecord.primaryPersonSelfNameGivenNames;\n  const middleName = deathIndexRecord.primaryPersonSelfNameMiddleNames;\n  const lastName = deathIndexRecord.primaryPersonSelfNameSurname;\n  const dod = deathIndexRecord.eventPrimaryDateFull;\n  const country = deathIndexRecord.eventPrimaryLocationLevel1;\n  const state = deathIndexRecord.eventPrimaryLocationLevel2;\n  const county = deathIndexRecord.eventPrimaryLocationLevel3;\n  const city = deathIndexRecord.eventPrimaryLocationLevel4;\n  const estimatedBirthYear = deathIndexRecord.estimatedBirthYear;\n  const estimatedBirthDate = deathIndexRecord.eventSecondaryDateFull;\n  const recordId = deathIndexRecord.recordId;\n  const fullName = [firstName, middleName, lastName].filter(Boolean).join(\" \");\n  const locations = [country, state, county, city].filter(Boolean);\n  const birthText = estimatedBirthYear || estimatedBirthDate;\n  const collectionId = COLLECTION_RECORD_IDS[deathIndexRecord.collectionRecordType];\n\n  const [claimedReportPermalink, setClaimedReportPermalink] = useState<string>('');\n  const { currentMonitors } = useReportMonitors();\n  \n  // Fetch family tree data\n  const { data: familyTreeData } = useAncestryTree({\n    permalink: claimedReportPermalink,\n    enabledOnStart: true,\n    logNotFoundErrorEnabled: false,\n  });\n\n  // Check if record is already in family tree\n  const recordInFamilyTree: boolean | undefined = !claimedReportPermalink\n    ? false\n    : familyTreeData?.indis\n    ? familyTreeData.indis.some((member) => {\n        if (member.placeholder) return false;\n        return isRecordAlreadyAdded(deathIndexRecord, member);\n      })\n    : undefined;\n\n  useEffect(() => {\n    if (currentMonitors) {\n      const claimedReports = getClaimedReports(currentMonitors, REPORT_TYPE);\n\n      if (claimedReports.length > 0) {\n        setClaimedReportPermalink(claimedReports[0]!.permalink);\n      }\n    }\n  }, [currentMonitors]);\n\n  const handleAddingToFamilyTree = () => {\n    const formattedData = formatFamilyTreeDataFromDataCollection(\n      deathIndexRecord,\n      collectionId,\n    );\n\n    localStorage.setItem(\n      \"familyTreeRelativeToAdd\",\n      JSON.stringify(formattedData),\n    );\n    \n    navigate(\"/family-tree\");\n  }\n\n  const handleOpenMainDeathIndexReport = () => {\n    const collectionId = COLLECTION_RECORD_IDS[deathIndexRecord.collectionRecordType];\n\n    if (recordId && collectionId) {\n      const windowObjectReference = window.open();\n      // It's possible for the browser to block opening a new window, in which case windowObjectReference will be null.\n      // In that case, we just redirect the current window.\n      const windowTarget = windowObjectReference || window;\n      \n      windowTarget.location.href = `${baseUrl}/collection/${collectionId}/record/${recordId}`;\n    }\n  };\n\n  const formatDateToMMDDYYYY = (dateStr: string): string => {\n    const [year, month, day] = dateStr.split(\"-\");\n    if (!year || !month || !day) return \"-\";\n  \n    return `${month.padStart(2, \"0\")}/${day.padStart(2, \"0\")}/${year}`;\n  }\n\n  const formattedName = formatName(fullName || '');\n\n  return (\n    <BaseCard\n      name={fullName}\n      isExpandable={true}\n      onDetailsClick={handleOpenMainDeathIndexReport}\n      renderIcon={() => (\n        <IconWrapper>\n          <img\n            src={familyTreeImages?.imgFamilyTreeDeathIndexIcon}\n            alt=\"Death Index\"\n            width={15}\n            height={15}\n          />\n        </IconWrapper>\n      )}\n      renderHeader={() => (\n        <>\n          <NameTypography variant=\"subtitle1\" fontWeight=\"bold\">\n            {formattedName}\n          </NameTypography>\n          {collectionName && (\n            <SecondaryTextTypography variant=\"body2\">\n              {collectionName}\n            </SecondaryTextTypography>\n          )}\n          <SecondaryTextTypography variant=\"body2\">\n            Born: {birthText || '-'}\n          </SecondaryTextTypography>\n          <SecondaryTextTypography variant=\"body2\">\n            Date of Death: {dod ? formatDateToMMDDYYYY(dod) : '-'}\n          </SecondaryTextTypography>\n        </>\n      )}\n      renderExpandedContent={() => (\n        <InfoSection>\n          <SecondaryTextSubtitleTypography variant=\"subtitle2\">\n            Locations\n          </SecondaryTextSubtitleTypography>\n          {locations && locations.length > 0 ? (\n            <CustomList items={locations as string[]} />\n          ) : (\n            <SecondaryTextTypography variant=\"body2\">-</SecondaryTextTypography>\n          )}\n          <Button\n            fullWidth\n            variant=\"outlined\"\n            onClick={handleAddingToFamilyTree}\n            color=\"primary\"\n            endIcon={<ArrowOutward />}\n            disabled={recordInFamilyTree}\n            sx={{ marginTop: 4 }}\n          >\n            {recordInFamilyTree ? \"Added to Family Tree\" : \"Add to Family Tree\"}\n          </Button>\n        </InfoSection>\n      )}\n      footerText={formattedName}\n    />\n  );\n} ", "import React from 'react';\nimport { DeathIndexResultsCard } from '@ltvco/refresh-lib/v2';\nimport { DataCollectionRecord } from '@ltvco/refresh-lib/fmt';\nimport { useFeatureIsOn } from '@ltvco/refresh-lib/vendors';\nimport { useScreenSize } from '@ltvco/refresh-lib/utils';\nimport { MobileDeathIndexCard as MobileDeathIndexCardVariation1 } from './NewCardsDesignVariation1/DeathIndexCards/MobileDeathIndexCard';\n\ninterface DeathIndexResultsCardProps {\n  records: DataCollectionRecord[];\n}\n\nexport const DeathIndexCards = ({ records }: DeathIndexResultsCardProps) => {\n  const { isMobile } = useScreenSize();\n  const isInStreamlinedTestVariant = useFeatureIsOn('prop-2958');\n  const isInMobileAndIsInStreamlinedTestVariant =\n    isMobile && isInStreamlinedTestVariant;\n  \n  return (\n    <>\n      {records.map((record: DataCollectionRecord, index: number) => {\n        let collectionName = '';\n\n        switch (record.collectionRecordType) {\n          case 'ny_1957_1972':\n            collectionName = 'New York Death Index 1957-1972';\n            break;\n          case 'ca_1940_1997':\n            collectionName = 'California Death Index 1940-1997';\n            break;\n        }\n\n        if (isInMobileAndIsInStreamlinedTestVariant) {\n          return (\n            <React.Fragment key={index}>\n              <MobileDeathIndexCardVariation1\n                deathIndexRecord={record}\n                collectionName={collectionName}\n              />\n            </React.Fragment>\n          );\n        }\n\n        return (\n          <React.Fragment key={index}>\n            <DeathIndexResultsCard\n              deathIndexRecord={record}\n              collectionName={collectionName}\n            />\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n};\n", "import { PersonSearchNoResults } from '@ltvco/refresh-lib/v1';\nimport { DataCollectionRecord } from '@ltvco/refresh-lib/fmt';\nimport { DeathIndexCards } from '../Cards/DeathIndexCards';\nimport { PersonCardLoading } from '../Loading/PersonCardLoading';\n\ninterface DeathIndexResultsContainerProps {\n  results: DataCollectionRecord[] | undefined;\n}\n\nexport function DeathIndexResultsContainer({\n  results,\n}: DeathIndexResultsContainerProps) {\n  return !results ? (\n    <PersonCardLoading />\n  ) : results.length === 0 ? (\n    <PersonSearchNoResults />\n  ) : (\n    <DeathIndexCards records={results} />\n  );\n}\n", "import {\n  AdvancedSearchURLParams,\n  CollectionTypeOptions,\n} from '@ltvco/refresh-lib/v2';\nimport { ConsolidatedFilterFormInfo } from './interfaces';\n\n/**\n * Parses the information from the `ConsolidatedFilterFormInfo` form into `AdvancedSearchURLParams`.\n * This is used to prepare the query parameters for redirection to the `SearchPersonResultsV2` page.\n *\n * @param info - The form data submitted by the user from the ConsolidatedFilterForm form.\n *\n * @returns `urlParams` - The parsed URL parameters ready for use in `redirectToSearchPersonUrlv2`\n *\n */\nexport function parseAdvancedSearchURLParams(\n  info: ConsolidatedFilterFormInfo\n): AdvancedSearchURLParams {\n  const {\n    fName,\n    mName,\n    lName,\n    location,\n    title,\n    company,\n    level,\n    industry,\n    company_size_max,\n    company_size_min,\n    birthMonth,\n    birthYear,\n    deathMonth,\n    deathYear,\n    country,\n    eventType,\n    eventMonth,\n    eventYear,\n    selectedSources,\n    advancedSearch,\n  } = info;\n\n  const isDeceased = deathYear.length > 0;\n\n  return {\n    fullName: [fName, mName, lName].filter(Boolean).join(' '),\n    fName,\n    mName,\n    lName,\n    title,\n    company,\n    level: level,\n    industry,\n    company_size_min,\n    company_size_max,\n    birthMonth,\n    birthYear,\n    deathMonth,\n    deathYear,\n    // We omit this information since ConsolidatedFilterForm doesn't have those fields\n    address: '',\n    city: '',\n    state: '',\n    age: '',\n    isDeceased,\n    location,\n    country,\n    eventType,\n    eventMonth,\n    eventYear,\n    advancedSearch,\n    source: Object.keys(selectedSources).filter((key) => selectedSources[key]),\n  };\n}\n\nconst parseFullName = (fullName: string) => {\n  const nameParts = fullName.trim().split(' ');\n  const fName = nameParts[0] || '';\n  const mName = nameParts.length === 3 ? nameParts[1] : '';\n  const lName = nameParts.length === 3 ? nameParts[2] : nameParts[1] || '';\n\n  return { fName, mName, lName };\n};\n\n/**\n * Converts `AdvancedSearchURLParams` into `ConsolidatedFilterFormInfo`.\n * This function is used to transform the parsed query parameters into the format required\n * to pre-populate the ConsolidatedFilterForm form.\n *\n * @param {AdvancedSearchURLParams} params - The parsed URL parameters from `getSearchQueryParams`.\n *\n * @returns {ConsolidatedFilterInfo} `info` - Information compatible with `ConsolidatedFilterForm` form.\n */\nexport function parseConsolidatedFilterFormInfo(\n  params: AdvancedSearchURLParams\n): ConsolidatedFilterFormInfo {\n  const {\n    fullName,\n    fName,\n    lName,\n    title,\n    company,\n    level,\n    industry,\n    company_size_min,\n    company_size_max,\n    birthMonth,\n    birthYear,\n    deathMonth,\n    deathYear,\n    mName,\n    age,\n    location,\n    country,\n    eventType,\n    eventMonth,\n    eventYear,\n    advancedSearch,\n    source,\n  } = params;\n\n  const info: ConsolidatedFilterFormInfo = {\n    fName,\n    mName,\n    lName,\n    title,\n    company: company || '',\n    level: level,\n    industry,\n    company_size_max,\n    company_size_min,\n    birthMonth: birthMonth || '',\n    birthYear: birthYear || '',\n    deathMonth: deathMonth || '',\n    deathYear: deathYear || '',\n    location,\n    country,\n    eventType,\n    eventMonth,\n    eventYear,\n    advancedSearch,\n    selectedSources: CollectionTypeOptions.reduce((acc, option) => {\n      acc[option.value] = advancedSearch ? source.includes(option.value) : true;\n      return acc;\n    }, {} as Record<string, boolean>),\n  };\n\n  const {\n    fName: parsedFullName,\n    mName: parsedMiddleName,\n    lName: parsedLastName,\n  } = parseFullName(fullName);\n\n  if (parsedFullName !== '' && fName === '') info.fName = parsedFullName;\n  if (parsedMiddleName !== '' && mName === '') info.mName = parsedMiddleName;\n  if (parsedLastName !== '' && lName === '') info.lName = parsedLastName;\n\n  // Age can only be present if it comes from Basic search form or any other form that contains\n  // an age field. Otherwise, it will be an empty string since it comes from a refine results process\n  // (which doesnt have an age field).\n  // So if we have an age field, we use it to calculate the birth year and prepopulate the ConsolidatedFilterForm form\n  if (age !== '') {\n    const currentYear = new Date().getFullYear();\n    info.birthYear = (currentYear - Number.parseInt(age)).toString();\n    info.birthMonth = '';\n  }\n\n  return info;\n}\n/**\n * Calcula la duración en milisegundos, segundos y minutos entre dos timestamps.\n * @param {number} start - Timestamp inicial (ms)\n * @param {number} end - Timestamp final (ms)\n * @returns {{ ms: number, seconds: number, minutes: number }}\n */\nexport function getDurationBetweenTimestamps(start: number, end: number) {\n  const ms = end - start;\n  const seconds = ms / 1000;\n  const minutes = seconds / 60;\n  return { ms, seconds, minutes };\n}\n", "import { useContext, useEffect, useState } from 'react';\nimport { Stack, Text, useTheme, useMediaQuery } from '@ltvco/refresh-lib/theme';\nimport { AppConfig } from '@ltvco/refresh-lib/ctx';\nimport { useSearchParams } from 'react-router-dom';\nimport { PersonFilters } from './SearchFilter/PersonFiltersSidebar';\nimport {\n  ConsolidatedStickyContainer,\n  PersonFiltersContainer,\n  ResultsContainer,\n  SearchbotSizebleContainer,\n  SearchbotStickyContainer,\n  SearchResultsGrid,\n} from './components';\nimport SearchHeaderCarousel from './SearchFilter/SearchHeader/SearchHeaderCarousel';\nimport { SearchHeaderDesktop } from './SearchFilter/SearchHeader/SearchHeaderDesktop';\nimport {\n  Record,\n  SerializedContactTeaserData,\n  SerializedObituaryDetails,\n  SerializedPropertyReport,\n} from '@ltvco/refresh-lib/v1';\nimport {\n  AdvancedSearchURLParams,\n  CollectionType,\n  OptionType,\n  getSearchQueryParams,\n} from '@ltvco/refresh-lib/v2';\nimport { DataCollectionRecord } from '@ltvco/refresh-lib/fmt';\nimport { PersonResultsContainer } from './ResultsContainers/PersonResultsContainer';\nimport { ObituaryResultsContainer } from './ResultsContainers/ObituaryResultsContainer';\nimport { ResidentResultsContainer } from './ResultsContainers/ResidentResultsContainer';\nimport { ContactResultsContainer } from './ResultsContainers/ContactResultsContainer';\nimport { FamilySearchResultsContainer } from './ResultsContainers/FamilySearchResultsContainer';\nimport { PersonFetcher } from './Fetchers/PersonFetcher';\nimport { ObituaryFetcher } from './Fetchers/ObituaryFetcher';\nimport { FamilySearchFetcher } from './Fetchers/FamilySearchFetcher';\nimport { DeathIndexesFetcher } from './Fetchers/DeathIndexesFetcher';\nimport { ContactFetcher } from './Fetchers/ContactFetcher';\nimport { ResidentFetcher } from './Fetchers/ResidentFetcher';\nimport {\n  formattedFamilySearchData,\n  RawFamilySearchPersonResults,\n} from '@ltvco/refresh-lib/fmt';\nimport { capitalizeEachWord, useScreenSize } from '@ltvco/refresh-lib/utils';\nimport { viewTypes, ViewTypes } from './ResultTables/types';\nimport { useFeatureIsOn } from '@ltvco/refresh-lib/vendors';\nimport { SearchpalChatbotPersistentView } from 'components/SearchpalChatbot';\nimport { SearchAssistantPersistantIcon } from 'components/SearchpalChatbot/components/SearchAssistantPersistantIcon';\nimport { SearchAssistantMobileContainer } from 'components/SearchpalChatbot/components';\nimport { DeathIndexResultsContainer } from './ResultsContainers/DeathIndexResultsContainer';\nimport { getDurationBetweenTimestamps } from './SearchFilter/utils';\nimport { CHATBOT_INTERACTION_TYPES } from './SearchFilter/constants';\n\nexport function SearchPersonResultsv2() {\n  const theme = useTheme();\n  const { trackEventGA4 } = useContext(AppConfig);\n  const isDesktop = useMediaQuery(theme.breakpoints.up('md'));\n\n  const { isMobile, isMedium } = useScreenSize();\n  const [searchParams] = useSearchParams();\n  const [selectedOption, setSelectedOption] = useState(\n    CollectionType.PUBLIC_RECORDS\n  );\n  const [manualSwitch, setManualSwitch] = useState<boolean>(false);\n  const [isFilterCollapsed, setIsFilterCollapsed] = useState<boolean>(false);\n  const [parentSidebarCollapsed, setParentSidebarCollapsed] =\n    useState<boolean>(true);\n  const [isChatbotOpen, setIsChatbotOpen] = useState(false);\n  const [initialNotificationVisible, setInitialNotificationVisible] =\n    useState<boolean>(false);\n  const [personResults, setPersonResults] = useState<Record[] | undefined>(\n    undefined\n  );\n  const [obituaryResults, setObituaryResults] = useState<\n    SerializedObituaryDetails | undefined\n  >(undefined);\n  const [deathIndexResults, setDeathIndexResults] = useState<\n    DataCollectionRecord[] | undefined\n  >(undefined);\n  const [contactResults, setContactResults] = useState<\n    SerializedContactTeaserData | undefined\n  >(undefined);\n  const [residentResults, setResidentResults] = useState<\n    SerializedPropertyReport | undefined\n  >(undefined);\n  const [familySearchResults, setFamilySearchResults] = useState<\n    RawFamilySearchPersonResults | undefined\n  >(undefined);\n  const [currentView, setCurrentView] = useState<ViewTypes>(viewTypes.LIST);\n  const [chatbotInitialTime, setChatbotInitialTime] = useState<number | null>(\n    null\n  );\n\n  const isInMobileFiltersAndTabsVariation =\n    useFeatureIsOn('prop-2960') && isMobile;\n\n  const isInStreamlinedTestVariant = useFeatureIsOn('prop-2958');\n\n  const isInTableView =\n    isInStreamlinedTestVariant && isDesktop && currentView === viewTypes.TABLE;\n  const isInChatbotVariation = useFeatureIsOn('prop_2964');\n  const isInChatbotVariationDesktop = isDesktop && isInChatbotVariation;\n  const isInChatbotVariationMobile =\n    (isMobile || isMedium) && isInChatbotVariation;\n  const searchData: AdvancedSearchURLParams =\n    getSearchQueryParams(searchParams);\n  const { advancedSearch, source, fName, lName } = searchData;\n\n  const personResultsCount: number = personResults?.length ?? 0;\n  const obituaryResultsCount: number = obituaryResults?.length ?? 0;\n  const deathIndexResultsCount: number = deathIndexResults?.length ?? 0;\n  const contactResultsCount: number = contactResults?.total ?? 0;\n  const residentResultsCount: number =\n    residentResults?.properties?.[0]?.residents?.length ?? 0;\n  const familySearchResultsCount: number = familySearchResults\n    ? formattedFamilySearchData(familySearchResults, fName, lName).length\n    : 0;\n\n  if (!searchData.fullName) {\n    searchData.fullName = `${searchData.fName} ${searchData.lName}`;\n  }\n\n  const formatLength = (length: number | undefined): string => {\n    const threshold = 99;\n    if (length === undefined || length === null) {\n      return '';\n    }\n    return length > threshold ? '99+' : length.toString();\n  };\n  useEffect(() => {\n    document.title = 'Search - BeenVerified';\n  }, []);\n\n  const fetchPerson =\n    !advancedSearch || source.includes(CollectionType.PUBLIC_RECORDS);\n  const fetchObituary =\n    !advancedSearch || source.includes(CollectionType.OBITUARIES);\n  const fetchAncestor =\n    !advancedSearch || source.includes(CollectionType.FAMILY_SEARCH);\n  const fetchContact =\n    !advancedSearch || source.includes(CollectionType.CONTACTS);\n  const fetchResident =\n    !advancedSearch || source.includes(CollectionType.RESIDENTS);\n  const fetchDeathIndex =\n    !advancedSearch || source.includes(CollectionType.DEATH_INDEXES);\n\n  const options: OptionType[] = [\n    {\n      label: 'Public Records',\n      value: CollectionType.PUBLIC_RECORDS,\n      length: formatLength(personResultsCount),\n      visible: fetchPerson,\n    },\n    {\n      label: 'FamilySearch',\n      value: CollectionType.FAMILY_SEARCH,\n      length: formatLength(familySearchResultsCount),\n      visible: fetchAncestor,\n    },\n    {\n      label: 'Obituary',\n      value: CollectionType.OBITUARIES,\n      length: formatLength(obituaryResultsCount),\n      visible: fetchObituary,\n    },\n    {\n      label: 'Death Indexes',\n      value: CollectionType.DEATH_INDEXES,\n      length: formatLength(deathIndexResultsCount),\n      visible: fetchDeathIndex,\n    },\n    {\n      label: 'Contact',\n      value: CollectionType.CONTACTS,\n      length: formatLength(contactResultsCount),\n      visible: fetchContact,\n    },\n    {\n      label: 'Resident',\n      value: CollectionType.RESIDENTS,\n      length: formatLength(residentResultsCount),\n      visible: fetchResident,\n    },\n  ];\n\n  const trackSearchResultsInteraction = (params: { [key: string]: string }) => {\n    trackEventGA4({\n      event_name: 'search_results_interaction',\n      ...params,\n    });\n  };\n\n  const handleTabSwitch = (option: OptionType) => {\n    trackSearchResultsInteraction({\n      type: 'tab click',\n      section_name: option.label,\n    });\n    setSelectedOption(option.value);\n    setManualSwitch(true);\n  };\n\n  const handleChatbotInteraction = (type: string) => {\n    trackEventGA4({\n      event_name: 'search_results_interaction',\n      type: `${type} drawer`,\n    });\n    if (type === CHATBOT_INTERACTION_TYPES.OPEN) {\n      setChatbotInitialTime(Date.now());\n      setIsChatbotOpen(true);\n      setIsFilterCollapsed(true);\n    } else {\n      setIsChatbotOpen(false);\n\n      if (chatbotInitialTime) {\n        trackEventGA4({\n          event_name: 'search_results_interaction',\n          type: 'chatbot session',\n          value: getDurationBetweenTimestamps(\n            chatbotInitialTime,\n            Date.now()\n          ).ms.toString(),\n        });\n        setChatbotInitialTime(null);\n      }\n    }\n  };\n  useEffect(() => {\n    if (!manualSwitch && !isInMobileFiltersAndTabsVariation) {\n      const hasContactInfo =\n        searchData.title !== '' ||\n        searchData.company !== '' ||\n        searchData.industry !== '' ||\n        searchData.level?.some((level) => level !== '');\n      const hasObituaryInfo =\n        searchData.birthYear !== '' ||\n        searchData.birthMonth !== '' ||\n        searchData.deathYear !== '' ||\n        searchData.deathMonth !== '';\n      const hasResidentInfo = searchData.address !== '';\n\n      if (\n        hasContactInfo &&\n        (source.length === 0 || source.includes(CollectionType.CONTACTS))\n      ) {\n        setSelectedOption(CollectionType.CONTACTS);\n        return;\n      } else if (\n        hasObituaryInfo &&\n        (source.length === 0 || source.includes(CollectionType.OBITUARIES))\n      ) {\n        setSelectedOption(CollectionType.OBITUARIES);\n        return;\n      } else if (\n        hasResidentInfo &&\n        (source.length === 0 || source.includes(CollectionType.RESIDENTS))\n      ) {\n        setSelectedOption(CollectionType.RESIDENTS);\n        return;\n      }\n    }\n  }, [searchData, manualSwitch, selectedOption]);\n\n  useEffect(() => {\n    if (advancedSearch) {\n      setSelectedOption(source[0] as CollectionType);\n    }\n  }, [searchParams.get('source')]);\n\n  const fetchers = () => {\n    return (\n      <>\n        {fetchPerson && (\n          <PersonFetcher\n            setPersonResults={setPersonResults}\n            searchData={searchData}\n          />\n        )}\n        {fetchObituary && (\n          <ObituaryFetcher\n            setObituaryResults={setObituaryResults}\n            searchData={searchData}\n          />\n        )}\n        {fetchDeathIndex && (\n          <DeathIndexesFetcher\n            setDeathIndexResults={setDeathIndexResults}\n            searchData={searchData}\n          />\n        )}\n        {fetchAncestor && (\n          <FamilySearchFetcher\n            setFamilySearchResults={setFamilySearchResults}\n            searchData={searchData}\n          />\n        )}\n        {fetchContact && (\n          <ContactFetcher\n            setContactResults={setContactResults}\n            searchData={searchData}\n          />\n        )}\n        {fetchResident && (\n          <ResidentFetcher\n            setResidentResults={setResidentResults}\n            searchData={searchData}\n          />\n        )}\n      </>\n    );\n  };\n\n  const renderResults = () => {\n    switch (selectedOption) {\n      case CollectionType.FAMILY_SEARCH:\n        return (\n          <FamilySearchResultsContainer\n            results={familySearchResults}\n            searchData={searchData}\n            isInTabletView={isInTableView}\n          />\n        );\n      case CollectionType.CONTACTS:\n        return (\n          <ContactResultsContainer\n            results={contactResults}\n            isInTableView={isInTableView}\n          />\n        );\n      case CollectionType.OBITUARIES:\n        return (\n          <ObituaryResultsContainer\n            results={obituaryResults}\n            searchData={searchData}\n            isInTableView={isInTableView}\n          />\n        );\n      case CollectionType.RESIDENTS:\n        return (\n          <ResidentResultsContainer\n            results={residentResults}\n            isInTableView={isInTableView}\n          />\n        );\n      case CollectionType.PUBLIC_RECORDS:\n        return (\n          <PersonResultsContainer\n            results={personResults}\n            isInTableView={isInTableView}\n          />\n        );\n      case CollectionType.DEATH_INDEXES:\n        return <DeathIndexResultsContainer results={deathIndexResults} />;\n      default:\n        return null;\n    }\n  };\n\n  const toggleCurrentView = (newView: ViewTypes) => {\n    const section_name =\n      newView === viewTypes.TABLE ? 'table view' : 'card view';\n    trackSearchResultsInteraction({ type: 'toggle click', section_name });\n    setCurrentView(newView);\n  };\n\n  const capitalizeFullName = capitalizeEachWord(searchData.fullName);\n  const ShowHeaderTabs = () => {\n    if (isDesktop) {\n      return (\n        <SearchHeaderDesktop\n          options={options}\n          selectedOption={selectedOption}\n          setSelectedOption={handleTabSwitch}\n          searchData={searchData}\n          currentView={currentView}\n          setCurrentView={toggleCurrentView}\n          isFilterCollapsed={isFilterCollapsed}\n          setIsFilterCollapsed={toggleIsFilterCollapsed}\n          isChatbotOpen={isChatbotOpen}\n          setIsChatbotOpen={handleChatbotInteraction}\n          initialNotificationVisible={initialNotificationVisible}\n          setInitialNotificationVisible={setInitialNotificationVisible}\n        />\n      );\n    }\n    return (\n      <SearchHeaderCarousel\n        options={options}\n        selectedOption={selectedOption}\n        setSelectedOption={handleTabSwitch}\n        isInMobileFiltersAndTabsVariation={isInMobileFiltersAndTabsVariation}\n        setParentSidebarCollapsed={\n          isInMobileFiltersAndTabsVariation\n            ? setParentSidebarCollapsed\n            : undefined\n        }\n      />\n    );\n  };\n\n  const personFiltersContainerStyles = () => {\n    return {\n      overflow: 'hidden',\n      zIndex: 1,\n      maxWidth: isFilterCollapsed ? '0' : '400px',\n      minWidth: isFilterCollapsed ? '0' : '220px',\n      width: isFilterCollapsed ? '0' : '24%',\n      transition: 'all 0.3s ease-in-out',\n      marginRight: isFilterCollapsed ? '0' : '24px',\n      position: isDesktop ? 'sticky' : 'relative',\n      top: isDesktop ? 48 : 0,\n    };\n  };\n\n  const filterContainerStyles = () => {\n    let styles = { width: '100%', maxWidth: '100%', top: 42 };\n    if (isDesktop) {\n      if (isFilterCollapsed) {\n        return {\n          ...styles,\n          left: 1,\n          transform: 'translateX(-100%)',\n          transition: 'all 0.3s ease-in-out',\n          pointerEvents: 'none',\n          zIndex: 1,\n          opacity: 0,\n        };\n      }\n\n      return {\n        ...styles,\n        transform: 'translateX(0)',\n        opacity: 1,\n        position: 'sticky',\n        transition: 'all 0.3s ease-in-out',\n        pointerEvents: 'auto',\n        zIndex: 1,\n      };\n    }\n    return styles;\n  };\n\n  const toggleIsFilterCollapsed = (shouldCollapse: boolean) => {\n    const action = shouldCollapse ? 'collapse' : 'expand';\n    trackSearchResultsInteraction({ type: 'filter collapse', action });\n    setIsFilterCollapsed(shouldCollapse);\n  };\n\n  useEffect(() => {\n    if (isChatbotOpen && !isDesktop) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = '';\n      return () => {\n        document.body.style.overflow = '';\n      };\n    }\n  }, [isChatbotOpen, isDesktop]);\n\n  useEffect(() => {\n    if (!parentSidebarCollapsed || (!isFilterCollapsed && isChatbotOpen)) {\n      setIsChatbotOpen(false);\n    }\n  }, [parentSidebarCollapsed, isFilterCollapsed, isChatbotOpen]);\n\n  return (\n    <Stack\n      sx={{\n        minHeight: 800,\n        position: 'relative',\n        backgroundColor: theme.palette.background.paper,\n        flexDirection: 'row',\n      }}\n    >\n      <SearchResultsGrid>\n        <PersonFiltersContainer sx={personFiltersContainerStyles()}>\n          <ConsolidatedStickyContainer sx={filterContainerStyles()}>\n            <PersonFilters\n              advancedSearchUrlParams={searchData}\n              onCollapse={() => toggleIsFilterCollapsed(true)}\n              parentSidebarCollapsed={\n                isInMobileFiltersAndTabsVariation\n                  ? parentSidebarCollapsed\n                  : undefined\n              }\n              setParentSidebarCollapsed={\n                isInMobileFiltersAndTabsVariation\n                  ? setParentSidebarCollapsed\n                  : undefined\n              }\n            />\n          </ConsolidatedStickyContainer>\n        </PersonFiltersContainer>\n        <ResultsContainer\n          item\n          xs={12}\n          sx={{\n            mt: { xs: isInMobileFiltersAndTabsVariation ? 0 : 6.25, md: 0 },\n            width: '-webkit-fill-available',\n          }}\n        >\n          <ShowHeaderTabs />\n          {!isDesktop && (\n            <Stack\n              flexDirection=\"row\"\n              alignItems=\"center\"\n              mr={1.25}\n              mb={2.5}\n              pt={2.5}\n            >\n              <Text\n                variant=\"h3\"\n                sx={{\n                  fontWeight: 'normal',\n                  marginRight: '5px',\n                  marginBottom: '0',\n                }}\n              >\n                Results for:\n              </Text>\n              <Text variant=\"h3\" m={0}>\n                {capitalizeFullName}\n              </Text>\n            </Stack>\n          )}\n          {fetchers()}\n          {renderResults()}\n        </ResultsContainer>\n        {isInChatbotVariationDesktop && (\n          <SearchbotSizebleContainer\n            isChatbotOpen={isChatbotOpen}\n            theme={theme}\n          >\n            <SearchbotStickyContainer isChatbotOpen={isChatbotOpen}>\n              <SearchpalChatbotPersistentView\n                resultsCount={personResultsCount}\n                isOpen={isChatbotOpen}\n                setInitialNotificationVisible={setInitialNotificationVisible}\n                setChatbotOpen={handleChatbotInteraction}\n                isDrawer={true}\n              />\n            </SearchbotStickyContainer>\n          </SearchbotSizebleContainer>\n        )}\n      </SearchResultsGrid>\n      {isInChatbotVariationMobile && (\n        <SearchAssistantMobileContainer isChatbotOpen={isChatbotOpen}>\n          <SearchpalChatbotPersistentView\n            resultsCount={personResultsCount}\n            isOpen={isChatbotOpen}\n            setChatbotOpen={handleChatbotInteraction}\n            setInitialNotificationVisible={setInitialNotificationVisible}\n          />\n        </SearchAssistantMobileContainer>\n      )}\n      {!isChatbotOpen &&\n        parentSidebarCollapsed &&\n        isInChatbotVariationMobile && (\n          <SearchAssistantPersistantIcon\n            initialNotificationVisible={initialNotificationVisible}\n            setInitialNotificationVisible={setInitialNotificationVisible}\n            capitalizeFullName={capitalizeFullName}\n            setIsChatbotOpen={handleChatbotInteraction}\n          />\n        )}\n    </Stack>\n  );\n}\n", "import { SearchPersonResultsv2 } from './SearchPersonResultsv2';\n\nexport function SearchPersonResultsContainerv2() {\n  return <SearchPersonResultsv2 />;\n}\n", "type SearchDataValues = Record<string, string>;\n\nexport const formatListingsText = (\n  queryData: SearchDataValues,\n  searchType: string\n) => {\n  if (!queryData) return;\n\n  const resultsTextMapByResultType: SearchDataValues = {\n    pre_foreclosures: 'Pre-foreclosures',\n    for_sale: 'Homes For Sale',\n  };\n\n  const zip = queryData.zip5;\n  const city = queryData.city;\n  const state = queryData.state;\n  const lat = queryData.lat;\n  const long = queryData.long;\n\n  if (zip) {\n    return zip;\n  } else if (city && state) {\n    return `${city}, ${state}`;\n  } else if (lat && long) {\n    return 'Current Location';\n  } else {\n    return resultsTextMapByResultType[\n      searchType\n    ] as keyof typeof resultsTextMapByResultType;\n  }\n};\n\nexport const paginationResultsRangeText = (\n  currentPage: string,\n  perPage: number,\n  totalResults: number\n) => {\n  const page = currentPage ? Number(currentPage) : 1;\n  const start = (page - 1) * perPage + 1;\n  const end = start - 1 + perPage;\n  return `${start} - ${end > totalResults ? totalResults : end}`;\n};\n", "import { Stack, Drawer, Button, styled } from '@ltvco/refresh-lib/theme';\n\nexport const Main = styled('main', {\n  shouldForwardProp: (prop) => prop !== 'open',\n})<{\n  open?: boolean;\n}>(({ theme, open }) => ({\n  flexGrow: 1,\n  padding: theme.spacing(3, 2),\n  overflow: 'scroll',\n  transition: theme.transitions.create('margin', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  marginRight: 'calc(100% - 700px)',\n  ...(!open && {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: 0,\n  }),\n}));\n\nexport const StyledTopBar = styled(Stack)(({ theme }) => ({\n  position: 'sticky',\n  zIndex: 2,\n  height: '66px',\n  padding: theme.spacing(1.75, 2, 0),\n  background: theme.palette.background.paper,\n  border: '1px solid rgba(0, 0, 0, 0.12)',\n  boxShadow:\n    '0px 2px 1px -1px rgba(0, 0, 0, 0.20), 0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 1px 3px 0 rgba(0, 0, 0, 0.12)',\n}));\n\nexport const StyledDrawer = styled(Drawer)(() => ({\n  width: 'calc(100% - 700px)',\n  flexShrink: 0,\n  overflowY: 'scroll',\n  zIndex: 1,\n\n  '& .MuiDrawer-paper': {\n    width: 'calc(100% - 700px)',\n    position: 'absolute',\n  },\n}));\n\nexport const MobileMapButton = styled(Button)(({ theme }) => ({\n  zIndex: '2',\n  position: 'fixed',\n  bottom: '100px',\n  left: '50%',\n  transform: 'translateX(-50%)',\n  backgroundColor: theme.palette.background.paper,\n\n  '&:hover': {\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n", "import { useSearchParams } from 'react-router-dom';\nimport {\n  Grid,\n  Stack,\n  Divider,\n  Pagination,\n  StyledSwitch,\n  Text,\n} from '@ltvco/refresh-lib/theme';\nimport { formatListingsText, paginationResultsRangeText } from './utils';\nimport {\n  Main,\n  StyledDrawer,\n  StyledTopBar,\n  MobileMapButton,\n} from './components';\n\nimport { Fragment, useState } from 'react';\nimport {\n  DragToSearch,\n  ListingDataCard,\n  ListingDataTable,\n  ListingDetailsModal,\n  ListingPoints,\n  ListingResultsDataViewToggle,\n  ListingResultsFilters,\n  ListingsSortFilter,\n  MapboxMap,\n  NoListingsResults,\n  ParcelBoundaries,\n  RapidsListingsSearch,\n  SatelliteToggle,\n  SerializedListing,\n  SerializedListingsData,\n  SerializedPreforeclosure,\n  useAccountLists,\n  useSearchListings,\n  ZoomToSearch,\n} from '@ltvco/refresh-lib/v1';\nimport { useScreenSize } from '@ltvco/refresh-lib/utils';\nimport { List, Map } from '@mui/icons-material';\n\ntype searchTypes = 'for_sale' | 'pre_foreclosures' | 'rentals';\ntype marketCountsTypes = 'listings' | 'preforeclosures' | 'rentals';\n\nexport function SearchListingResults() {\n  const { isMobile, isDesktop } = useScreenSize();\n  const { data: lists = [] } = useAccountLists();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [open, setOpen] = useState(isDesktop);\n  const [isMapToggleOn, setIsMapToggleOn] = useState(isDesktop);\n  const [isTableView, setIsTableView] = useState(false);\n\n  const handleMapToggle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setOpen(!open);\n    setIsMapToggleOn(open);\n  };\n\n  const handleMobileMapClick: React.MouseEventHandler<\n    HTMLButtonElement\n  > = () => {\n    window.requestAnimationFrame(() => {\n      window.scrollTo(0, 0);\n    });\n    setOpen(!open);\n    setIsMapToggleOn(open);\n  };\n\n  const PER_PAGE = isMapToggleOn ? 40 : 20;\n  const PER_PAGE_STR = String(PER_PAGE);\n  // 'byram' is the name of the DD Plan which includes Listhub data\n  // to the listings endpoints response (WU - 2022/11/08).\n  const ddPlanName = 'byram';\n  const searchType = searchParams.get('search_type') || 'pre_foreclosures';\n  const minPrice = searchParams.get('min_price') || '';\n  const maxPrice = searchParams.get('max_price') || '';\n  const bedrooms = searchParams.get('bedrooms') || '';\n  const bathrooms = searchParams.get('bathrooms') || '';\n  const rentalsMinPrice = searchParams.get('rentals_min_price') || '';\n  const rentalsMaxPrice = searchParams.get('rentals_max_price') || '';\n  const rentalsBedrooms = searchParams.get('rentals_bedrooms') || '';\n  const rentalsBathrooms = searchParams.get('rentals_bathrooms') || '';\n  const sortListings = searchParams.get('sort_listings') || '';\n  const type = searchParams.get('type') || '';\n  const shouldDisplayFilters = searchType !== 'pre_foreclosures';\n  const shouldAllowSorting = searchType !== 'pre_foreclosures';\n\n  let searchData = {\n    dd_plan: ddPlanName,\n    rentals_limit: searchType === 'rentals' ? PER_PAGE_STR : '0',\n    pfc_limit: searchType === 'pre_foreclosures' ? PER_PAGE_STR : '0',\n    listings_limit:\n      searchType !== 'rentals' && searchType !== 'pre_foreclosures'\n        ? PER_PAGE_STR\n        : '0',\n    bathrooms,\n    bedrooms,\n    min_price: minPrice,\n    max_price: maxPrice,\n    rentals_min_price: rentalsMinPrice,\n    rentals_max_price: rentalsMaxPrice,\n    rentals_bedrooms: rentalsBedrooms,\n    rentals_bathrooms: rentalsBathrooms,\n    brand: searchParams.get('brand') || '',\n    city: searchParams.get('city') || '',\n    lat: searchParams.get('lat') || '',\n    listings_distance: searchParams.get('listings_distance') || '',\n    listings_page: searchParams.get('listings_page') || '',\n    long: searchParams.get('long') || '',\n    map_view: searchParams.get('map_view') || '',\n    max_lat: searchParams.get('max_lat') || '',\n    max_long: searchParams.get('max_long') || '',\n    min_lat: searchParams.get('min_lat') || '',\n    min_long: searchParams.get('min_long') || '',\n    page: searchParams.get('page') || '',\n    pfc_distance: searchParams.get('pfc_distance') || '',\n    pfc_page: searchParams.get('pfc_page') || '',\n    rentals_page: searchParams.get('rentals_page') || '',\n    search_type: searchType,\n    sort_listings: sortListings,\n    state: searchParams.get('state') || '',\n    type: searchParams.get('type') || '',\n    zip5: searchParams.get('zip5') || '',\n  };\n\n  let { data: searchListingsResult = [], isFetched } =\n    useSearchListings(searchData);\n\n  const marketAvailableBySearchType: Record<searchTypes, marketCountsTypes> = {\n    for_sale: 'listings',\n    pre_foreclosures: 'preforeclosures',\n    rentals: 'rentals',\n  };\n\n  const pageParamBySearchType: Record<searchTypes, string> = {\n    for_sale: 'listings_page',\n    pre_foreclosures: 'pfc_page',\n    rentals: 'rentals_page',\n  };\n\n  const searchValue = searchData.zip5\n    ? searchData.zip5\n    : `${searchData.city}, ${searchData.state}`;\n\n  const marketName: string =\n    marketAvailableBySearchType[(searchType as searchTypes) || 'for_sale'];\n  const totalResults =\n    (searchListingsResult as SerializedListingsData).listing_teaser?.meta\n      ?.available?.market?.[marketName as marketCountsTypes] || 0;\n  const numOfPagesInPagination = Math.ceil(totalResults / PER_PAGE);\n\n  const paginationCountText = `Shown ${paginationResultsRangeText(\n    searchData.page,\n    PER_PAGE,\n    totalResults\n  )} of ${totalResults}`;\n\n  const handlePageChange = (newPage: string) => {\n    const paramNameBySearchType =\n      pageParamBySearchType[(searchType as searchTypes) || 'for_sale'];\n\n    setSearchParams((searchParams) => {\n      searchParams.set('page', newPage);\n      searchParams.set(paramNameBySearchType, newPage);\n      return searchParams;\n    });\n  };\n\n  const determineListingData = (\n    data: SerializedListingsData,\n    searchType: string\n  ) => {\n    if (searchType === 'rentals') {\n      return data?.listing_teaser?.rentals;\n    }\n\n    if (searchType === 'pre_foreclosures') {\n      return data?.listing_teaser?.preforeclosures;\n    }\n\n    return data?.listing_teaser?.listings;\n  };\n\n  const listingData = determineListingData(\n    searchListingsResult as SerializedListingsData,\n    searchType\n  );\n\n  const renderDataCards = () => {\n    return listingData?.map(\n      (data: SerializedListing | SerializedPreforeclosure, index: number) => {\n        const typedData = data as SerializedListing;\n        return (\n          <Grid\n            item\n            xs={12}\n            sm={6}\n            md={open ? 6 : 4}\n            lg={open ? 6 : 3}\n            key={index}\n          >\n            {data.isPreforeclosure ? (\n              <ListingDataCard\n                lists={lists}\n                listingType={searchType}\n                resultData={data}\n              />\n            ) : (\n              <ListingDetailsModal\n                listingKey={typedData?.property?.listing_detail?.key || ''}\n              >\n                <ListingDataCard\n                  lists={lists}\n                  listingType={searchType || 'for_sale'}\n                  resultData={data}\n                />\n              </ListingDetailsModal>\n            )}\n          </Grid>\n        );\n      }\n    );\n  };\n\n  const mobileButtonIconAndText = () => {\n    const iconName = open ? 'List' : 'Map';\n    const Icon = open ? List : Map;\n\n    return (\n      <>\n        <Icon sx={(theme) => ({ marginRight: theme.spacing(0.5) })} />\n        {iconName}\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Stack\n        sx={(theme) => ({ backgroundColor: theme.palette.background.paper })}\n      >\n        {isDesktop && (\n          <>\n            <StyledTopBar\n              sx={{ top: '55px' }}\n              justifyContent=\"space-between\"\n              direction=\"row\"\n            >\n              <Stack direction=\"row\">\n                <RapidsListingsSearch searchType={searchType} />\n                {shouldDisplayFilters && (\n                  <ListingResultsFilters\n                    searchType={searchType}\n                    bedrooms={+bedrooms}\n                    bathrooms={+bathrooms}\n                    maxPrice={maxPrice}\n                    minPrice={minPrice}\n                    rentalsBedrooms={+rentalsBedrooms}\n                    rentalsBathrooms={+rentalsBathrooms}\n                    rentalsMinPrice={rentalsMinPrice}\n                    rentalsMaxPrice={rentalsMaxPrice}\n                    type={type}\n                    setSearchParams={setSearchParams}\n                  />\n                )}\n              </Stack>\n              <Stack alignItems=\"center\" direction=\"row\">\n                <Text>Map</Text>\n                <StyledSwitch checked={open} onChange={handleMapToggle} />\n              </Stack>\n            </StyledTopBar>\n            <Stack\n              sx={{\n                position: open ? 'relative' : '',\n                height: open ? 'calc(100vh - 125px)' : '',\n              }}\n            >\n              <Main open={open}>\n                {isFetched && (\n                  <Stack\n                    sx={(theme) => ({\n                      height: '100%',\n                      overflow: open ? 'scroll' : '',\n                      gap: theme.spacing(1.5),\n                    })}\n                  >\n                    {totalResults > 0 ? (\n                      <>\n                        <Stack direction=\"row\" justifyContent=\"space-between\">\n                          <Stack>\n                            <Stack direction=\"row\">\n                              <Text fontWeight={400} variant=\"h4\">\n                                Results for\n                              </Text>\n                              <Text\n                                variant=\"h4\"\n                                sx={{ display: 'inline-block' }}\n                              >\n                                &nbsp;\n                                {formatListingsText(searchData, searchType)}\n                              </Text>\n                            </Stack>\n                            <Stack direction=\"row\" alignItems=\"center\" gap={2}>\n                              <Text fontSize=\"14px\">{paginationCountText}</Text>\n                              {shouldAllowSorting && (\n                                <Fragment>\n                                  <Divider\n                                    orientation=\"vertical\"\n                                    sx={{ height: '24px' }}\n                                  />\n                                  <ListingsSortFilter\n                                    currentSortType={sortListings}\n                                    setSearchParams={setSearchParams}\n                                  />\n                                </Fragment>\n                              )}\n                            </Stack>\n                          </Stack>\n                          <ListingResultsDataViewToggle\n                            isTableView={isTableView}\n                            onViewChange={setIsTableView}\n                          />\n                        </Stack>\n                        {isTableView ? (\n                          <ListingDataTable\n                            listingType={searchType as searchTypes}\n                            listingData={listingData}\n                          />\n                        ) : (\n                          <Grid\n                            container\n                            rowSpacing={0.5}\n                            columnSpacing={2}\n                            px={open ? '4px' : '0'}\n                          >\n                            {renderDataCards()}\n                          </Grid>\n                        )}\n                        <Stack\n                          spacing={2}\n                          direction={'row'}\n                          sx={{ justifyContent: 'center' }}\n                        >\n                          {numOfPagesInPagination > 1 && (\n                            <Pagination\n                              page={\n                                searchData.page ? Number(searchData.page) : 1\n                              }\n                              count={numOfPagesInPagination}\n                              onChange={(_: any, page: number) =>\n                                handlePageChange(String(page))\n                              }\n                              variant=\"outlined\"\n                              shape=\"rounded\"\n                              sx={(theme) => ({\n                                '.MuiPaginationItem-root.Mui-selected': {\n                                  color: `${theme.palette.primary.contrastText}`,\n                                  backgroundColor: `${theme.palette.primary.main}`,\n                                },\n                              })}\n                            />\n                          )}\n                        </Stack>\n                      </>\n                    ) : (\n                      <NoListingsResults\n                        prevSearchValue={searchValue}\n                        searchType={searchType}\n                      />\n                    )}\n                  </Stack>\n                )}\n              </Main>\n              {open && (\n                <StyledDrawer variant=\"persistent\" anchor=\"right\" open={open}>\n                  <MapboxMap\n                    height=\"calc(100vh - 125px)\"\n                    zoomLevel={12}\n                    navigation={true}\n                  >\n                    {(map) => (\n                      <>\n                        <ListingPoints\n                          map={map}\n                          results={listingData || []}\n                          moveCenter={true}\n                          searchType={searchType}\n                        />\n                        <DragToSearch\n                          map={map}\n                          setSearchParams={setSearchParams}\n                        />\n                        <ZoomToSearch\n                          map={map}\n                          setSearchParams={setSearchParams}\n                        />\n                        <ParcelBoundaries map={map} toggle={true} />\n                        <SatelliteToggle map={map} autoSwitch={true} />\n                      </>\n                    )}\n                  </MapboxMap>\n                </StyledDrawer>\n              )}\n            </Stack>\n          </>\n        )}\n        {!isDesktop && (\n          <Stack sx={(theme) => ({ padding: open ? '0' : theme.spacing(2) })}>\n            {open ? (\n              <MapboxMap\n                height=\"calc(100vh - 123px)\"\n                zoomLevel={12}\n                navigation={true}\n              >\n                {(map) => (\n                  <>\n                    <ListingPoints\n                      map={map}\n                      results={listingData || []}\n                      moveCenter={true}\n                      searchType={searchType}\n                    />\n                    <DragToSearch map={map} setSearchParams={setSearchParams} />\n                    <ZoomToSearch map={map} setSearchParams={setSearchParams} />\n                    <ParcelBoundaries map={map} toggle={true} />\n                    <SatelliteToggle map={map} autoSwitch={true} />\n                  </>\n                )}\n              </MapboxMap>\n            ) : (\n              isFetched && (\n                <Stack sx={open ? { overflow: 'scroll' } : {}}>\n                  {totalResults > 0 ? (\n                    <>\n                      <Stack\n                        sx={(theme) => ({ marginBottom: theme.spacing(2.5) })}\n                      >\n                        <Stack>\n                          <Stack direction=\"row\">\n                            <Text variant=\"h4\" fontSize={20} fontWeight={400}>\n                              Results for\n                            </Text>\n                            <Text variant=\"h4\" sx={{ display: 'inline-block' }}>\n                              &nbsp;{formatListingsText(searchData, searchType)}\n                            </Text>\n                          </Stack>\n                          <Text fontSize=\"14px\">{paginationCountText}</Text>\n                        </Stack>\n                      </Stack>\n                      <Grid container spacing={2}>\n                        {renderDataCards()}\n                      </Grid>\n                      {numOfPagesInPagination > 1 && (\n                        <Stack\n                          spacing={2}\n                          direction={'row'}\n                          sx={{ justifyContent: 'center' }}\n                        >\n                          <Pagination\n                            page={searchData.page ? Number(searchData.page) : 1}\n                            count={numOfPagesInPagination}\n                            onChange={(_: any, page: number) =>\n                              handlePageChange(String(page))\n                            }\n                            variant=\"outlined\"\n                            shape=\"rounded\"\n                            className=\"pagination\"\n                            sx={(theme) => ({\n                              '.MuiPaginationItem-root.Mui-selected': {\n                                color: `${theme.palette.primary.contrastText}`,\n                                backgroundColor: `${theme.palette.primary.main}`,\n                              },\n                            })}\n                          />\n                        </Stack>\n                      )}\n                    </>\n                  ) : (\n                    <NoListingsResults\n                      prevSearchValue={searchValue}\n                      searchType={searchType}\n                    />\n                  )}\n                </Stack>\n              )\n            )}\n          </Stack>\n        )}\n      </Stack>\n      {!isDesktop && (\n        <MobileMapButton onClick={handleMobileMapClick} variant=\"outlined\">\n          {mobileButtonIconAndText()}\n        </MobileMapButton>\n      )}\n    </>\n  );\n}\n", "import { Reactivation as ReactivationComponent } from '@ltvco/refresh-lib/payments';\n\nexport function Reactivation() {\n  return (\n    <div>\n      <ReactivationComponent />\n    </div>\n  );\n}\n", "import { Grid, Avatar, Text, Button } from '@ltvco/refresh-lib/theme';\nimport notFound from '../images/img_404.svg';\nimport { useNavigate } from 'react-router-dom';\nimport { SidenavContainer } from 'components/sidenav/SidenavContainer';\nimport { goToLogin } from 'utils/goToLogin';\nimport { useSession } from '@ltvco/refresh-lib/v1';\n\nexport function NotFound() {\n  const navigate = useNavigate();\n  const {\n    session: { isAuthenticated },\n  } = useSession(); // should be replaced by the user_info object\n\n  function goToDashboard() {\n    navigate('/dashboard');\n  }\n\n  if (!isAuthenticated) {\n    goToLogin('https://www.beenverified.com');\n  }\n\n  return (\n    <SidenavContainer>\n      <Grid container spacing={3} textAlign={'center'} marginTop={8}>\n        <Grid item xs={12}>\n          <Avatar\n            src={notFound}\n            alt=\"404\"\n            sx={{ width: 88, height: 88, margin: 'auto' }}\n            variant=\"square\"\n          />\n          <Text variant=\"h2\" color={'primary'} fontSize={52} marginTop={2.5}>\n            404\n          </Text>\n          <Text variant=\"h3\" fontSize={24} marginTop={2.5}>\n            This page isn't available\n          </Text>\n          <Text width={{ xs: '100%', md: '30%' }} margin={'auto'}>\n            We searched high and low, but we couldn't find the page you're\n            looking for\n          </Text>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            sx={{ marginTop: 2.5 }}\n            onClick={goToDashboard}\n          >\n            Go to Dashboard\n          </Button>\n        </Grid>\n      </Grid>\n    </SidenavContainer>\n  );\n}\n", "import { AppConstants } from '@ltvco/refresh-lib/ctx';\nimport { Avatar, Text, Grid, Button, Link } from '@ltvco/refresh-lib/theme';\nimport warning from '../images/img_warning.svg';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { SidenavContainer } from 'components/sidenav/SidenavContainer';\nimport { useContext } from 'react';\nimport { useSession } from '@ltvco/refresh-lib/v1';\nimport { goToLogin } from 'utils/goToLogin';\n\nexport function ErrorPage() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    data: { supportEmail },\n  } = useContext(AppConstants);\n  const { isAuthenticated } = useSession().session;\n\n  function goToDashboard() {\n    navigate('/dashboard');\n  }\n\n  const Container = isAuthenticated ? SidenavContainer : Grid;\n  const navigateFunction = isAuthenticated\n    ? goToDashboard\n    : () => goToLogin('https://www.beenverified.com');\n  const navigateTo = isAuthenticated ? 'dashboard' : 'login';\n  const errorStatusCode = location?.state?.meta?.status || '';\n\n  return (\n    <Container>\n      <Grid container spacing={3} textAlign={'center'} marginTop={8}>\n        <Grid item xs={12}>\n          <Avatar\n            src={warning}\n            alt=\"error\"\n            sx={{ width: 95, height: 80, margin: 'auto' }}\n            variant=\"square\"\n          />\n          <Text variant=\"h2\" color={'primary'} fontSize={52} marginTop={2.5}>\n            {errorStatusCode} Whoops!\n          </Text>\n          <Text variant=\"h3\" fontSize={24} marginTop={2.5}>\n            Looks like something went wrong.\n          </Text>\n          <Text margin={'auto'}>\n            We apologize for the inconvenience; please contact{' '}\n            <Link\n              href={`mailto:${supportEmail}?subject=${errorStatusCode} Whoops Error`}\n            >\n              {supportEmail}\n            </Link>{' '}\n            if this problem persists and tell them you received a\n            {errorStatusCode ? '' : 'n'} {errorStatusCode} error.\n          </Text>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            sx={{ marginTop: 2.5 }}\n            onClick={navigateFunction}\n          >\n            Go to {navigateTo}\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n", "/*\n  Once we test and mature this code a little more and add the functionality to pull plans from the API,\n  we can evaluate what of this code should be made shared in the refresh-lib\n*/\nimport { type SubscriptionPlan } from '@ltvco/refresh-lib/v1';\nimport { costPerReport, savings } from '@ltvco/refresh-lib/payments';\n\nexport interface CurrentPlan {\n  title: string;\n  amount: number;\n  /** Renewal period in months */\n  renewalPeriod: number;\n  /** Report limit */\n  limit: number;\n  costPerReport?: number;\n}\n\nexport const planTitles: {\n  [key: number]: { title: string; description: string; premier?: boolean };\n} = {\n  25: {\n    title: 'Saver',\n    description: 'Save more per month by running fewer reports',\n  },\n  30: { title: 'Starter', description: 'Starting small and simple' },\n  100: { title: 'Starter', description: 'Starting small and simple' },\n  150: { title: 'Standard', description: 'Boost your search capacity' },\n  200: { title: 'Standard', description: 'Double your search capacity' },\n  300: { title: 'Premium', description: 'Your premium reports package' },\n  400: { title: 'Premium', description: 'Your premium reports package' },\n  500: {\n    title: 'Professional',\n    description: 'Take your business to the next level',\n  },\n  750: {\n    title: 'Professional',\n    description: 'Take your business to the next level',\n  },\n  1000: {\n    title: 'Professional',\n    description: 'Take your business to the next level',\n  },\n  1500: { title: 'Premier', description: 'Perfect for fast-tracking growth' },\n  2000: { title: 'Premier', description: 'Perfect for fast-tracking growth' },\n  2500: {\n    title: 'Premier',\n    description: 'Perfect for fast-tracking growth',\n    premier: true,\n  },\n  3000: {\n    title: 'Premier +',\n    description: 'Perfect for fast-tracking growth',\n  },\n  5000: {\n    title: 'Premier +',\n    description: 'Perfect for fast-tracking growth',\n  },\n  7500: {\n    title: 'Premier +',\n    description: 'Perfect for fast-tracking growth',\n  },\n  8500: {\n    title: 'Premier +',\n    description: 'Perfect for fast-tracking growth',\n  },\n  10000: {\n    title: 'Premier +',\n    description: 'Perfect for fast-tracking growth',\n  },\n  15000: {\n    title: 'Premier +',\n    description: 'Perfect for fast-tracking growth',\n  },\n  20000: {\n    title: 'Premier +',\n    description: 'Perfect for fast-tracking growth',\n  },\n};\n\nconst fallbackTitles: { [key: number]: { title: string } } = {\n  25: { title: 'Saver' },\n  100: { title: 'Lite User' },\n  200: { title: 'Lite User' },\n  400: { title: 'Plus User' },\n  2000: { title: 'Elite User' },\n};\n\nexport const customPlanTitle: {\n  title: string;\n  description: string;\n} = {\n  title: 'Premier +',\n  description: 'Perfect for fast-tracking growth',\n};\n\nconst mostPopularPlanLimit = 25;\n\nexport function getPlanTitleAndDescription(\n  planLimit: number,\n  isCustomPlan: boolean = false\n) {\n  if (isCustomPlan) {\n    return customPlanTitle;\n  }\n\n  return (\n    planTitles[planLimit] ||\n    fallbackTitles[planLimit] || { title: 'Power User' }\n  );\n}\n\n/** Returns the cost per report of the plan if it's not unlimited */\nexport function planCostPerReport(plan: {\n  amount: number;\n  renewalPeriod: number;\n  limit: number;\n}) {\n  if (plan.limit === -1) return;\n\n  return costPerReport(plan.amount, plan.renewalPeriod, plan.limit);\n}\n\n/** Returns the savings of the plan compared to the current plan */\nexport function planSavings(plan: SubscriptionPlan, currentPlan: CurrentPlan) {\n  if (currentPlan.limit === -1 || plan.monthly_report_limit === -1) return;\n\n  return savings(\n    currentPlan.amount,\n    currentPlan.renewalPeriod,\n    currentPlan.limit,\n    plan.amount / 100,\n    plan.renewal_period,\n    plan.monthly_report_limit\n  );\n}\n\nexport function getCustomPlan(\n  brandPlan: SubscriptionPlan,\n  currentPlan: CurrentPlan\n) {\n  return [mapPlan(brandPlan, currentPlan, false, true)];\n}\n/** Returns all the plans */\nexport function getPlans(\n  brandPlans: SubscriptionPlan[],\n  currentPlan: CurrentPlan,\n  isDownsellVariation: boolean\n) {\n  let filteredPlans: SubscriptionPlan[];\n\n  if (isDownsellVariation) {\n    filteredPlans = brandPlans.filter(\n      (plan) => plan.monthly_report_limit !== currentPlan.limit\n    );\n  } else {\n    filteredPlans = brandPlans.filter(\n      (plan) => plan.monthly_report_limit > currentPlan.limit\n    );\n  }\n\n  return filteredPlans\n    .map((plan) => mapPlan(plan, currentPlan, isDownsellVariation))\n    .reverse();\n}\n\nexport function mapPlan(\n  plan: SubscriptionPlan,\n  currentPlan: CurrentPlan,\n  isDownsellVariation: boolean,\n  isCustomPlan?: boolean\n) {\n  return {\n    key: plan.unique_key,\n    ...getPlanTitleAndDescription(plan.monthly_report_limit, isCustomPlan),\n    amount: plan.amount / 100,\n    limit: plan.monthly_report_limit,\n    renewalPeriod: plan.renewal_period,\n    renewalPeriodType: plan.renewal_period_type,\n    costPerReport: planCostPerReport({\n      amount: plan.amount / 100,\n      renewalPeriod: plan.renewal_period,\n      limit: plan.monthly_report_limit,\n    }),\n    savings: planSavings(plan, currentPlan),\n    mostPopular: isDownsellVariation\n      ? false\n      : mostPopularPlanLimit === plan.monthly_report_limit,\n  };\n}\n\nexport function getBillingFrequency(renewalPeriod: number) {\n  switch (renewalPeriod) {\n    case 1:\n      return 'monthly';\n    case 3:\n      return 'every 3 months';\n    case 12:\n      return 'annually';\n    default:\n      return 'N/A';\n  }\n}\n", "import { useFeatureIsOn } from '@ltvco/refresh-lib/vendors';\nimport { CircularProgress, Grid, styled } from '@ltvco/refresh-lib/theme';\nimport { useCustomPlanUpgrade } from '@ltvco/refresh-lib/hooks';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useLimitedPlanInfo } from 'utils/useLimitedPlanInfo';\nimport {\n  CurrentPlan,\n  getBillingFrequency,\n  getCustomPlan,\n  getPlanTitleAndDescription,\n  getPlans,\n  planCostPerReport,\n} from './plans';\nimport { useQueryParams } from 'utils/useQueryParams';\nimport { enqueueSnackbar, useAccount } from '@ltvco/refresh-lib/v1';\nimport {\n  filterActivePaymentMethod,\n  ProcessingSpinnerModal,\n  TosModal,\n  useGetPaymentMethod,\n  useGetPlans,\n  useProcessBraintree,\n  useProcessCard,\n  useProcessPayPal,\n  useSubmitLegal,\n} from '@ltvco/refresh-lib/payments';\nimport {\n  UpgradeFailureModal,\n  UpgradePlan,\n  UpgradeSuccessModal,\n  type Plan,\n} from '@ltvco/refresh-lib/payments';\nimport {\n  useGetPaymentType as getPaymentType,\n  PaymentsSelectionModal,\n  RadioPaymentsModal,\n} from '@ltvco/refresh-lib/payments';\n\nconst UpgradePlanContent = styled(Grid)(({ theme }) => ({\n  justifyContent: 'center',\n  backgroundColor: theme.palette.background.paper,\n  padding: theme.spacing(3.5, 2),\n  marginTop: 'max(0px,calc(40px - 1vw))',\n  paddingLeft: 0,\n  paddingRight: 0,\n}));\n\nenum State {\n  None,\n  SelectPayment,\n  AddPayment,\n  ProcessingPayment,\n  Success,\n  Error,\n}\n\ninterface UpgradePlanPageProps {\n  contactUsHandler: () => void;\n}\n\nexport const UpgradePlanPage = ({ contactUsHandler }: UpgradePlanPageProps) => {\n  const isInDownsellVariation = useFeatureIsOn('prop-2581');\n  const { refetch: refetchAccount } = useAccount(true);\n  const {\n    accountLoaded,\n    isStaff,\n    isLimitedUser,\n    isCancelledSubscription,\n    planAmount: amount,\n    reportLimit: limit,\n    renewalPeriod,\n  } = useLimitedPlanInfo();\n  const navigate = useNavigate();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [plans, setPlans] = useState<Plan[]>([]);\n  const [selectedPlan, setSelectedPlan] = useState<Plan | null>(null);\n\n  const [upgradeState, setUpgradeState] = useState(State.None);\n  const isState = (state: State) => upgradeState === state;\n\n  const customPlanId = useQueryParams().get('plan_id');\n  const brandPlans = useGetPlans();\n  const customPlanUpgrade = customPlanId\n    ? useCustomPlanUpgrade(customPlanId)\n    : null;\n  const title = isStaff ? 'Staff' : getPlanTitleAndDescription(limit).title;\n  const currentPlan: CurrentPlan = useMemo(() => {\n    return {\n      title,\n      amount,\n      renewalPeriod,\n      limit,\n      costPerReport: planCostPerReport({ amount, renewalPeriod, limit }),\n    };\n  }, [amount, limit, renewalPeriod, title]);\n  const customUpgradeOption =\n    customPlanUpgrade?.data?.subscription?.custom_upgrade_option;\n  const upgradePlans = brandPlans?.data?.subscription?.upgrade_options;\n\n  useEffect(() => {\n    if (!accountLoaded) return;\n\n    let selectedPlans;\n    if (customUpgradeOption) {\n      selectedPlans = getCustomPlan(customUpgradeOption, currentPlan);\n    } else if (upgradePlans) {\n      selectedPlans = getPlans(\n        upgradePlans,\n        currentPlan,\n        isInDownsellVariation\n      );\n    }\n    if (selectedPlans) {\n      setPlans(selectedPlans);\n    }\n    const timer = setTimeout(() => {\n      setIsLoading(false);\n    }, 500);\n\n    return () => clearTimeout(timer);\n  }, [accountLoaded, currentPlan, upgradePlans, customUpgradeOption]);\n\n  const showDefaultError = () => {\n    enqueueSnackbar(\n      'Something went wrong, please try again or contact customer service',\n      { variant: 'error' }\n    );\n  };\n\n  const onSelectPlan = (plan: Plan) => {\n    setSelectedPlan(plan);\n    setBillingFrecuency(getBillingFrequency(plan.renewalPeriod));\n    setBilledPrice(`$${plan.amount}`);\n    setOpenTosModal(true);\n  };\n\n  // TOS\n\n  const updateLegalQuery = useSubmitLegal();\n  const [openTosModal, setOpenTosModal] = useState(false);\n  const [processingPayment, setProcessingPayment] = useState<boolean>(false);\n  const [billingFrecuency, setBillingFrecuency] = useState('monthly');\n  const [billedPrice, setBilledPrice] = useState('');\n\n  const onCloseTos = () => setOpenTosModal(false);\n  const onAcceptTos = () => {\n    setProcessingPayment(true);\n    updateLegalQuery.mutate(undefined, {\n      onSuccess: () => upgradePlan(),\n      onError: () => showDefaultError(),\n      onSettled: () => onCloseTos(),\n    });\n  };\n\n  // Payment\n\n  const paymentMethodQuery = useGetPaymentMethod();\n  const processCardQuery = useProcessCard();\n  const processPayPalQuery = useProcessPayPal();\n  const processBraintreeQuery = useProcessBraintree();\n  const [upgradeErrors, setUpgradeErrors] = useState<string[]>([]);\n  const [hadPaymentErrors, setHadPaymentErrors] = useState(false);\n\n  const upgradePlan = async () => {\n    const activePaymentQueryRefetched = await paymentMethodQuery.refetch();\n    const activePayment = filterActivePaymentMethod(\n      activePaymentQueryRefetched?.data\n    );\n\n    if (!selectedPlan || !activePayment) return;\n\n    setUpgradeState(State.ProcessingPayment);\n\n    const plan = { unique_key: selectedPlan.key };\n    const queryOptions: any = {\n      onSuccess: () => {\n        refetchAccount();\n        setUpgradeState(State.Success);\n      },\n      onError(error: Error) {\n        let cause = error.cause as string[];\n        const stringifiedErrors = cause?.join(', ');\n\n        if (stringifiedErrors === 'Unknown Checkout Failure Reason') {\n          cause = [\n            'Your payment failed, please try again or choose a different payment method.',\n          ];\n        }\n\n        setUpgradeErrors(cause);\n        setUpgradeState(State.Error);\n      },\n    };\n\n    interface MutationFunctions {\n      paypal: typeof processPayPalQuery;\n      braintree: typeof processBraintreeQuery;\n      card: typeof processCardQuery;\n    }\n\n    const mutationFunctions: MutationFunctions = {\n      paypal: processPayPalQuery,\n      braintree: processBraintreeQuery,\n      card: processCardQuery,\n    };\n\n    const paymentType: 'card' | 'braintree' | 'paypal' =\n      getPaymentType(activePayment);\n\n    const mutationFunction = mutationFunctions[paymentType] || processCardQuery;\n\n    const mutationParams = {\n      plan,\n      ...((paymentType === 'paypal' && {\n        paypalId: activePayment.id,\n      }) as { paypalId: number }),\n      ...((paymentType === 'card' && {\n        cardId: activePayment.id,\n      }) as {\n        cardId: number;\n      }),\n      ...((paymentType === 'braintree' && {\n        braintreeId: activePayment.id,\n      }) as { braintreeId: number }),\n      source_of_payment: 'manual_upgrade_attempt',\n    };\n    setProcessingPayment(false);\n    mutationFunction.mutate(mutationParams, queryOptions);\n  };\n\n  const hasPlans = plans.length > 0;\n\n  const handleAddPaymentMethod = () => {\n    setUpgradeState(State.AddPayment);\n  };\n\n  const handleSelectedPaymentMethod = () => {\n    if (hadPaymentErrors) {\n      setHadPaymentErrors(false);\n      upgradePlan();\n    } else {\n      setUpgradeState(State.None);\n    }\n  };\n\n  const handleClosePaymentSelectionModal = () => {\n    if (hadPaymentErrors) {\n      setHadPaymentErrors(false);\n      setUpgradeState(State.Error);\n    } else {\n      setUpgradeState(State.None);\n    }\n  };\n\n  const handleCloseAddPaymentModal = () => {\n    setUpgradeState(State.None);\n  };\n\n  return (\n    <UpgradePlanContent container={hasPlans}>\n      {isLoading && <CircularProgress sx={{ my: 30 }} />}\n\n      {!isLoading && (\n        <>\n          <UpgradePlan\n            currentPlan={{\n              title: currentPlan.title,\n              limit: isLimitedUser ? currentPlan.limit : 'unlimited',\n              costPerReport: currentPlan.costPerReport,\n              canceled: isCancelledSubscription,\n            }}\n            plans={plans}\n            onSelectPlan={onSelectPlan}\n            onContactUs={contactUsHandler}\n          />\n          <TosModal\n            open={openTosModal}\n            showCheckbox={true}\n            billingFrecuency={billingFrecuency}\n            billedPrice={billedPrice}\n            cta={{\n              text:\n                selectedPlan?.title === 'Saver'\n                  ? 'Accept and Downgrade'\n                  : 'Accept and Upgrade',\n              extraWide: true,\n              processingPayment,\n            }}\n            showPaymentMethod={true}\n            acceptTos={onAcceptTos}\n            onChangePaymentMethod={() => setUpgradeState(State.SelectPayment)}\n            onClose={onCloseTos}\n          />\n\n          <PaymentsSelectionModal\n            open={isState(State.SelectPayment)}\n            cta=\"Use This Payment Method\"\n            onAddPaymentMethod={handleAddPaymentMethod}\n            onSelectedPaymentMethod={handleSelectedPaymentMethod}\n            onClose={handleClosePaymentSelectionModal}\n          />\n\n          <RadioPaymentsModal\n            isOpen={isState(State.AddPayment)}\n            onCloseHandle={handleCloseAddPaymentModal}\n          />\n\n          <ProcessingSpinnerModal open={isState(State.ProcessingPayment)} />\n\n          <UpgradeSuccessModal\n            open={isState(State.Success)}\n            onAccept={() => {\n              setUpgradeState(State.None);\n\n              navigate('/dashboard');\n            }}\n          />\n\n          <UpgradeFailureModal\n            open={isState(State.Error)}\n            errors={upgradeErrors}\n            onTryAgain={() => upgradePlan()}\n            onChangeCard={() => {\n              setHadPaymentErrors(true);\n              setUpgradeState(State.SelectPayment);\n            }}\n            onClose={() => {\n              setUpgradeState(State.None);\n            }}\n          />\n        </>\n      )}\n    </UpgradePlanContent>\n  );\n};\n", "import { useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { CircularProgress } from '@ltvco/refresh-lib/theme';\nimport { Stack, Text } from '@ltvco/refresh-lib/theme';\nimport { SidenavContainer } from 'components/sidenav/SidenavContainer';\nimport {\n  searchReport,\n  SearchReportResponseData,\n  mapReportTypesToReportParams,\n  useCaptcha,\n} from '@ltvco/refresh-lib/v1';\nimport { useMutation } from '@ltvco/refresh-lib/vendors';\ninterface CustomWindow extends Window {\n  reportVelocityCaptchaCallback?: (response: string) => void;\n  hcaptcha?: {\n    render: (id: string) => void;\n  };\n}\n\nconst captchaId = 'report-velocity-captcha';\n\nexport const ReportVelocityCaptcha: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [, captchaReady, sitekey] = useCaptcha({\n    customConfigResponse: { session: { reportVelocity: true } },\n  });\n  const captchaClassName = 'h-captcha';\n  const body = location.state?.requestData?.body;\n  const permalinkMutation = useMutation({ mutationFn: searchReport });\n\n  useEffect(() => {\n    if (!location?.state?.requestData) {\n      // This route was likely navigated to directly, so redirect to dashboard\n      navigate('/dashboard');\n    }\n  }, [navigate, location]);\n\n  (window as CustomWindow).reportVelocityCaptchaCallback = async (response) => {\n    body['h-captcha-response'] = response;\n    const permalink = (\n      (await permalinkMutation.mutateAsync(body)) as SearchReportResponseData\n    ).report.permalink;\n    const reportParam =\n      mapReportTypesToReportParams[\n        body.report_type as keyof typeof mapReportTypesToReportParams\n      ];\n    navigate(`/report/${reportParam}?permalink=${permalink}`);\n  };\n\n  useEffect(() => {\n    if (captchaReady) {\n      (window as CustomWindow).hcaptcha?.render(captchaId);\n    }\n  }, [captchaReady]);\n\n  return (\n    <SidenavContainer>\n      <Stack\n        marginTop={6.5}\n        spacing={3}\n        alignItems={'center'}\n        textAlign={'center'}\n        padding={3}\n      >\n        <Stack alignItems={'center'}>\n          <Text variant=\"h3\" fontSize={24}>\n            Hey there\n          </Text>\n          <Text variant=\"h3\" fontSize={24}>\n            You've generated a lot of reports\n          </Text>\n        </Stack>\n        <Text width={{ xs: '100%', md: '30%' }} margin={'auto'}>\n          Please verify that you're not a robot, and then you can continue\n          searching as much as you'd like.\n        </Text>\n        <div\n          className={captchaClassName}\n          data-sitekey={sitekey}\n          id={captchaId}\n          data-callback=\"reportVelocityCaptchaCallback\"\n        />\n        {!captchaReady && (\n          <CircularProgress sx={{ color: 'text.primary', p: 1 }} />\n        )}\n      </Stack>\n    </SidenavContainer>\n  );\n};\n", "import { useAppConstantsContext } from '@ltvco/refresh-lib/ctx';\nimport { Modal, Stack, Text } from '@ltvco/refresh-lib/theme';\nimport { useState } from 'react';\nimport {\n  ClickOutPartner,\n  Rewards,\n  useRewards,\n  type Reward,\n} from '@ltvco/refresh-lib/v1';\n\n// Constant from original PerksPage\nconst CLICK_OUT_PARTNER_COMPONENT = 'rewards/clickout-partner/widget';\n\n// Modal styles from original PerksPage\nconst modalStyles = {\n  width: '90vw',\n  margin: 'auto',\n  '.MuiDialog-paper': {\n    maxWidth: ['90vw', '90vw', '85vw', '1066px'],\n    width: ['90vw', '90vw', '85vw', '1066px'],\n    margin: 'auto',\n  },\n};\n\nexport const RewardsOffersTab = () => {\n  const {\n    data: { brandName },\n  } = useAppConstantsContext();\n  const { data, isLoading } = useRewards();\n  const [activeReward, setActiveReward] = useState<string | Reward>('');\n  const hasSelectedReward = activeReward !== '';\n  const initialRecordSearch = {\n    address: '',\n    city: '',\n    state: '',\n    zip_code: '',\n  };\n\n  if (isLoading) {\n    return <Text>Loading rewards...</Text>;\n  }\n\n  return (\n    <>\n      <Stack spacing={2}>\n        <Text variant=\"h2\" fontWeight=\"bold\" fontSize=\"1.25rem\">\n          Rewards & Offers\n        </Text>\n        <Text fontSize=\"1rem\">\n          As a {brandName} member, you can take advantage of benefits and perks\n          that come with your subscription. Check back often as we add more\n          savings - we're just getting started!\n        </Text>\n        {data?.rewards && (\n          <Rewards\n            rewards={data.rewards}\n            activeReward={activeReward}\n            hasSelectedReward={hasSelectedReward}\n            selectRewardPartner={setActiveReward}\n            initialRecordSearch={initialRecordSearch}\n          />\n        )}\n      </Stack>\n\n      <Modal\n        fullWidth\n        hasCloseIcon\n        sx={modalStyles}\n        open={hasSelectedReward}\n        onClose={() => setActiveReward('')}\n      >\n        {hasSelectedReward && (\n          <ClickOutPartner\n            reward={activeReward as Reward}\n            currentRewardCollapsed={false}\n            partnerName={(activeReward as Reward).name}\n            selectRewardPartner={() => setActiveReward('')}\n            initialRecordSearch={initialRecordSearch}\n            isFormReward={\n              (activeReward as Reward).component !== CLICK_OUT_PARTNER_COMPONENT\n            }\n          />\n        )}\n      </Modal>\n    </>\n  );\n};\n", "import { Stack } from '@ltvco/refresh-lib/theme';\nimport { SettingsTiles } from '../../../../components/idMonitor/SettingsTiles/SettingsTiles';\nimport { IdMonitorContainer } from '../../../../components/idMonitor/IdMonitorContainer';\nimport { OneTimePasscodeProvider } from '../../../../components/idMonitor/Oxford/OneTimePasscodeContext';\n\nexport const IdentityMonitorTab = () => {\n  return (\n    <>\n      <Stack gap={2.5}>\n        <SettingsTiles />\n      </Stack>\n      <OneTimePasscodeProvider>\n        <IdMonitorContainer />\n      </OneTimePasscodeProvider>\n    </>\n  );\n};\n", "import {\n  Stack,\n  Tab,\n  TabsNavigation,\n  styled,\n  type TabData,\n} from '@ltvco/refresh-lib/theme';\nimport { useState } from 'react';\nimport { RewardsOffersTab } from './RewardsOffersTab';\nimport { IdentityMonitorTab } from './IdentityMonitorTab';\n\nconst StyledTabsNavigation = styled(TabsNavigation)(({ theme }) => ({\n  color: theme.palette.info.light,\n  borderBottom: 'solid',\n  marginBottom: theme.spacing(2.5),\n}));\n\nexport const MemberPerksTabs = () => {\n  const [activeTab, setActiveTab] = useState(0);\n\n  const tabs: TabData[] = [\n    {\n      label: 'Identity Monitoring',\n      content: <IdentityMonitorTab />,\n    },\n    {\n      label: 'Rewards & Offers',\n      content: <RewardsOffersTab />,\n    },\n  ];\n\n  return (\n    <Stack direction=\"column\">\n      <StyledTabsNavigation\n        externalActiveTab={activeTab}\n        onTabChanged={(newIndex: number) => setActiveTab(newIndex)}\n        tab={Tab}\n        tabs={tabs}\n      />\n    </Stack>\n  );\n};\n", "import { useEffect } from 'react';\nimport { PerksPage } from '@ltvco/refresh-lib/v1';\nimport { MemberPerksTabs } from './Dashboard/MemberPerks/MemberPerksTabs/MemberPerksTabs';\nimport { useFeatureIsOn } from '@ltvco/refresh-lib/vendors';\n\nexport function RewardsPage() {\n  const isIn1448Variation = useFeatureIsOn('OAR-1448');\n\n  useEffect(() => {\n    document.title = 'Member Perks - BeenVerified';\n  }, []);\n\n  return <>{isIn1448Variation ? <MemberPerksTabs /> : <PerksPage />}</>;\n}\n", "import React, { useContext, useState, useEffect, useMemo } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport {\n  Stack,\n  Text,\n  Grid,\n  Box,\n  styled,\n  Card,\n  Button,\n} from '@ltvco/refresh-lib/theme';\nimport {\n  useSearchObituary,\n  PersonSearchLoading,\n  ObituarySearchForm,\n  ObituaryResultsCard,\n} from '@ltvco/refresh-lib/v1';\nimport { AppConfig } from '@ltvco/refresh-lib/ctx';\nimport { useSortedObitResults } from '@ltvco/refresh-lib/hooks';\nimport { useScreenSize, ageFromDob } from '@ltvco/refresh-lib/utils';\nimport { Close, Tune } from '@mui/icons-material';\n\nconst StickyContainer = styled(Stack)(({ theme }) => ({\n  position: 'fixed',\n  top: 60,\n  width: '100%',\n  zIndex: 2,\n\n  [theme.breakpoints.up('md')]: {\n    position: 'sticky',\n    top: theme.spacing(10),\n    zIndex: 1,\n    marginBottom: theme.spacing(3),\n    marginLeft: theme.spacing(2),\n  },\n}));\n\nexport function SearchObituaryResults() {\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    document.title = 'Search - BeenVerified';\n  }, []);\n\n  const searchData = useMemo(() => {\n    return {\n      name: searchParams.get('name') || '',\n      dob: searchParams.get('dob'),\n      dod: searchParams.get('dod'),\n      location: searchParams.get('location'),\n    };\n  }, [searchParams]);\n\n  const { data, isFetched } = useSearchObituary({\n    obituarySearchParams: searchData,\n  });\n\n  const sortedObits = useSortedObitResults(data, searchData);\n\n  const { trackEventGA4 } = useContext(AppConfig);\n\n  const { isMedium } = useScreenSize();\n\n  const [isCollapsed, setIsCollapsed] = useState(true);\n\n  const handleCollapseToggle = () => {\n    setIsCollapsed((prevState) => !prevState);\n  };\n\n  function trackGA4() {\n    trackEventGA4({\n      event_name: 'report_search',\n      report_type: 'obituary',\n      search_by: 'obituary',\n      search_from: `obituary_teaser`,\n    });\n  }\n\n  if (isFetched && !data?.length) {\n    let fname,\n      mn,\n      ln,\n      age = '';\n    const name = searchData.name.split(' ');\n    if (name.length === 2) {\n      fname = name[0];\n      mn = '';\n      ln = name[1];\n    } else if (name.length === 3) {\n      fname = name[0];\n      mn = name[1];\n      ln = name[2];\n    }\n\n    if (searchData.dob) {\n      const dobArray = searchData.dob.split('-');\n      dobArray.splice(1, 0, '01');\n      const dobString = dobArray.join('-');\n      age = ageFromDob(dobString).toString();\n    }\n    navigate(\n      `/search/person?age=${age}&city=&fname=${fname}&ln=${ln}&mn=${mn}&state=All&redirected_from_obit=true`\n    );\n  }\n\n  const resultsTitle = `${data?.length} results`;\n\n  return (\n    <>\n      {!sortedObits.length ? (\n        <PersonSearchLoading />\n      ) : (\n        <Stack sx={{ minHeight: 800, position: 'relative' }}>\n          <Grid\n            container\n            spacing={2}\n            justifyContent={'space-between'}\n            sx={{ mt: 3 }}\n          >\n            <Grid item xs={12} md={3}>\n              <StickyContainer>\n                <Card\n                  sx={{ maxHeight: isMedium ? '450px' : '', overflow: 'auto' }}\n                >\n                  {isMedium && isCollapsed && (\n                    <Button\n                      id=\"filterToggle\"\n                      type=\"button\"\n                      name=\"filterToggle\"\n                      variant=\"outlined\"\n                      onClick={handleCollapseToggle}\n                      fullWidth\n                    >\n                      <Text variant=\"h3\" sx={{ mb: 1 }}>\n                        <Tune sx={{ m: 0.75, mb: -0.75 }} />\n                        Filter results\n                      </Text>\n                    </Button>\n                  )}\n                  {isMedium && !isCollapsed && (\n                    <Button\n                      id=\"filterToggle\"\n                      type=\"button\"\n                      name=\"filterToggle\"\n                      onClick={handleCollapseToggle}\n                      sx={{\n                        float: 'right',\n                        '&:hover': {\n                          background: 'transparent',\n                        },\n                      }}\n                    >\n                      <Text variant=\"body1\" sx={{ mt: -2 }}>\n                        <Close sx={{}} /> <br />\n                        Close filter\n                      </Text>\n                    </Button>\n                  )}\n                  {(!isMedium || (isMedium && !isCollapsed)) && (\n                    <React.Fragment>\n                      <Text variant=\"h2\">Search another obituary</Text>\n                      <ObituarySearchForm\n                        miniView={true}\n                        defaults={searchParams}\n                        trackEvent={trackGA4}\n                      />\n                    </React.Fragment>\n                  )}\n                </Card>\n              </StickyContainer>\n            </Grid>\n            <Grid item xs={12} md={8} sx={{ mt: { xs: 8.75, md: 0 } }}>\n              {sortedObits?.length && (\n                <>\n                  <Grid item xs={12}>\n                    <Box\n                      mb={{ xs: 2, md: 2 }}\n                      ml={{ xs: 2, md: 0 }}\n                      nonce={undefined}\n                      onResize={undefined}\n                      onResizeCapture={undefined}\n                    >\n                      <Text variant=\"h3\" display={'inline'}>\n                        {resultsTitle}\n                      </Text>\n                      <Text variant=\"h4\" fontWeight={400} display={'inline'}>\n                        {' '}\n                        for{' '}\n                      </Text>\n                      <Text variant=\"h3\" display={'inline'}>\n                        {searchData.name}\n                      </Text>\n                    </Box>\n                  </Grid>\n                  {sortedObits.map((obituary, index: number) => {\n                    return (\n                      <React.Fragment key={index}>\n                        <ObituaryResultsCard obituaryData={obituary} />\n                      </React.Fragment>\n                    );\n                  })}\n                </>\n              )}\n            </Grid>\n          </Grid>\n        </Stack>\n      )}\n    </>\n  );\n}\n", "import { useEffect, useState } from 'react';\nimport {\n  FamilyTreeContent,\n  useAncestryTreeV2,\n  type PostIndi,\n  usePostAncestryTree,\n  FamilyTreeContentProvider,\n  type JsonGedcomData,\n} from '@ltvco/refresh-lib/fmt';\nimport { constants } from 'appConstants';\nimport { useNavigate } from 'react-router-dom';\nimport { getClaimedReports } from 'utils/getClaimedReports';\nimport {\n  LoadingDots,\n  enqueueSnackbar,\n  ReportFactory,\n  ReportMonitor,\n  serializedTypes,\n  useReport,\n  useReportMonitors,\n} from '@ltvco/refresh-lib/v1';\nimport { useAppConstantsContext } from '@ltvco/refresh-lib/ctx';\nimport { Stack } from '@ltvco/refresh-lib/theme';\nimport {\n  formatAddressFromReport,\n  capitalizeString,\n} from '@ltvco/refresh-lib/utils';\n\nconst REPORT_TYPE = 'detailed_person_report';\nconst ANCESTRY_TREE_INITIAL_MEMBER_COUNT = 6;\nconst ANCESTRY_TREE_MEMBER_COUNT_FOR_TWO_MEMBERS = 9;\nconst MAX_REPORTS = 10;\n\nconst LoadingContent = () => (\n  <Stack\n    sx={{\n      width: '100vw',\n      height: '100vh',\n      paddingTop: 10,\n    }}\n  >\n    <LoadingDots count={5} />\n  </Stack>\n);\n\nexport const FamilyTreePage = () => {\n  const {\n    data: { brandName },\n  } = useAppConstantsContext();\n\n  useEffect(() => {\n    document.title = `Family Tree - ${brandName}`;\n  }, []);\n\n  const urlParams = new URLSearchParams(window.location.search);\n  const [isInitialLoading, setIsInitialLoading] = useState(true);\n  const [openMenuParam, setOpenMenuParam] = useState<string | undefined>();\n  const [claimedReports, setClaimedReports] = useState<ReportMonitor[]>([]);\n  const [hasReachedMonitorsLimit, setHasReachedMonitorsLimit] = useState(false);\n  const permalinkParam = urlParams.get('from') || '';\n  const {\n    currentMonitors,\n    toggleReportIsMonitored,\n    reportMonitorIsLoading,\n    reportIsMonitored,\n    updateMonitorMutation,\n  } = useReportMonitors(permalinkParam);\n  const navigate = useNavigate();\n\n  const openParam = urlParams.get('open') ?? undefined;\n\n  const claimedReportPermalink = claimedReports?.length\n    ? claimedReports[0].permalink\n    : '';\n\n  useEffect(() => {\n    if (!!claimedReportPermalink && claimedReportPermalink != permalinkParam) {\n      navigate(`?from=${claimedReportPermalink}`);\n    }\n  }, [claimedReportPermalink, permalinkParam, navigate]);\n\n  useEffect(() => {\n    // If the user has been redirected from the relatives section on the person report\n    // it has a query param 'open=quick-add-relatives' to open the quick add relatives menu\n    // Once we opened the menu, we remove the query param from the URL Cesar C. 03/05/2024\n    if (openParam) {\n      setOpenMenuParam(openParam);\n      urlParams.delete('open');\n      const newUrl = `${window.location.pathname}?${urlParams.toString()}`;\n      window.history.replaceState({}, '', newUrl);\n    }\n  }, [openParam]);\n\n  useEffect(() => {\n    if (reportMonitorIsLoading) return;\n\n    const hasMaxReports = currentMonitors?.length >= MAX_REPORTS;\n\n    if (hasMaxReports) {\n      const lastMonitorAdded = currentMonitors?.[currentMonitors?.length - 1];\n\n      if (!lastMonitorAdded?.permalink) return;\n\n      // If the user has reached the limit of reports, we check if the current report is not in the list\n      if (\n        !currentMonitors.some((monitor) => monitor.permalink === permalinkParam)\n      ) {\n        setHasReachedMonitorsLimit(true);\n      }\n    }\n\n    const claimedReports = getClaimedReports(currentMonitors, REPORT_TYPE);\n    setClaimedReports(claimedReports);\n\n    setIsInitialLoading(false);\n  }, [currentMonitors, reportMonitorIsLoading]);\n\n  if (reportMonitorIsLoading || isInitialLoading) return <LoadingContent />;\n\n  return (\n    <FamilyTreeWithRelatives\n      permalinkParam={permalinkParam}\n      hasReachedMonitorsLimit={hasReachedMonitorsLimit}\n      claimedReportPermalink={claimedReportPermalink}\n      openMenuParam={openMenuParam}\n      cleanMenuParam={() => setOpenMenuParam(undefined)}\n    />\n  );\n};\n\ninterface FamilyTreeWithRelativesProps {\n  claimedReportPermalink: string;\n  openMenuParam?: string;\n  permalinkParam: string;\n  hasReachedMonitorsLimit: boolean;\n  cleanMenuParam: () => void;\n}\n\nconst FamilyTreeWithRelatives = ({\n  claimedReportPermalink,\n  permalinkParam,\n  hasReachedMonitorsLimit,\n  openMenuParam,\n  cleanMenuParam,\n}: FamilyTreeWithRelativesProps) => {\n  const isUserOnMainReport =\n    permalinkParam === claimedReportPermalink && !!permalinkParam;\n  const [allPossibleRelativesMainReport, setAllPossibleRelativesMainReport] =\n    useState<serializedTypes.Connection[]>([]);\n\n  const [selectedRelativesToAdd, setSelectedRelativesToAdd] = useState<\n    serializedTypes.Connection[]\n  >([]);\n\n  const [isLoading, setIsLoading] = useState(\n    isUserOnMainReport || !!claimedReportPermalink\n  );\n  const [bvid, setBvid] = useState<string>('');\n  const [relatives, setRelatives] = useState<\n    serializedTypes.Connection[] | undefined\n  >(undefined);\n  const [reportIndi, setReportIndi] = useState<PostIndi>();\n  const [newAncestryTreeData, setNewAncestryTreeData] =\n    useState<JsonGedcomData>();\n  const [isCleanView, setIsCleanView] = useState<boolean>(false);\n  const [\n    hasPersonReportRelativeToAddAfterNewTree,\n    setHasPersonReportRelativeToAddAfterNewTree,\n  ] = useState<boolean>(false);\n\n  const navigate = useNavigate();\n\n  const [\n    previousHasPersonReportRelativeToAddAfterNewTree,\n    setPreviousHasPersonReportRelativeToAddAfterNewTree,\n  ] = useState(false);\n\n  const [localStorageTriggerCount, setLocalStorageTriggerCount] = useState(0);\n\n  const removeRelativeFromLocalStorage = () => {\n    localStorage.removeItem('familyTreeRelativeToAdd');\n    setLocalStorageTriggerCount((prev) => prev + 1);\n  };\n\n  const {\n    data: ancestryTreeData,\n    isError: getAncestryTreeError,\n    error: getAncestryTreeErrorObj,\n    isLoading: isAncestryTreeLoading,\n  } = useAncestryTreeV2({\n    permalink: claimedReportPermalink,\n  });\n  const {\n    links: { baseUrl },\n  } = useAppConstantsContext();\n\n  const {\n    mutate: postAncestryTreeMutation,\n    isError: postAncestryTreeIsError,\n    isLoading: isPostingTree,\n  } = usePostAncestryTree();\n\n  const { data: coreResultData } = useReport(\n    claimedReportPermalink,\n    !isUserOnMainReport\n  );\n\n  const handleNavigateToTreeBuilder = () => {\n    window.location.href = `${baseUrl}/dashboard/family-ancestry?open=tree-builder&from=${permalinkParam}`;\n  };\n\n  const handleCleanViewToggle = (newValue: boolean) => {\n    setIsCleanView(newValue);\n  };\n\n  useEffect(() => {\n    if (coreResultData) {\n      const report = ReportFactory.create(coreResultData, 'person');\n      const owner = report.getOwner({\n        potentialOwnerIndex: 0,\n        showHighConfidenceDataOnly: true,\n        higherConfidenceThreshold: constants.config.higherConfidenceThreshold,\n      });\n      const { relatives, identity } = owner;\n      const reportBvid = identity!.ids[0];\n\n      const emptyAddress = { street: '', city: '', state: '', zip5: '' };\n\n      const formattedAddress = owner.location?.parsed\n        ? formatAddressFromReport(owner.location?.parsed)\n        : emptyAddress;\n\n      setReportIndi({\n        first_name: capitalizeString(identity!.names[0]?.parsed?.first || ''),\n        middle_name: capitalizeString(identity!.names[0]?.parsed?.middle || ''),\n        last_name: capitalizeString(identity!.names[0]?.parsed?.last || ''),\n        dob_month: identity!.dobs[0]?.date?.parsed?.month,\n        dob_year: identity!.dobs[0]?.date?.parsed?.year,\n        dod_month: identity!.dods[0]?.date?.parsed?.month,\n        dod_year: identity!.dods[0]?.date?.parsed?.year,\n        place: {\n          street_address_1: formattedAddress.street ?? '',\n          city: formattedAddress.city ?? '',\n          state: formattedAddress.state ?? '',\n          zip_code: formattedAddress.zip5 ?? '',\n        },\n      });\n\n      setRelatives(relatives);\n      setBvid(reportBvid);\n    }\n  }, [coreResultData]);\n\n  useEffect(() => {\n    if (isAncestryTreeLoading || isPostingTree || ancestryTreeData) return;\n\n    if (getAncestryTreeError && !!reportIndi) {\n      // if the request doesn't have a valid token avoid posting to ancestry tree.\n      // @ts-expect-error - Checking if the error message includes 401 TODO: Fix this\n      if (getAncestryTreeErrorObj?.message.includes('401')) return;\n\n      postAncestryTreeMutation({\n        indi: reportIndi,\n        permalink: claimedReportPermalink,\n        bvid,\n      });\n\n      setReportIndi(undefined);\n    }\n  }, [getAncestryTreeError, getAncestryTreeErrorObj, reportIndi]);\n\n  useEffect(() => {\n    if (!!ancestryTreeData) {\n      // Get the current state value directly before using it\n      const currentCleanViewState = isCleanView;\n\n      // If the user is in clean view, we filter out the deleted individuals and placeholders from the tree\n      if (currentCleanViewState) {\n        const filteredIndis = ancestryTreeData.indis.filter(\n          (i) => !i.placeholder || !!i.deleted_at\n        );\n\n        // Creates a set of the valid individual ids\n        const validIndiIds = new Set(filteredIndis.map((indi) => indi.id));\n\n        // Filters out Fams that makes reference to invalid individuals filtered before\n        // and removes the reference to invalid individuals in the children array\n        const newFams = ancestryTreeData.fams.map((fam) => {\n          const validChildren =\n            fam.children?.filter((childId) => validIndiIds.has(childId)) || [];\n\n          return {\n            id: fam.id,\n            children: validChildren,\n            parent1: validIndiIds.has(fam.parent1 as number)\n              ? fam.parent1\n              : undefined,\n            parent2: validIndiIds.has(fam.parent2 as number)\n              ? fam.parent2\n              : undefined,\n          };\n        });\n\n        // Creates a new object with the filtered individuals and the new Fams\n        const newAncestryTreeData = {\n          ...ancestryTreeData,\n          indis: filteredIndis,\n          fams: newFams,\n        };\n\n        setNewAncestryTreeData(newAncestryTreeData);\n      } else {\n        setNewAncestryTreeData(ancestryTreeData);\n      }\n    }\n  }, [ancestryTreeData, isCleanView]);\n\n  useEffect(() => {\n    if (!!ancestryTreeData && isLoading) {\n      if (\n        ancestryTreeData.indis.length <= ANCESTRY_TREE_INITIAL_MEMBER_COUNT &&\n        localStorage.getItem('skipAutoTreeBuilder') !== 'true'\n      ) {\n        handleNavigateToTreeBuilder();\n      } else {\n        setIsLoading(false);\n      }\n    }\n  }, [ancestryTreeData, setIsLoading, localStorage]);\n\n  useEffect(() => {\n    if (!!ancestryTreeData?.indis && localStorageTriggerCount <= 1) {\n      const ancestryTreePopulatedMember = ancestryTreeData.indis.filter(\n        (member) => member.deleted_at == null && !member.placeholder\n      ).length;\n      const hasPersonReportRelativeToAdd = JSON.parse(\n        localStorage.getItem('familyTreeRelativeToAdd') || '{}'\n      )?.person_report_params;\n\n      if (ancestryTreePopulatedMember === 1 && !!hasPersonReportRelativeToAdd) {\n        setHasPersonReportRelativeToAddAfterNewTree(true);\n        setPreviousHasPersonReportRelativeToAddAfterNewTree(false);\n      } else {\n        setHasPersonReportRelativeToAddAfterNewTree(false);\n        setPreviousHasPersonReportRelativeToAddAfterNewTree(true);\n      }\n    }\n  }, [\n    ancestryTreeData,\n    localStorageTriggerCount,\n    setPreviousHasPersonReportRelativeToAddAfterNewTree,\n    setHasPersonReportRelativeToAddAfterNewTree,\n  ]);\n\n  if (postAncestryTreeIsError) {\n    enqueueSnackbar('An error occurred while generating the family tree', {\n      variant: 'error',\n    });\n\n    navigate('/dashboard/family-ancestry');\n  }\n\n  const eligibleMaxMemberCount =\n    !hasPersonReportRelativeToAddAfterNewTree &&\n    !!previousHasPersonReportRelativeToAddAfterNewTree\n      ? ANCESTRY_TREE_MEMBER_COUNT_FOR_TWO_MEMBERS\n      : ANCESTRY_TREE_INITIAL_MEMBER_COUNT;\n\n  const thereIsPossibleRelatives = relatives && relatives?.length > 0;\n  const addRelativesToNewTree =\n    (ancestryTreeData?.indis &&\n      ancestryTreeData?.indis?.length <= eligibleMaxMemberCount &&\n      selectedRelativesToAdd.length === 0) ||\n    allPossibleRelativesMainReport.length > 0;\n\n  const showModalAfterClaimingTree =\n    thereIsPossibleRelatives &&\n    addRelativesToNewTree &&\n    !hasPersonReportRelativeToAddAfterNewTree;\n\n  // Only show loading content during initial load or when posting tree\n  const shouldShowLoadingContent =\n    (isLoading && !ancestryTreeData) ||\n    isPostingTree ||\n    (isAncestryTreeLoading && !ancestryTreeData);\n\n  if (shouldShowLoadingContent) return <LoadingContent />;\n\n  return (\n    <FamilyTreeContentProvider\n      members={newAncestryTreeData?.indis || []}\n      permalink={claimedReportPermalink}\n      mainReportRelatives={relatives || []}\n      addRelativesToNewTree={showModalAfterClaimingTree}\n      allPossibleRelativesMainReport={allPossibleRelativesMainReport}\n      setAllPossibleRelativesMainReport={setAllPossibleRelativesMainReport}\n      selectedRelativesToAdd={selectedRelativesToAdd}\n      setSelectedRelativesToAdd={setSelectedRelativesToAdd}\n      hasPersonReportRelativeToAddAfterNewTree={\n        hasPersonReportRelativeToAddAfterNewTree\n      }\n      removeRelativeFromLocalStorage={removeRelativeFromLocalStorage}\n    >\n      <FamilyTreeContent\n        hasReport={isUserOnMainReport}\n        ancestryTreeData={newAncestryTreeData}\n        isAncestryTreeLoading={isAncestryTreeLoading}\n        openMenuParam={openMenuParam}\n        hasReachedMonitorsLimit={hasReachedMonitorsLimit}\n        permalinkParam={permalinkParam}\n        cleanMenuParam={cleanMenuParam}\n        isCleanView={isCleanView}\n        setCleanView={handleCleanViewToggle}\n      />\n    </FamilyTreeContentProvider>\n  );\n};\n", "import { Grid, Box } from '@ltvco/refresh-lib/theme';\nimport { useParams } from 'react-router-dom';\nimport {\n  useNewYorkDeathRecord1957To1972,\n  COLLECTION_RECORD_IDS,\n  useCaliforniaDeathRecord1940To1997,\n  useAncestryTree,\n  type JsonIndi,\n  type JsonRecord,\n} from '@ltvco/refresh-lib/fmt';\nimport { DeathIndexReportOverview } from '@ltvco/refresh-lib/v2';\nimport {\n  ReportLoading,\n  ReportNullState,\n  useReportMonitors,\n} from '@ltvco/refresh-lib/v1';\nimport { getClaimedReports } from 'utils/getClaimedReports';\nimport { useState, useEffect } from 'react';\n\nconst isRecordAlreadyAdded = (\n  recordId: string,\n  collectionId: string,\n  familyTreeData?: { indis: JsonIndi[] }\n): number | undefined => {\n  if (!familyTreeData?.indis) {\n    return undefined;\n  }\n\n  const member = familyTreeData.indis.find((member) => {\n    if (\n      member.placeholder ||\n      !member.records ||\n      !Array.isArray(member.records)\n    ) {\n      return false;\n    }\n\n    const memberRecords: JsonRecord[] = member.records;\n    return memberRecords.some((existingRecord: JsonRecord): boolean => {\n      const recordMatches =\n        String(existingRecord.record_id) === String(recordId) ||\n        Number(existingRecord.record_id) === Number(recordId);\n      const collectionMatches = existingRecord.collection_id === collectionId;\n      return recordMatches && collectionMatches;\n    });\n  });\n\n  return member?.id;\n};\n\nexport function RecordPage() {\n  const { record_id, collection_id } = useParams();\n  const [claimedReportPermalink, setClaimedReportPermalink] =\n    useState<string>('');\n  const { currentMonitors } = useReportMonitors();\n  const REPORT_TYPE = 'detailed_person_report';\n\n  useEffect(() => {\n    if (currentMonitors) {\n      const claimedReports = getClaimedReports(currentMonitors, REPORT_TYPE);\n\n      if (claimedReports.length > 0) {\n        setClaimedReportPermalink(claimedReports[0].permalink);\n      }\n    }\n  }, [currentMonitors]);\n\n  // Fetch family tree data\n  const { data: familyTreeData, isLoading: isFamilyTreeLoading } =\n    useAncestryTree({\n      permalink: claimedReportPermalink,\n      enabledOnStart: true,\n      logNotFoundErrorEnabled: false,\n    });\n\n  // Check if record is already in family tree and return the member id if it is\n  const recordInFamilyTree: number | undefined = !claimedReportPermalink\n    ? undefined\n    : familyTreeData\n    ? isRecordAlreadyAdded(\n        record_id as string,\n        collection_id as string,\n        familyTreeData\n      )\n    : undefined;\n\n  const shouldFetchNYDeathRecord =\n    collection_id === COLLECTION_RECORD_IDS['ny_1957_1972'];\n  const shouldFetchCADeathRecord =\n    collection_id === COLLECTION_RECORD_IDS['ca_1940_1997'];\n\n  const {\n    data: nyRecord,\n    isLoading: isNYLoading,\n    isError: isNYError,\n  } = useNewYorkDeathRecord1957To1972({\n    recordId: record_id as string,\n    enabled: shouldFetchNYDeathRecord,\n  });\n\n  const {\n    data: caRecord,\n    isLoading: isCALoading,\n    isError: isCAError,\n  } = useCaliforniaDeathRecord1940To1997({\n    recordId: record_id as string,\n    enabled: shouldFetchCADeathRecord,\n  });\n\n  const isLoading =\n    (isNYLoading && shouldFetchNYDeathRecord) ||\n    (isCALoading && shouldFetchCADeathRecord);\n  const hasError =\n    (isNYError && shouldFetchNYDeathRecord) ||\n    (isCAError && shouldFetchCADeathRecord);\n\n  let recordToShow = null;\n\n  switch (true) {\n    case shouldFetchNYDeathRecord:\n      recordToShow = nyRecord;\n      break;\n    case shouldFetchCADeathRecord:\n      recordToShow = caRecord;\n      break;\n    default:\n      recordToShow = null;\n  }\n\n  if (isLoading) return <ReportLoading menuItems={2} />;\n  if (hasError || !recordToShow) return <ReportNullState />;\n\n  return (\n    <Box bgcolor={'background.paper'}>\n      <Grid container justifyContent={'center'} direction={'row'} width=\"100%\">\n        <Grid\n          item\n          sm={12}\n          md={9}\n          lg={6}\n          marginTop={3}\n          width=\"100%\"\n          padding={1}\n          sx={{\n            '#death-index-overview': {\n              border: 'none',\n            },\n          }}\n        >\n          <DeathIndexReportOverview\n            record={recordToShow}\n            recordInFamilyTree={recordInFamilyTree}\n            isLoadingValidations={isFamilyTreeLoading}\n          />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n", "import { OwnerSearch } from '@ltvco/refresh-lib/v1';\nimport { SidenavContainer } from 'components/sidenav/SidenavContainer';\n\nexport const OwnerSearchParent = () => {\n  return (\n    <SidenavContainer>\n      <OwnerSearch />\n    </SidenavContainer>\n  );\n};\n"],
    "names": ["useFirstRecordSearch", "cookieStorage", "CookiesStorage", "routingUtils", "useContext", "AppConfig", "firstRecordSearchData", "useState", "getFirstRecordSearch", "showFirstReportLoading", "setShowFirstReportLoading", "navigate", "useNavigate", "account", "useAccount", "useEffect", "localStorageData", "testAnswers", "_a", "responseMap", "answersToStore", "custom_attribute", "index", "obitPlans", "planName", "isInObitSearchForFirstSearchVariation", "navigateTo", "reportLimit", "_c", "_b", "handleRedirectToReportRoute", "handleRedirectToSearchRoute", "hasAllRequiredData", "_e", "_d", "handleRedirectToReportRouteLS", "handleRedirectToSearchRouteLS", "CreditCardIcon", "styled", "CustomIcons", "theme", "DollarsAndCoinsIcon", "StyledContainer", "DashboardParent", "contactUsHandler", "handleLogout", "openConfirmCancelModal", "enqueueSnackbar", "useSnackbar", "location", "useLocation", "useLimitedPlanInfo", "isMobile", "useScreenSize", "isInSingleReportVariation", "isInternationalVinTest", "isInInternationalLanguageTest", "checkPlanVariations", "dateUtil", "DateUtil", "currentDate", "isModalOpen", "closeModal", "triggerModal", "usePremiumDataModal", "searchType", "setSearchType", "featureAction", "str", "monitoredReportsOpen", "setMonitoredReportsOpen", "closeSnackbar", "e", "handleSiteNotifications", "handleReactivationForPausedAccountsBanner", "closeMonitoredReportsModal", "today", "expirationDate", "isAfterCurrentDate", "handleReactivationClick", "pausedAccountSnackbarId", "expiredMessage", "jsx", "Text", "jsxs", "cancelledMessage", "_f", "Link", "message", "Stack", "getCloseButton", "Fragment", "onClick", "IconButton", "CloseIcon", "siteNotification", "siteNotificationSnackbarId", "isIdMonitorIndex", "isMonitoringPage", "isBillingPage", "isReportsPage", "showRightRail", "RightRailComponent", "Grid", "NeedAssistanceSidebar", "constants", "EmailSettingsCard", "MonitoredReportsModal", "SideBarMigrationCta", "RightRailCard", "MobileAppsCtaCard", "ReactivatePausedAccountCta", "PremiumDataModal", "RightRail", "SidenavContainer", "BackdropLoading", "Outlet", "SearchHubContainer", "Box", "SearchButton", "Button", "StyledInputBase", "Input", "FormHelperErrorText", "StyledTabsDesktop", "Tabs", "StyledTabDesktop", "Tab", "StyledTabsMobile", "StyledTabMobile", "HeaderText", "StyledSubheaderText", "DisclaimerText", "FloatingLabel", "InputLabel", "StyledSearchTypeSelect", "Select", "StyledSearchTypeSelectContainer", "FormControl", "PersonSearchFieldContainer", "PersonFormContainer", "schemaPersonSearchForm", "yup.object", "yup.string", "BaseSearchInput", "React", "registerReturn", "placeholder", "value", "fieldName", "control", "autoFocus", "inputProps", "InputProps", "hasError", "customOnChange", "clearErrors", "onFocus", "onBlur", "useTheme", "ref", "handleInputChange", "field", "Controller", "InputAdornment", "SearchIcon", "composeHOC", "hocs", "BaseComponent", "AccumulatedComponent", "hoc", "withErrorHandling", "Component", "error", "className", "props", "combinedClassName", "StyledClearIconButton", "withClearButton", "onClear", "showClearButton", "clearButtonStyles", "shouldShowClearButton", "withFloatingLabel", "label", "hideLabel", "isFocused", "setIsFocused", "handleFocus", "handleBlur", "shouldShowLabel", "enhancedProps", "labelClassName", "EnhancedSearchInput", "SearchInput", "PersonSmartSearchInput", "register", "errors", "PersonSearch", "placeholderText", "onSearchSuccess", "placement", "useSession", "logError", "trackEventGA4", "redirectToSearchPersonUrlv2", "useReportRedirect", "isInStreamlinedTestVariant", "useFeatureIsOn", "currentInputValue", "setCurrentInputValue", "noResults", "setNoResults", "handleSubmit", "watch", "setValue", "setError", "useForm", "yupResolver", "name", "handleClearName", "useCallback", "redirectToConsolidatedPerson", "results", "finalData", "acc", "curr", "key", "currentValue", "street", "city", "state", "fn", "mn", "ln", "title", "company", "age", "personInfo", "personFormsCollectionTypesRecords", "data", "useLLMSmartSearchV1", "onPersonSearchSubmit", "searchFormsRecyclingValidation", "renderMobileForm", "renderDesktopForm", "SelectInput", "options", "onChange", "defaultOptionValue", "disabled", "selectedValue", "KeyboardArrowDownIcon", "option", "PROPERTY_SEARCH_TYPES", "searchTypeOptions", "getPlaceholderTextForPropertySearch", "activeTab", "rapidsInputCustomStyles", "PropertySearchFieldContainer", "PropertyFormContainer", "IntegratedSearchContainer", "PropertySearchInput", "trigger", "onSubmit", "onPropertyDataSelected", "rapidsStateRef", "propertyDataRef", "useRef", "handleRapidsDataSubmit", "propertyData", "street_line", "zipcode", "rapidsInputValue", "isValid", "onClearHandler", "BaseRapidsInput", "RapidsInput", "EnhancedRapidsInput", "PropertySearch", "propertyReportFlags", "useAppConstantsContext", "redirectToSearchPropertyListingsUrl", "customPlaceholderText", "setCustomPlaceholderText", "selectedPropertyData", "propertyQuery", "useMutation", "addressSearch", "variables", "propertySearchParams", "searchTypeValue", "addressValue", "handleSearchTypeChange", "handleClearAddress", "handlePropertyDataSelected", "handleAddressReportSearch", "parsedAddress", "address", "handlePreForeclosuresReportSearch", "personByAddressSearchParams", "onPropertySearchSubmit", "optionSelected", "currentInputText", "searchBy", "SearchInputComponent", "SelectInputComponent", "PHONE_VALIDATION_REGEX", "schemaPhoneSearchForm", "unformatPhone", "PhoneInput", "previousPhone", "setPreviousPhone", "input", "formattedInput", "formatPhoneInput", "PhoneSearchFieldContainer", "PhoneFormContainer", "PhoneSearch", "phone", "handleClearPhone", "phoneQuery", "phoneSearch", "onPhoneSearchSubmit", "SocialNetworkSelect", "UsernameSearchFieldContainer", "UsernameSearchDivider", "UsernameFormContainer", "socialNetworks", "schemaUsernameSearchForm", "UsernameInput", "UsernameSearch", "socialNetwork", "username", "handleClearUsername", "usernameQuery", "usernameSearch", "handleSocialNetworkChange", "onUsernameSearchSubmit", "schemaEmailSearchForm", "EmailInput", "EmailSearchFieldContainer", "EmailFormContainer", "EmailSearch", "email", "handleClearEmail", "emailQuery", "emailSearch", "onEmailSearchSubmit", "VehicleSearchFieldContainer", "VehicleFormContainer", "StyledSelectInputContainer", "VehicleInputsErrorTextPositionWrapper", "YMMSelectInputWrapper", "VINSearchInput", "vinValue", "setVinValue", "isVINModalOpen", "setIsVINModalOpen", "handleClear", "handleCustomChange", "sanitizedValue", "handleKeyDown", "HelpOutline", "errorClassName", "useMemo", "WhereIsMyVINModal", "VehicleSearchType", "STANDARD_VIN_LENGTH", "MIN_NON_STANDARD_VIN_LENGTH", "MAX_NON_STANDARD_VIN_LENGTH", "ALPHANUMERIC_REGEX", "VIN_VALIDATION_REGEX", "LICENSE_PLATE_VALIDATION_REGEX", "getPlaceholderTextForVehicleSearch", "schemaVinSearchForm", "isValidVIN", "schemaPlateSearchForm", "isValidLicensePlate", "schemaYmmSearchForm", "getResolver", "getAbbrStatesAsArray", "vehicleSearch", "searchParams", "vin", "tag", "make", "year", "trim", "model", "licensePlate", "ddPlan", "body", "searchReport", "getYears", "years", "nextYear", "getMakes", "makesObj", "getModels", "makeName", "makes", "namesMatch", "getVehicleTrims", "modelName", "checkDigitCheck", "transliteration", "weights", "chars", "expectedCheckDigit", "total", "char", "YMMSearchInput", "yearValue", "makeValue", "modelValue", "trimValue", "customYearValue", "setCustomYearValue", "customMakeValue", "setCustomMakeValue", "customModelValue", "setCustomModelValue", "customTrimValue", "setCustomTrimValue", "setMakes", "models", "setModels", "trims", "setTrims", "setMakesObj", "selectedMake", "setSelectedMake", "selectedModel", "setSelectedModel", "prioritizedError", "setPrioritizedError", "useQuery", "vehicleSelections", "selections", "clearAllErrors", "handleOptionChange", "EnhancedSelectInput", "yearsOptions", "YearSelectInput", "makesOptions", "MakeSelectInput", "modelsOptions", "ModelSelectInput", "trimsOptions", "TrimSelectInput", "isModelDisabled", "isTrimDisabled", "renderMobileInputs", "renderDesktopInputs", "LicensePlateSearchInput", "stateValue", "states", "licensePlateValue", "setLicensePlateValue", "StateSelectInput", "VehicleSearch", "searchFrom", "reset", "vehicleQuery", "validateYMMFields", "handleVINSearch", "handleLicensePlateSearch", "handleYMMSearch", "onVehicleSearchSubmit", "renderSearchInput", "decorateSearchTabs", "searchTabs", "subHeaderTextByTab", "iconByTab", "PersonRounded", "PhoneFilled", "HomeFilled", "EmailFilled", "AlternateEmailFilled", "DriveEtaFilled", "tab", "getPlaceholderText", "renderSearchForm", "SubheaderText", "subheaderText", "isVehicleTab", "DesktopSearchHub", "handleTabChange", "setPlaceholderText", "setSubheaderText", "brandName", "fcraLink", "tosLink", "displayDisclaimer", "updateTabContent", "tabId", "tabs", "activeTabData", "FcraWarning", "MobileSearchHub", "tabDisplayName", "displayName", "SearchHubVariation", "SearchHub", "useSearchForm", "useSearchFormContext", "handleOpenFormContainer", "activeFormTab", "setActiveFormTab", "handleSearchSuccess", "reportType", "permalink", "url", "isTablet", "handleTabClick", "variationSearchTabs", "Divider", "MobileTabsToggle", "SearchFormsContainer", "NullState", "SearchReport", "publish", "SearchAndFilterControls", "queryParams", "setQueryParams", "reportTypeFilterOptions", "filterTypes", "setFilterTypes", "sort_by", "sort_direction", "SearchComponent", "FiltersComponent", "SortComponent", "LoadingReports", "LoadingReportCard", "DescriptionDates", "isOnDashboard", "updatedDate", "createdDate", "lastViewedDate", "textVariant", "PropertySizeDisplay", "details", "displayParts", "hasRunReports", "session", "retentionInfo", "generateReportSubtitle", "report", "isInDataVariation", "subtitle", "hidePDFReportTypes", "hideNotesReportTypes", "fraudReportTypes", "RecentReportsCardDescription", "deleteCurrentReport", "hideRats", "reportTypeFormatted", "reportPermaLink", "reportData", "hidePDF", "hideNotes", "shouldShowPropertySizeData", "isInListV2Variation", "filterMenuItems", "items", "item", "hideMonitorForMultiState", "buildReportDataForListV2", "matcher", "RECENT_REPORTS_DATA_MATCHER", "SaveAction", "MonitorAction", "ListAction", "PdfAction", "MoreAction", "queryConfig", "generateQueryConfig", "DashboardRecentReports", "useQueryParams", "filteredParams", "stringifyParams", "queryData", "useRecentReports", "reports", "ChevronRight", "detailsCityState", "redirectToReportUrl", "ReportCard", "mapReportTypesToReportParams", "FamilyTreeCtaIcon", "FamilyTreeCtaTree", "FamilyTreeCta", "handleGetStarted", "filterAndSortReports", "claimedReports", "sortedClaimedReports", "CustomModal", "open", "handleClose", "customTitle", "description", "returnButtonText", "Modal", "Close", "StyledStack", "DashboardDigitialFoorprint", "currentMonitors", "useReportMonitors", "first_name", "last_name", "footprintModalOpen", "setFootprintModalOpen", "footprintModalTitle", "setFootprintModalTitle", "footprintModalDescription", "setFootprintModalDescription", "filteredAndSortedReports", "claimedPersonReports", "claimedPropertyReports", "claimedVehicleReports", "claimedEmailReports", "claimedPhoneReports", "REPORTVARIATION", "PhoneIphone", "Email", "DirectionsCar", "Home", "handleClickWhatIsDigitalFootprint", "PetsRounded", "PureTextButton", "Help", "IdentityCard", "FootprintCard", "ManageReportMonitorsModal", "DashboardPage", "setIsInSingleReportVariation", "paymentShowModalNumber", "setPaymentShowModalNumber", "isSuccessModaVisible", "setIsSuccessModaVisible", "openSuccessModal", "closeModals", "onSuccessPaymentHandler", "isFallFromCTAEmail", "features", "FamilyThree", "UnclaimedMoney", "DarkWebScan", "Identity", "Monitoring", "MemberPerks", "TheftInsurance", "FraudScan", "isOnDigitalFootprint", "feature", "FeatureCard", "PremiumPaymentSuccessModal", "useSriracha", "notifications", "onClickHandler", "MonitoringOverview", "Lists", "lists", "isLoading", "useAccountLists", "ListLandingPage", "AccountLists", "unclaimedMoneyFaq", "unclaimedMoneyHelpfulTips", "imgExpiredTime", "imgStates", "imgGroupPeople", "StyledCard", "Card", "params", "search", "fname", "lname", "stateList", "setStateList", "UnclaimedMoneyHeader", "SearchNewUnclaimedMoneyForm", "HelpfulTips", "Faq", "darkWebScanFaq", "useDarkWebReport", "ReportLoading", "breaches", "updatedAt", "DarkWebHeader", "DarkWebBreaches", "DarkWebFindOutWhatElse", "AccountInformationOptions", "editOptionClicked", "editing", "openModal", "setEditing", "customOptions", "GenericCtaCardProps", "isInVariation", "onVariationCtaClick", "has_sso_connections", "tabsVariation", "useFeatureValue", "isInDashboardFeaturesVariation", "handleCtaClick", "ctaLabel", "actionParam", "eventSite", "isPublish", "dashboardFeaturesprops", "IdentityBg", "selectedProps", "Billing", "onCancelConfirmCancelModal", "isLimitedUser", "isUnlimitedUser", "reportsRun", "reportsRunPercentage", "nextRenewalDate", "isInTabsVariation", "isInSingleTabVariation", "isNotInSingleTabVariation", "isLanguageVariationEnabled", "isEnglishPreferred", "usePreferredLanguage", "shouldShowSubscriptionsVariantForLanguage", "openPaymentsSelectionModal", "setOpenPaymentsSelectionModal", "openPaymentsUpdateModal", "setOpenPaymentsUpdateModal", "openPaypalRedirection", "setOpenPaypalRedirection", "paypalState", "setPaypalState", "togglePaypalRedirectionModal", "text", "ctaCardProps", "length", "togglePaymentsSelectionModal", "togglePaymentsUpdateModal", "CancelMyAccount", "isInCancelMenuVariation_3", "urlParams", "finishEditing", "handleAddPaymentMethod", "updatedItems", "MyAccountHeader", "MyAccountTabs", "LimitedPlanProgressVIN", "LimitedPlanProgress", "_h", "_g", "ManageSubscriptions", "MyAccountComponents", "_x", "GenericCtaCard", "AccountEditModals", "AccountInformation", "ViewOrderHistory", "PaymentsSelectionModal", "RadioPaymentsModal", "PayPalRedirectionModal", "RecentReports", "AppConstants", "reportTypes", "type", "totalReportsRef", "totalReports", "totalFilteredReports", "pageCount", "deleteAllReportsModalOpen", "setDeleteAllReportsModalOpen", "currentReports", "setCurrentReports", "hasZeroReports", "availableFilterTypeOptions", "deleteAllMutation", "useReportDeleteAll", "deleteAll", "event", "handleGoBack", "handlePageChange", "page", "HistoryRounded", "pluralizeString", "DeleteAllButton", "ReportList", "Pagination", "_", "DeleteModal", "getReportDetails", "property", "_i", "_k", "_j", "_m", "_l", "_o", "_n", "_q", "_p", "_s", "_r", "generateTabs", "tabsReports", "reportDetails", "EmptyNeighborhoodReportPage", "generateFullAddressFromParams", "optimisticRenderingForNewReports", "reportsList", "reportsToDisplay", "optimisticReport", "TextWithIcon", "StyledTab", "NeighborhoodReportSection", "setPermalink", "shouldRequestReportFromQueryParams", "setShouldRequestReportFromQueryParams", "setSearchParams", "useSearchParams", "setActiveTab", "setReportsList", "isManualLoading", "setIsManualLoading", "queryReportResult", "useReport", "zeroed", "isZeroed", "bbqQueryParams", "useQueryParamsBBQ", "recentReportsQueryData", "recentReportsIsLoading", "basePage", "propertyReportGetter", "reportGetters", "isInRenameSidebarItemsVariation", "firstProperty", "searchData", "searchListingsResult", "useSearchListings", "optionalProps", "firstPermalink", "headerText", "PropertyReport", "fullAddress", "displayAddress", "listingsFetchResults", "preforeclosureData", "totalPreforeclosures", "nearbyPropertiesTabs", "listingsNavigateAction", "zip5", "buildRecentlySoldHomeTab", "buildPreForeclosureTab", "sexOffenders", "propertyReportGeoLat", "propertyReportGeoLong", "currentTabs", "manualLoadingTimer", "filteredRecentReports", "highlightedTabIndex", "handleReportChange", "baseUrl", "ReportNullState", "LoadingDots", "ReportContextProvider", "PropertyResults", "_t", "_u", "MapRounded", "SearchPropertyForm", "TabsNavigation", "currentTab", "NeighborhoodWatch", "MarketInsights", "MyGarage", "MyGarageContainer", "StyledTabsNavigation", "IdMonitor", "isIn1448Variation", "isNotInRenameSidebarItemsVariation", "trackEvent", "escalatedParam", "tabParam", "newTab", "escalatedParamUrl", "settingsTab", "SettingsTiles", "ClaimedReportMonitorTiles", "MainHeader", "OneTimePasscodeProvider", "IdMonitorContainer", "creditBureauConsts", "TransunionLogo", "EquifaxLogo", "ExperianLogo", "CreditBureauContacts", "buildGridItems", "bureau", "section", "sectionIndex", "marginBottom", "number", "numberIndex", "ArrowBack", "AlertDetails", "isServiceTokenError", "useServiceToken", "sessionEscalationURL", "isNotificationsError", "markAllNotificationsAsDisplayed", "useOxford", "NotificationAlertsSummaries", "Loading", "ObituarySearchPage", "trackGA4", "LocalFlorist", "ObituarySearchForm", "Referrals", "ReferralForm", "PreTestTopSection", "PreTestTopSubtitle", "PreTestBottomSection", "PreTestSuggestionContainer", "PreTestPersonalityTraits", "onSearch", "fourMainPersonalityTypes", "fourMainPersonalityTypesMobile", "Favorite", "People", "Work", "PersonalityHeader", "personalityColorBanner", "personalityColorBar", "Psychology", "personalityTestTraitsHashMap", "personalityTraitsTooltipsCopyHashMap", "personalityTraitsHashMap", "usePersonalityDescriptions", "bigFiveTraits", "discTraits", "fourAspectsTraits", "fourAspectsTypes", "getFourAspectsType", "fourAspectsAnalysis", "trait", "traitAndTypeDescriptions", "traitAndTypeStrengths", "traitAndTypeWeaknesses", "personalityTrait", "renderImageBasedOnTrait", "personalityTraitsImages", "PTProgressBarContainer", "PTProgressBarText", "PTProgressBarBarContainer", "PTProgressBarBar", "PTProgressBarHandle", "PTProgressBar", "percentage", "PersonalityTraitDescriptionBox", "PersonalityTraitResultContainer", "PersonalityTraitResult", "personalityTraitResultType", "personalityTraitResultTypeLabel", "personalityTraitResultTypeDescription", "personalityTraitResultPercentrage", "personalityTraitResultStrengths", "personalityTraitResultWeaknesses", "expandedState", "setExpandedState", "handleExpand", "renderDescriptions", "ExpandLess", "ExpandCircleDown", "PersonalityTraitsTestsResultsWrapper", "PersonalityTraitsTestsResultsHeader", "PersonalityTraitsTestsResultsHeaderBody", "PersonalityTraitsTestsResultsMobileHeader", "StrengthsWeaknessesWrapper", "StrengthsWeaknessesContainer", "StrengthsWeaknessesUnorderedList", "StrengthsWeaknessesListItem", "renderStrengthsWeaknesses", "attributes", "attribute", "StrengthsWeaknesses", "strengths", "weaknesses", "Brightness7", "BrightnessLow", "PersonalityTraitsTestResults", "personalityTraitsResults", "personalityTraitsResultKey", "isDesktop", "getTitle", "getDescription", "getSummarizedDescription", "getStrengths", "getWeaknesses", "fourAspectsType", "highestScoreTrait", "highestScore", "highestScoreKey", "renderTestResultsSummary", "summaryParagraph", "renderPersonalityTraits", "personalityTraitTestName", "renderMobileHeader", "Tooltip", "Info", "ExpandMore", "PersonalityTraitsResultsContainer", "personalityScores", "retakeTest", "renderAllPersonalityTraits", "Refresh", "traitsTheme", "ModalContent", "StepContainer", "StepOne", "buttonOnClick", "colorBar", "personalityTraitsLogo", "personalityTraitsModal", "usePersonalityTraitsQuestions", "tokenData", "getQuestions", "token", "response", "questions", "middleQuestion", "endQuestion", "middleIndex", "i", "currentQuestion", "newScreenId", "usePostTraitsAnswers", "tokenIsLoading", "postAnswers", "answers", "usePersonalityTraitsAnswers", "getAnswers", "PREVIOUS_ACTION", "NEXT_ACTION", "DELAY_SHOW_DURATION", "DELAY_HIDE_DURATION", "getSavedQuestion", "savedQuestionIndex", "saveActiveQuestionIndex", "activeQuestion", "question", "usePersonalityTraitsWizard", "initialQuestions", "planId", "shuffledQuestions", "savedQuestion", "setActiveQuestion", "questionNumber", "setQuestionNumber", "progressBarPercentage", "setProgressBarPercentage", "questionSwitching", "setQuestionSwitching", "isReadyForSubmit", "setIsReadyForSubmit", "answersStorage", "setAnswersStorage", "savedAnswers", "_postAnswers", "storeQuestionAnswer", "answer", "_isLastQuestion", "_updateAnswersStorage", "_nextQuestion", "_translateQuestionToLeft", "storedAnswers", "filteredAnswers", "decreaseLastNumber", "prevAnswersStorage", "updatedAnswers", "storedAnswer", "existingAnswerIndex", "newAnswersStorage", "_identifyQuestion", "_isFirstQuestion", "_hideAndShowNextQuestion", "prevQuestion", "element", "screenId", "parts", "lastNumber", "action", "questionToRenderScreen", "_hideAndRestoreStyleHtmlElement", "questionToRender", "_showHtmlElement", "StyledButton", "Container", "PersonalityTraitsRadioButton", "answerSet", "customAttribute", "storeAnswer", "PersonalityTraitsButton", "ActiveComponent", "ContentContainer", "PersonalityTraitsLoading", "defaultOptions", "Lottie", "ProgressBarAdjusted", "ProgressBar", "QuestionsSurvey", "questionsSet", "onTimeoutComplete", "inputType", "isMiddleQuestion", "isLastQuestion", "ComponentToRender", "splitQuestionText", "breakIndex", "beforeBreak", "afterBreak", "timeout", "PersonalityTraitsModal", "ModalContainer", "CloseButton", "TraitsMultiStepModal", "step", "setStep", "timeoutCompleted", "setTimeoutCompleted", "startSurvey", "handleTimeoutComplete", "handleCloseModal", "ShowQuestions", "usePersonalityScore", "createAnswersMap", "answersMap", "scoringQuestionsMap", "calculateScore", "category", "questionCustomAttribute", "el", "analyzeDiscScore", "score", "analyzeFourAspectsScore", "PersonalityTraitsPage", "isTraitsModalOpen", "setIsTraitsModalOpen", "setPersonalityScores", "setFourAspectsAnalysis", "refetch", "handleTraitsModalOpen", "handleTraitsModalClose", "submitCompletedTestOnLoad", "answersToPost", "SectionHeader", "ScanImage1", "ScanImage2", "HowItWorksGridItem", "HowItWorksStack", "FullHeightCard", "StyledIconBox", "Fraud", "onSearchError", "tabState", "setTabState", "Radar", "FraudSearchContainer", "imgFraudScan1", "Mail", "LocationOn", "InsertLink", "EmojiEvents", "Public", "AutoGraph", "imgFraudScan2", "FactCheck", "CleaningServices", "Shield", "ContentPasteSearch", "AstrologyPage", "memberId", "Astrology", "ListsItem", "useAccountListsV2", "listName", "useParams", "list", "ListDetailsPage", "StyledText", "VERIFICATION_EVENT_ACTION", "VERIFICATION_EVENT_LABEL", "Login", "forwardRef", "onLoginSuccess", "statusParam", "setStatusParam", "useQueryParam", "StringParam", "emailVerificationAlert", "setEmailVerificationAlert", "captcha", "captchaReady", "sitekey", "renderCaptcha", "useCaptcha", "alertContent", "Alert", "LoginForm", "MuiLink", "OwnerSearchImg", "OwnerSearchGenericCTA", "ownerSearchGenericCta", "redirectToOwnerSearch", "ReportSection", "ReportBody", "FooterSearchContainer", "Report", "queryClient", "useQueryClient", "permalinkQuery", "setSession", "refetchAccount", "reportGetter", "reportIsMonitored", "reportMonitorIsLoading", "loading", "isInPartialAddressesVariation", "growthbook", "useGrowthBook", "permalinkMutation", "accountData", "context", "renderLoadingState", "UnclaimedMoneyReportLoading", "imgUnclaimedMoney", "Sidenav", "PersonReport", "PhoneReport", "EmailReport", "SocialReport", "VehicleReport", "ContactReportV2", "EmailFraudReport", "PhoneFraudReport", "IpFraudReport", "ObituaryReport", "AncestorReport", "UnclaimedMoneyReport", "UrlFraudReport", "SearchFooter", "ResetPassword", "ResetPasswordForm", "AuthenticatedRoute", "children", "isNonCompliant", "complianceRoutes", "isDashboard", "handleFreshnessHubUsers", "handleInternationalUsers", "useReactivation", "isUserLoggedIn", "invalidateSession", "goToLogin", "Navigate", "PublicRoute", "isAuthenticated", "ConsolidatedStickyContainer", "NavButton", "OptionResults", "SearchHeader", "PersonFiltersContainer", "ResultsContainer", "SearchResultsGrid", "SearchbotStickyContainer", "isChatbotOpen", "SearchbotSizebleContainer", "Accordion", "shouldDisplayReportSearch", "SubmitButton", "SidebarContainer", "PersonFilters", "advancedSearchUrlParams", "onCollapse", "parentSidebarCollapsed", "setParentSidebarCollapsed", "formRef", "isSidebarCollapsed", "setIsSidebarCollapsed", "useMediaQuery", "isTabletOrMobile", "isMedium", "consolidatedFilterDefaults", "parseConsolidatedFilterInfo", "filterRef", "handleExternalSubmit", "handleExternalClear", "collapsible", "ShowExternalButton", "filterHeaderStyles", "TuneRounded", "Tune", "ConsolidatedSidebar", "ConsolidatedFilter", "SearchHeaderContainerCarousel", "top", "ActiveFiltersButton", "SearchHeaderCarousel", "selectedOption", "setSelectedOption", "isInMobileFiltersAndTabsVariation", "scrollContainerRef", "optionRefs", "container", "selectedButton", "containerRect", "buttonRect", "offset", "handleSelectTab", "getFiltersCount", "viewTypes", "tableTypes", "CHATBOT_INTERACTION_TYPES", "SearchHeaderDesktop", "currentView", "setCurrentView", "isFilterCollapsed", "setIsFilterCollapsed", "setIsChatbotOpen", "initialNotificationVisible", "setInitialNotificationVisible", "capitalizeFullName", "capitalizeEachWord", "isInChatbotVariation", "isInChatbotVariationDesktop", "meetTableViewCriteria", "getActiveFiltersCount", "industry", "level", "birthYear", "birthMonth", "deathYear", "deathMonth", "fullName", "company_size_max", "company_size_min", "val", "CollapsedFiltersButton", "FilterList", "Cancel", "AutoAwesome", "NotificationMessage", "SCROLL_OFFSET", "MAX_NAME_LENGTH", "MAX_LIST_ITEMS", "deduplicateArray", "array", "deduplicateObjectsByKey", "seen", "formatName", "titleize", "excludeAgeFromName", "scrollToCard", "cardRect", "offsetPosition", "formatShorthandDate", "date", "includeDay", "parsed", "getUniqueRelatives", "relatives", "relativesBvIds", "uniqueRelatives", "uniqueRelativesBvIds", "relativeMap", "relative", "relativeBvId", "bvid", "CardContainer", "HeaderStack", "IconWrapper", "PersonIconWrapper", "InfoSection", "ExpandButton", "mt", "AdditionalDetailsBox", "StyledChevron", "NameTypography", "SecondaryTextTypography", "SecondaryTextSubtitleTypography", "Spellcheck", "DetailsBox", "ListContentItem", "MoreItemsIndicator", "displayed", "CustomList", "maxItems", "uniqueItems", "List", "ListItem", "CustomListItem", "hasAction", "isCapitalized", "RelativesList", "CompaniesList", "companies", "companiesArray", "uniqueCompanies", "PhonesList", "phones", "uniquePhones", "BaseCard", "isExpandable", "onDetailsClick", "renderIcon", "renderHeader", "renderExpandedContent", "footerText", "isExpanded", "setIsExpanded", "handleExpandToggle", "cardElement", "KeyboardArrowDown", "OpenInNew", "KeyboardArrowUp", "MobilePersonCard", "nameMatched", "birthInfo", "locations", "aliases", "onSuccess", "relativesNotSerialized", "openReport", "openReportInNewTab", "handleRelativeClick", "handleOpenMainPersonReport", "mainLocation", "formattedName", "safeName", "Person", "DarkTooltip", "PersonCards", "searchPersonResult", "isInMobileAndIsInStreamlinedTestVariant", "PersonSearchNoResults", "person", "allBvIds", "MobilePersonCardVariation1", "ConsolidatedSearchResultCard", "PersonCardLoading", "itemList", "_index", "Skeleton", "IconContainer", "StyledResultsTableHead", "StyledResultsTableRow", "StyledResultsTableCell", "StyledResultsTableContainer", "StyledResultsTableText", "StyledResultsTableNameColumn", "personHeaders", "familySearchHeaders", "obituaryHeaders", "contactHeaders", "residentHeaders", "TABLE_LIST_LIMIT", "setValidListInfo", "words", "bvids", "word", "ListColumn", "goToReport", "extraItems", "AgeColumn", "removeNumberPattern", "extractAddresses", "formattedFamilySearchDataForTable", "familySearchData", "fName", "lName", "getMonthAbbreviation", "personRelatives", "personAddresses", "NameColumn", "id", "TableContainer", "tableType", "headers", "showRow", "header", "row", "rowValue", "isLink", "PersonTable", "shouldOpenReportInCurrentTab", "tabData", "openReportInExistingTab", "columnFornName", "columnForAge", "columnForAliases", "columnForLocations", "columnForRelatives", "PersonResultsContainer", "isInTableView", "MobileObituaryCard", "dob", "dod", "handleOpenObituaryReport", "windowObjectReference", "windowTarget", "ObituaryCards", "searchObituaryResult", "searchObituaryQuery", "sortedObits", "useSortedObitResults", "obituary", "MobileObituaryCardVariation1", "ObituaryResultsCardv2", "ObituaryTable", "goToObituaryReport", "ObituaryResultsContainer", "getObituarySearchParams", "SearchLogo", "searchLogo", "ResidentNoResults", "getSearchQueryParams", "handleSearchLocation", "locationValue", "MobileResidentCard", "addresses", "names", "handleOpenAddressReport", "nameize", "dateRange", "getDatesSeen", "formattedPhone", "formatPhone", "formattedPhones", "ResidentCards", "searchResidentResult", "residents", "resident", "MobileResidentCardVariation1", "ResidentCardv2", "ResidentTable", "residentsList", "residentInfo", "mapResidentsToResidentInfo", "rawResidentData", "columnForName", "columnForPhones", "columnForDateSeen", "ResidentResultsContainer", "count", "MobileProfessionalCard", "onCompanyClick", "onViewReport", "handleOpenProfessionalReport", "handleCompanyClick", "companyName", "displayedCompanies", "firstCompany", "ContactCards", "searchContactResult", "contacts", "redirectToSearchContactUrl", "redirectToSearchContactUrlNewTab", "getCompanyUrl", "openInNewTab", "handleViewReport", "contactId", "result", "MobileProfessionalCardVariation1", "ProfessionalCard", "NoContactResults", "ContactTable", "contact", "columnForCompanies", "ContactResultsContainer", "ContactResultSkeleton", "MobileGenealogyCard", "familySearchId", "handleOpenMainGenealogyReport", "FamilySearchResults", "familySearchInfo", "ip", "setIp", "personResults", "formattedFamily", "formattedFamilySearchData", "getFullName", "mName", "obitRedirectMessage", "MobileGenealogyCardVariation1", "FamilySearchTable", "setResults", "goToFamilySearchReport", "FamilySearchResultsContainer", "isInTabletView", "counts", "PersonFetcher", "setPersonResults", "updatedSearchData", "isFetched", "isError", "useSearchPerson", "getPersonSearchParams", "ObituaryFetcher", "setObituaryResults", "useSearchObituary", "FamilySearchFetcher", "setFamilySearchResults", "useFamilySearch", "getAncestorSearchParams", "calculateAgeAtDeath", "birthYearStr", "birthMonthStr", "deathYearStr", "deathMonthStr", "parseDate", "getDeathIndexSearchParams", "deathDate", "birthDate", "MIN_DEATH_YEAR_NY", "MAX_DEATH_YEAR_NY", "MIN_DEATH_YEAR_CA", "MAX_DEATH_YEAR_CA", "DeathIndexesFetcher", "setDeathIndexResults", "enableNYRequest", "setEnableNYRequest", "enableCARequest", "setEnableCARequest", "nyData", "nyError", "nyFetching", "useNewYorkDeathIndex1957To1972", "caData", "caError", "caFetching", "useCaliforniaDeathIndex1940To1997", "isInDeathYearRange", "indexType", "canExecuteNYRequest", "canExecuteCARequest", "enabledRequests", "request", "recordsPerSource", "firstPassResults", "remainingRecords", "remainingSlots", "ContactFetcher", "setContactResults", "useSearchContact", "getContactSearchParams", "ResidentFetcher", "setResidentResults", "getResidentSearchParams", "MobileDeathIndexCard", "deathIndexRecord", "collectionName", "REPORT_TYPE", "familyTreeImages", "firstName", "middleName", "lastName", "country", "county", "estimatedBirthYear", "estimatedBirthDate", "recordId", "birthText", "collectionId", "COLLECTION_RECORD_IDS", "claimedReportPermalink", "setClaimedReportPermalink", "familyTreeData", "useAncestryTree", "recordInFamilyTree", "member", "isRecordAlreadyAdded", "getClaimedReports", "handleAddingToFamilyTree", "formattedData", "formatFamilyTreeDataFromDataCollection", "handleOpenMainDeathIndexReport", "formatDateToMMDDYYYY", "dateStr", "month", "day", "ArrowOutward", "DeathIndexCards", "records", "record", "MobileDeathIndexCardVariation1", "DeathIndexResultsCard", "DeathIndexResultsContainer", "getDurationBetweenTimestamps", "start", "end", "ms", "seconds", "minutes", "SearchPersonResultsv2", "CollectionType", "manualSwitch", "setManualSwitch", "obituaryResults", "deathIndexResults", "contactResults", "residentResults", "familySearchResults", "chatbotInitialTime", "setChatbotInitialTime", "isInChatbotVariationMobile", "advancedSearch", "source", "personResultsCount", "obituaryResultsCount", "deathIndexResultsCount", "contactResultsCount", "residentResultsCount", "familySearchResultsCount", "formatLength", "fetchPerson", "fetchObituary", "fetchAncestor", "fetchContact", "fetchResident", "fetchDeathIndex", "trackSearchResultsInteraction", "handleTabSwitch", "handleChatbotInteraction", "hasContactInfo", "hasObituaryInfo", "hasResidentInfo", "fetchers", "renderResults", "toggleCurrentView", "newView", "section_name", "ShowHeaderTabs", "toggleIsFilterCollapsed", "personFiltersContainerStyles", "filterContainerStyles", "styles", "shouldCollapse", "SearchpalChatbotPersistentView", "SearchAssistantMobileContainer", "SearchAssistantPersistantIcon", "SearchPersonResultsContainerv2", "formatListingsText", "resultsTextMapByResultType", "zip", "lat", "long", "paginationResultsRangeText", "currentPage", "perPage", "totalResults", "Main", "prop", "StyledTopBar", "StyledDrawer", "Drawer", "MobileMapButton", "SearchListingResults", "setOpen", "isMapToggleOn", "setIsMapToggleOn", "isTableView", "setIsTableView", "handleMapToggle", "handleMobileMapClick", "PER_PAGE", "PER_PAGE_STR", "ddPlanName", "minPrice", "maxPrice", "bedrooms", "bathrooms", "rentalsMinPrice", "rentalsMaxPrice", "rentalsBedrooms", "rentalsBathrooms", "sortListings", "shouldDisplayFilters", "shouldAllowSorting", "marketAvailableBySearchType", "pageParamBySearchType", "searchValue", "marketName", "numOfPagesInPagination", "paginationCountText", "newPage", "paramNameBySearchType", "listingData", "renderDataCards", "typedData", "ListingDataCard", "ListingDetailsModal", "mobileButtonIconAndText", "iconName", "Icon", "Map", "RapidsListingsSearch", "ListingResultsFilters", "StyledSwitch", "ListingsSortFilter", "ListingResultsDataViewToggle", "ListingDataTable", "NoListingsResults", "MapboxMap", "map", "ListingPoints", "DragToSearch", "ZoomToSearch", "ParcelBoundaries", "SatelliteToggle", "Reactivation", "ReactivationComponent", "NotFound", "goToDashboard", "Avatar", "notFound", "ErrorPage", "supportEmail", "navigateFunction", "errorStatusCode", "warning", "planTitles", "fallbackTitles", "customPlanTitle", "mostPopularPlanLimit", "getPlanTitleAndDescription", "planLimit", "isCustomPlan", "planCostPerReport", "plan", "costPerReport", "planSavings", "currentPlan", "savings", "getCustomPlan", "brandPlan", "mapPlan", "getPlans", "brandPlans", "isDownsellVariation", "filteredPlans", "getBillingFrequency", "renewalPeriod", "UpgradePlanContent", "UpgradePlanPage", "isInDownsellVariation", "accountLoaded", "isStaff", "isCancelledSubscription", "amount", "limit", "setIsLoading", "plans", "setPlans", "selectedPlan", "setSelectedPlan", "upgradeState", "setUpgradeState", "isState", "customPlanId", "useGetPlans", "customPlanUpgrade", "useCustomPlanUpgrade", "customUpgradeOption", "upgradePlans", "selectedPlans", "timer", "showDefaultError", "onSelectPlan", "setBillingFrecuency", "setBilledPrice", "setOpenTosModal", "updateLegalQuery", "useSubmitLegal", "openTosModal", "processingPayment", "setProcessingPayment", "billingFrecuency", "billedPrice", "onCloseTos", "onAcceptTos", "upgradePlan", "paymentMethodQuery", "useGetPaymentMethod", "processCardQuery", "useProcessCard", "processPayPalQuery", "useProcessPayPal", "processBraintreeQuery", "useProcessBraintree", "upgradeErrors", "setUpgradeErrors", "hadPaymentErrors", "setHadPaymentErrors", "activePaymentQueryRefetched", "activePayment", "filterActivePaymentMethod", "queryOptions", "cause", "mutationFunctions", "paymentType", "getPaymentType", "mutationFunction", "mutationParams", "hasPlans", "handleSelectedPaymentMethod", "handleClosePaymentSelectionModal", "handleCloseAddPaymentModal", "CircularProgress", "UpgradePlan", "TosModal", "ProcessingSpinnerModal", "UpgradeSuccessModal", "UpgradeFailureModal", "captchaId", "ReportVelocityCaptcha", "captchaClassName", "reportParam", "CLICK_OUT_PARTNER_COMPONENT", "modalStyles", "RewardsOffersTab", "useRewards", "activeReward", "setActiveReward", "hasSelectedReward", "initialRecordSearch", "Rewards", "ClickOutPartner", "IdentityMonitorTab", "MemberPerksTabs", "newIndex", "RewardsPage", "PerksPage", "StickyContainer", "SearchObituaryResults", "isCollapsed", "setIsCollapsed", "handleCollapseToggle", "prevState", "dobArray", "dobString", "ageFromDob", "resultsTitle", "ObituaryResultsCard", "PersonSearchLoading", "ANCESTRY_TREE_INITIAL_MEMBER_COUNT", "ANCESTRY_TREE_MEMBER_COUNT_FOR_TWO_MEMBERS", "MAX_REPORTS", "LoadingContent", "FamilyTreePage", "isInitialLoading", "setIsInitialLoading", "openMenuParam", "setOpenMenuParam", "setClaimedReports", "hasReachedMonitorsLimit", "setHasReachedMonitorsLimit", "permalinkParam", "toggleReportIsMonitored", "updateMonitorMutation", "openParam", "newUrl", "lastMonitorAdded", "monitor", "FamilyTreeWithRelatives", "cleanMenuParam", "isUserOnMainReport", "allPossibleRelativesMainReport", "setAllPossibleRelativesMainReport", "selectedRelativesToAdd", "setSelectedRelativesToAdd", "setBvid", "setRelatives", "reportIndi", "setReportIndi", "newAncestryTreeData", "setNewAncestryTreeData", "isCleanView", "setIsCleanView", "hasPersonReportRelativeToAddAfterNewTree", "setHasPersonReportRelativeToAddAfterNewTree", "previousHasPersonReportRelativeToAddAfterNewTree", "setPreviousHasPersonReportRelativeToAddAfterNewTree", "localStorageTriggerCount", "setLocalStorageTriggerCount", "removeRelativeFromLocalStorage", "prev", "ancestryTreeData", "getAncestryTreeError", "getAncestryTreeErrorObj", "isAncestryTreeLoading", "useAncestryTreeV2", "postAncestryTreeMutation", "postAncestryTreeIsError", "isPostingTree", "usePostAncestryTree", "coreResultData", "handleNavigateToTreeBuilder", "handleCleanViewToggle", "newValue", "owner", "ReportFactory", "identity", "reportBvid", "emptyAddress", "formattedAddress", "formatAddressFromReport", "capitalizeString", "filteredIndis", "validIndiIds", "indi", "newFams", "fam", "validChildren", "childId", "ancestryTreePopulatedMember", "hasPersonReportRelativeToAdd", "eligibleMaxMemberCount", "thereIsPossibleRelatives", "addRelativesToNewTree", "showModalAfterClaimingTree", "FamilyTreeContentProvider", "FamilyTreeContent", "existingRecord", "recordMatches", "collectionMatches", "RecordPage", "record_id", "collection_id", "isFamilyTreeLoading", "shouldFetchNYDeathRecord", "shouldFetchCADeathRecord", "nyRecord", "isNYLoading", "isNYError", "useNewYorkDeathRecord1957To1972", "caRecord", "isCALoading", "isCAError", "useCaliforniaDeathRecord1940To1997", "recordToShow", "DeathIndexReportOverview", "OwnerSearchParent", "OwnerSearch"],
    "mappings": "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CACxB,gBACA,UACA,cACA,UAAA,EAGIC,EAAmB,CACvB,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MAAA,EAGIC,EAAsBC,GAGTH,EAAkB,IAAKI,GACtCD,EAAoBC,CAAK,EAAE,OAAO,CAAC,EAAE,kBAAkB,CAAA,EAEzC,KAAK,EAAE,EAGnBC,EAA2B,CAC/B,cAAe,CACb,MAAO,YACP,YAAa,CACX,+TACA,8eACF,EACA,sBAAuB,CACrB,qFACA,+JACF,CACF,EACA,kBAAmB,CACjB,MAAO,gBACP,YAAa,CACX,qYACA,8aACF,EACA,sBAAuB,CACrB,iFACA,gIACF,CACF,EACA,aAAc,CACZ,MAAO,cACP,YAAa,CACX,0SACA,uVACF,EACA,sBAAuB,CACrB,mEACA,4FACF,CACF,EACA,YAAa,CACX,MAAO,WACP,YAAa,CACX,uUACA,gaACF,EACA,sBAAuB,CACrB,mJACA,oEACF,CACF,EACA,SAAU,CACR,MAAO,qBACP,YAAa,CACX,kXACA,8LACF,EACA,sBAAuB,CACrB,sGACA,gGACF,CACF,EACA,WAAY,CACV,MAAO,YACP,YAAa,CACX,oFACA,m+BACF,EACA,sBAAuB,CACrB,mGACA,4GACF,CACF,EACA,UAAW,CACT,MAAO,WACP,YAAa,CACX,mFACA,+1BACF,EACA,sBAAuB,CACrB,kHACA,sIACF,CACF,EACA,UAAW,CACT,MAAO,cACP,YAAa,CACX,6EACA,w4BACF,EACA,sBAAuB,CACrB,8GACA,uJACF,CACF,EACA,UAAW,CACT,MAAO,SACP,YAAa,CACX,yEACA,q8BACF,EACA,sBAAuB,CACrB,8FACA,4FACF,CACF,EACA,KAAM,CACJ,MAAO,gCACP,YAAa,CACX,kYACF,EACA,sBAAuB,CAAC,CAC1B,EACA,KAAM,CACJ,MAAO,mCACP,YAAa,CACX,saACF,EACA,sBAAuB,CAAC,CAC1B,EACA,KAAM,CACJ,MAAO,+BACP,YAAa,CACX,+bACF,EACA,sBAAuB,CAAC,CAC1B,EACA,KAAM,CACJ,MAAO,kCACP,YAAa,CACX,mcACF,EACA,sBAAuB,CAAC,CAC1B,EACA,KAAM,CACJ,MAAO,kCACP,YAAa,CACX,8eACF,EACA,sBAAuB,CAAC,CAC1B,EACA,KAAM,CACJ,MAAO,sCACP,YAAa,CACX,+aACF,EACA,sBAAuB,CAAC,CAC1B,EACA,KAAM,CACJ,MAAO,iCACP,YAAa,CACX,+cACF,EACA,sBAAuB,CAAC,CAC1B,EACA,KAAM,CACJ,MAAO,kCACP,YAAa,CACX,kcACF,EACA,sBAAuB,CAAC,CAC1B,EACA,KAAM,CACJ,MAAO,kCACP,YAAa,CACX,sXACF,EACA,sBAAuB,CAAC,CAC1B,EACA,KAAM,CACJ,MAAO,iCACP,YAAa,CACX,+cACF,EACA,sBAAuB,CAAC,CAC1B,EACA,KAAM,CACJ,MAAO,mCACP,YAAa,CACX,uaACF,EACA,sBAAuB,CAAC,CAC1B,EACA,KAAM,CACJ,MAAO,gCACP,YAAa,CACX,qbACF,EACA,sBAAuB,CAAC,CAC1B,EACA,KAAM,CACJ,MAAO,oCACP,YAAa,CACX,0aACF,EACA,sBAAuB,CAAC,CAC1B,EACA,KAAM,CACJ,MAAO,gCACP,YAAa,CACX,8YACF,EACA,sBAAuB,CAAC,CAC1B,EACA,KAAM,CACJ,MAAO,gCACP,YAAa,CACX,qZACF,EACA,sBAAuB,CAAC,CAC1B,EACA,KAAM,CACJ,MAAO,+BACP,YAAa,CACX,kcACF,EACA,sBAAuB,CAAC,CAC1B,EACA,cAAe,CACb,MAAO,eACP,YAAa,CAAC,EACd,sBAAuB,CACrB,sCACA,0IACA,gLACA,iGACF,CACF,EACA,YAAa,CACX,MAAO,cACP,YAAa,CAAC,EACd,sBAAuB,CACrB,+BACA,uHACA,+IACA,8LACF,CACF,EACA,SAAU,CACR,MAAO,WACP,YAAa,CAAC,EACd,sBAAuB,CACrB,kCACA,8EACA,+MACA,6JACF,CACF,EACA,QAAS,CACP,MAAO,UACP,YAAa,CAAC,EACd,sBAAuB,CACrB,+BACA,yHACA,+GACA,yKACF,CACF,CAAA,EAGIC,EAAwB,CAC5B,cAAe,CACb,CACE,MAAO,UACP,YACE,4JACJ,EACA,CACE,MAAO,cACP,YACE,0IACJ,EACA,CACE,MAAO,kBACP,YACE,qGACJ,EACA,CACE,MAAO,aACP,YACE,uIACJ,EACA,CACE,MAAO,sBACP,YACE,qHACJ,EACA,CACE,MAAO,WACP,YACE,sIACJ,CACF,EACA,kBAAmB,CACjB,CACE,MAAO,cACP,YACE,gIACJ,EACA,CACE,MAAO,eACP,YACE,iIACJ,EACA,CACE,MAAO,sBACP,YACE,kHACJ,EACA,CACE,MAAO,gBACP,YACE,qHACJ,EACA,CACE,MAAO,kBACP,YACE,2HACJ,EACA,CACE,MAAO,2BACP,YACE,mIACJ,CACF,EACA,aAAc,CACZ,CACE,MAAO,WACP,YACE,6JACJ,EACA,CACE,MAAO,YACP,YACE,sHACJ,EACA,CACE,MAAO,YACP,YACE,mIACJ,EACA,CACE,MAAO,aACP,YACE,sHACJ,EACA,CACE,MAAO,SACP,YACE,mIACJ,EACA,CACE,MAAO,4BACP,YACE,8IACJ,CACF,EACA,YAAa,CACX,CACE,MAAO,UACP,YACE,uJACJ,EACA,CACE,MAAO,cACP,YACE,kIACJ,EACA,CACE,MAAO,kBACP,YACE,sGACJ,EACA,CACE,MAAO,aACP,YACE,sHACJ,EACA,CACE,MAAO,sBACP,YACE,0IACJ,EACA,CACE,MAAO,WACP,YACE,yIACJ,CACF,EACA,SAAU,CACR,CACE,MAAO,aACP,YACE,+HACJ,EACA,CACE,MAAO,aACP,YACE,iIACJ,EACA,CACE,MAAO,eACP,YACE,0HACJ,EACA,CACE,MAAO,iCACP,YACE,sIACJ,EACA,CACE,MAAO,0BACP,YACE,mIACJ,EACA,CACE,MAAO,kBACP,YACE,+KACJ,CACF,EACA,WAAY,CACV,CACE,MAAO,kBACP,YACE,kIACJ,EACA,CACE,MAAO,YACP,YACE,wHACJ,EACA,CACE,MAAO,aACP,YACE,iIACJ,EACA,CACE,MAAO,iBACP,YACE,oHACJ,EACA,CACE,MAAO,aACP,YACE,4GACJ,EACA,CACE,MAAO,UACP,YACE,gIACJ,CACF,EACA,UAAW,CACT,CACE,MAAO,WACP,YACE,gJACJ,EACA,CACE,MAAO,aACP,YACE,oIACJ,EACA,CACE,MAAO,gBACP,YACE,wHACJ,EACA,CACE,MAAO,YACP,YACE,oIACJ,EACA,CACE,MAAO,kBACP,YACE,oHACJ,EACA,CACE,MAAO,kBACP,YACE,mHACJ,CACF,EACA,UAAW,CACT,CACE,MAAO,cACP,YACE,4IACJ,EACA,CACE,MAAO,aACP,YACE,2IACJ,EACA,CACE,MAAO,eACP,YACE,oIACJ,EACA,CACE,MAAO,0BACP,YACE,iIACJ,EACA,CACE,MAAO,YACP,YACE,6JACJ,EACA,CACE,MAAO,mBACP,YACE,uJACJ,CACF,EACA,UAAW,CACT,CACE,MAAO,WACP,YACE,4HACJ,EACA,CACE,MAAO,UACP,YACE,6GACJ,EACA,CACE,MAAO,aACP,YACE,0IACJ,EACA,CACE,MAAO,iBACP,YACE,0GACJ,EACA,CACE,MAAO,gBACP,YACE,mHACJ,EACA,CACE,MAAO,YACP,YACE,kJACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,4BACP,YACE,8HACJ,EACA,CACE,MAAO,4BACP,YACE,6HACJ,EACA,CACE,MAAO,0BACP,YACE,2GACJ,EACA,CACE,MAAO,wBACP,YACE,kIACJ,EACA,CACE,MAAO,sBACP,YACE,sHACJ,EACA,CACE,MAAO,YACP,YACE,yJACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,2BACP,YACE,sHACJ,EACA,CACE,MAAO,6BACP,YACE,6GACJ,EACA,CACE,MAAO,4BACP,YACE,4GACJ,EACA,CACE,MAAO,2BACP,YACE,gHACJ,EACA,CACE,MAAO,0BACP,YACE,uIACJ,EACA,CACE,MAAO,gBACP,YACE,0GACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,kBACP,YACE,0KACJ,EACA,CACE,MAAO,qBACP,YACE,sJACJ,EACA,CACE,MAAO,+BACP,YACE,yIACJ,EACA,CACE,MAAO,0BACP,YACE,2GACJ,EACA,CACE,MAAO,2BACP,YACE,iHACJ,EACA,CACE,MAAO,uBACP,YACE,wHACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,0BACP,YACE,8EACJ,EACA,CACE,MAAO,iBACP,YACE,gHACJ,EACA,CACE,MAAO,6BACP,YACE,wKACJ,EACA,CACE,MAAO,yBACP,YACE,2GACJ,EACA,CACE,MAAO,0BACP,YACE,4JACJ,EACA,CACE,MAAO,6BACP,YACE,qIACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,oBACP,YACE,8HACJ,EACA,CACE,MAAO,wBACP,YACE,gIACJ,EACA,CACE,MAAO,2BACP,YACE,+JACJ,EACA,CACE,MAAO,sBACP,YACE,gJACJ,EACA,CACE,MAAO,8BACP,YACE,0JACJ,EACA,CACE,MAAO,gCACP,YACE,4IACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,4BACP,YACE,mIACJ,EACA,CACE,MAAO,sBACP,YACE,wKACJ,EACA,CACE,MAAO,0BACP,YACE,4IACJ,EACA,CACE,MAAO,4BACP,YACE,gIACJ,EACA,CACE,MAAO,0BACP,YACE,6JACJ,EACA,CACE,MAAO,4BACP,YACE,yHACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,+BACP,YACE,qLACJ,EACA,CACE,MAAO,0BACP,YACE,uMACJ,EACA,CACE,MAAO,0BACP,YACE,mJACJ,EACA,CACE,MAAO,2BACP,YACE,kKACJ,EACA,CACE,MAAO,6BACP,YACE,gKACJ,EACA,CACE,MAAO,yBACP,YACE,iJACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,kBACP,YACE,gLACJ,EACA,CACE,MAAO,4BACP,YACE,0JACJ,EACA,CACE,MAAO,2BACP,YACE,sKACJ,EACA,CACE,MAAO,yBACP,YACE,4HACJ,EACA,CACE,MAAO,6BACP,YACE,+JACJ,EACA,CACE,MAAO,oBACP,YACE,yHACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,4BACP,YACE,oIACJ,EACA,CACE,MAAO,YACP,YACE,iKACJ,EACA,CACE,MAAO,mBACP,YACE,mIACJ,EACA,CACE,MAAO,0BACP,YACE,kJACJ,EACA,CACE,MAAO,2BACP,YACE,+GACJ,EACA,CACE,MAAO,gBACP,YACE,6HACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,4BACP,YACE,+HACJ,EACA,CACE,MAAO,+BACP,YACE,iJACJ,EACA,CACE,MAAO,2BACP,YACE,2HACJ,EACA,CACE,MAAO,4BACP,YACE,iIACJ,EACA,CACE,MAAO,sBACP,YACE,yIACJ,EACA,CACE,MAAO,4BACP,YACE,qIACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,0BACP,YACE,sLACJ,EACA,CACE,MAAO,2BACP,YACE,mKACJ,EACA,CACE,MAAO,iCACP,YACE,iJACJ,EACA,CACE,MAAO,yBACP,YACE,kKACJ,EACA,CACE,MAAO,0BACP,YACE,iIACJ,EACA,CACE,MAAO,+BACP,YACE,wIACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,sBACP,YACE,0JACJ,EACA,CACE,MAAO,2BACP,YACE,kIACJ,EACA,CACE,MAAO,0BACP,YACE,sKACJ,EACA,CACE,MAAO,+BACP,YACE,+IACJ,EACA,CACE,MAAO,yBACP,YACE,oKACJ,EACA,CACE,MAAO,kBACP,YACE,uHACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,0BACP,YACE,uLACJ,EACA,CACE,MAAO,gCACP,YACE,4HACJ,EACA,CACE,MAAO,wBACP,YACE,+JACJ,EACA,CACE,MAAO,0BACP,YACE,6NACJ,EACA,CACE,MAAO,sBACP,YACE,kKACJ,EACA,CACE,MAAO,iCACP,YACE,8KACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,wBACP,YACE,kJACJ,EACA,CACE,MAAO,2BACP,YACE,2IACJ,EACA,CACE,MAAO,yBACP,YACE,6HACJ,EACA,CACE,MAAO,wBACP,YACE,mJACJ,EACA,CACE,MAAO,6BACP,YACE,4HACJ,EACA,CACE,MAAO,cACP,YACE,yIACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,6BACP,YACE,2LACJ,EACA,CACE,MAAO,+BACP,YACE,wJACJ,EACA,CACE,MAAO,2BACP,YACE,kIACJ,EACA,CACE,MAAO,0BACP,YACE,iJACJ,EACA,CACE,MAAO,sBACP,YACE,kKACJ,EACA,CACE,MAAO,yBACP,YACE,uIACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,6BACP,YACE,iMACJ,EACA,CACE,MAAO,kBACP,YACE,6JACJ,EACA,CACE,MAAO,eACP,YACE,8JACJ,EACA,CACE,MAAO,sBACP,YACE,0IACJ,EACA,CACE,MAAO,eACP,YACE,sEACJ,EACA,CACE,MAAO,YACP,YACE,sIACJ,CACF,CAAA,EAGIC,EAAyB,CAC7B,cAAe,CACb,CACE,MAAO,mBACP,YACE,sKACJ,EACA,CACE,MAAO,wBACP,YACE,mJACJ,EACA,CACE,MAAO,0BACP,YACE,0IACJ,EACA,CACE,MAAO,qBACP,YACE,0HACJ,EACA,CACE,MAAO,iBACP,YACE,uJACJ,EACA,CACE,MAAO,wBACP,YACE,kKACJ,CACF,EACA,kBAAmB,CACjB,CACE,MAAO,gBACP,YACE,iKACJ,EACA,CACE,MAAO,WACP,YACE,oKACJ,EACA,CACE,MAAO,uBACP,YACE,mJACJ,EACA,CACE,MAAO,wBACP,YACE,2IACJ,EACA,CACE,MAAO,eACP,YACE,0HACJ,EACA,CACE,MAAO,4BACP,YACE,6IACJ,CACF,EACA,aAAc,CACZ,CACE,MAAO,cACP,YACE,kIACJ,EACA,CACE,MAAO,kBACP,YACE,yHACJ,EACA,CACE,MAAO,6BACP,YACE,8GACJ,EACA,CACE,MAAO,qBACP,YACE,qJACJ,EACA,CACE,MAAO,2BACP,YACE,2HACJ,EACA,CACE,MAAO,iBACP,YACE,iLACJ,CACF,EACA,YAAa,CACX,CACE,MAAO,qBACP,YACE,2JACJ,EACA,CACE,MAAO,qBACP,YACE,qIACJ,EACA,CACE,MAAO,0BACP,YACE,uHACJ,EACA,CACE,MAAO,qBACP,YACE,qHACJ,EACA,CACE,MAAO,iBACP,YACE,uIACJ,EACA,CACE,MAAO,wBACP,YACE,gKACJ,CACF,EACA,SAAU,CACR,CACE,MAAO,4BACP,YACE,gJACJ,EACA,CACE,MAAO,0BACP,YACE,oIACJ,EACA,CACE,MAAO,iBACP,YACE,uJACJ,EACA,CACE,MAAO,eACP,YACE,mJACJ,EACA,CACE,MAAO,cACP,YACE,qJACJ,EACA,CACE,MAAO,mCACP,YACE,oMACJ,CACF,EACA,WAAY,CACV,CACE,MAAO,yBACP,YACE,qIACJ,EACA,CACE,MAAO,QACP,YACE,uHACJ,EACA,CACE,MAAO,wBACP,YACE,oIACJ,EACA,CACE,MAAO,cACP,YACE,yHACJ,EACA,CACE,MAAO,0BACP,YACE,2GACJ,EACA,CACE,MAAO,gBACP,YACE,+HACJ,CACF,EACA,UAAW,CACT,CACE,MAAO,gBACP,YACE,sIACJ,EACA,CACE,MAAO,cACP,YACE,sIACJ,EACA,CACE,MAAO,aACP,YACE,4IACJ,EACA,CACE,MAAO,cACP,YACE,0HACJ,EACA,CACE,MAAO,wBACP,YACE,uJACJ,EACA,CACE,MAAO,oBACP,YACE,oIACJ,CACF,EACA,UAAW,CACT,CACE,MAAO,oBACP,YACE,iIACJ,EACA,CACE,MAAO,YACP,YACE,0GACJ,EACA,CACE,MAAO,eACP,YACE,oJACJ,EACA,CACE,MAAO,oBACP,YACE,iIACJ,EACA,CACE,MAAO,4BACP,YACE,+HACJ,EACA,CACE,MAAO,qCACP,YACE,6IACJ,CACF,EACA,UAAW,CACT,CACE,MAAO,uBACP,YACE,8GACJ,EACA,CACE,MAAO,wBACP,YACE,+GACJ,EACA,CACE,MAAO,kBACP,YACE,kHACJ,EACA,CACE,MAAO,gCACP,YACE,0HACJ,EACA,CACE,MAAO,2BACP,YACE,uIACJ,EACA,CACE,MAAO,wBACP,YACE,mIACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,oBACP,YACE,iJACJ,EACA,CACE,MAAO,yBACP,YACE,wGACJ,EACA,CACE,MAAO,2BACP,YACE,mIACJ,EACA,CACE,MAAO,2BACP,YACE,8IACJ,EACA,CACE,MAAO,6BACP,YACE,6HACJ,EACA,CACE,MAAO,yBACP,YACE,qIACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,oBACP,YACE,qIACJ,EACA,CACE,MAAO,oBACP,YACE,+GACJ,EACA,CACE,MAAO,yBACP,YACE,qHACJ,EACA,CACE,MAAO,wBACP,YACE,2GACJ,EACA,CACE,MAAO,oCACP,YACE,yGACJ,EACA,CACE,MAAO,iBACP,YACE,qHACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,kBACP,YACE,oJACJ,EACA,CACE,MAAO,YACP,YACE,+IACJ,EACA,CACE,MAAO,WACP,YACE,sIACJ,EACA,CACE,MAAO,6BACP,YACE,+JACJ,EACA,CACE,MAAO,sBACP,YACE,0JACJ,EACA,CACE,MAAO,wBACP,YACE,mIACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,0BACP,YACE,sIACJ,EACA,CACE,MAAO,0BACP,YACE,wIACJ,EACA,CACE,MAAO,iBACP,YACE,yIACJ,EACA,CACE,MAAO,iCACP,YACE,iHACJ,EACA,CACE,MAAO,gBACP,YACE,+HACJ,EACA,CACE,MAAO,4BACP,YACE,+HACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,mBACP,YACE,2JACJ,EACA,CACE,MAAO,yBACP,YACE,oIACJ,EACA,CACE,MAAO,6BACP,YACE,yIACJ,EACA,CACE,MAAO,uBACP,YACE,iIACJ,EACA,CACE,MAAO,wBACP,YACE,kIACJ,EACA,CACE,MAAO,oCACP,YACE,uJACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,gBACP,YACE,oJACJ,EACA,CACE,MAAO,0BACP,YACE,gIACJ,EACA,CACE,MAAO,gCACP,YACE,iHACJ,EACA,CACE,MAAO,2BACP,YACE,4HACJ,EACA,CACE,MAAO,iCACP,YACE,0GACJ,EACA,CACE,MAAO,wBACP,YACE,sJACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,gBACP,YACE,+HACJ,EACA,CACE,MAAO,cACP,YACE,2IACJ,EACA,CACE,MAAO,aACP,YACE,2JACJ,EACA,CACE,MAAO,2BACP,YACE,+HACJ,EACA,CACE,MAAO,WACP,YACE,wJACJ,EACA,CACE,MAAO,0BACP,YACE,0HACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,gBACP,YACE,2HACJ,EACA,CACE,MAAO,wBACP,YACE,2IACJ,EACA,CACE,MAAO,0BACP,YACE,6HACJ,EACA,CACE,MAAO,0BACP,YACE,uKACJ,EACA,CACE,MAAO,wCACP,YACE,oJACJ,EACA,CACE,MAAO,oCACP,YACE,6HACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,oBACP,YACE,8JACJ,EACA,CACE,MAAO,yBACP,YACE,mIACJ,EACA,CACE,MAAO,uBACP,YACE,yIACJ,EACA,CACE,MAAO,6BACP,YACE,kJACJ,EACA,CACE,MAAO,iCACP,YACE,4HACJ,EACA,CACE,MAAO,2BACP,YACE,uIACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,oBACP,YACE,6IACJ,EACA,CACE,MAAO,yBACP,YACE,oHACJ,EACA,CACE,MAAO,qCACP,YACE,8GACJ,EACA,CACE,MAAO,uBACP,YACE,kJACJ,EACA,CACE,MAAO,aACP,YACE,+JACJ,EACA,CACE,MAAO,0BACP,YACE,2IACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,kBACP,YACE,uIACJ,EACA,CACE,MAAO,uCACP,YACE,0JACJ,EACA,CACE,MAAO,+BACP,YACE,mKACJ,EACA,CACE,MAAO,4BACP,YACE,+HACJ,EACA,CACE,MAAO,oCACP,YACE,+HACJ,EACA,CACE,MAAO,gCACP,YACE,gJACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,iCACP,YACE,qIACJ,EACA,CACE,MAAO,gCACP,YACE,mKACJ,EACA,CACE,MAAO,kBACP,YACE,wJACJ,EACA,CACE,MAAO,iBACP,YACE,4JACJ,EACA,CACE,MAAO,qBACP,YACE,4KACJ,EACA,CACE,MAAO,8BACP,YACE,4HACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,uBACP,YACE,8IACJ,EACA,CACE,MAAO,uBACP,YACE,wJACJ,EACA,CACE,MAAO,uBACP,YACE,iIACJ,EACA,CACE,MAAO,wBACP,YACE,sJACJ,EACA,CACE,MAAO,2BACP,YACE,4HACJ,EACA,CACE,MAAO,gBACP,YACE,yJACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,wBACP,YACE,wIACJ,EACA,CACE,MAAO,qCACP,YACE,iIACJ,EACA,CACE,MAAO,mBACP,YACE,wIACJ,EACA,CACE,MAAO,+BACP,YACE,4IACJ,EACA,CACE,MAAO,yBACP,YACE,+GACJ,EACA,CACE,MAAO,iBACP,YACE,uIACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,uBACP,YACE,8IACJ,EACA,CACE,MAAO,gBACP,YACE,kIACJ,EACA,CACE,MAAO,kBACP,YACE,2IACJ,EACA,CACE,MAAO,iCACP,YACE,8JACJ,EACA,CACE,MAAO,eACP,YACE,4HACJ,EACA,CACE,MAAO,wBACP,YACE,wJACJ,CACF,EACA,KAAM,CACJ,CACE,MAAO,gBACP,YACE,mHACJ,EACA,CACE,MAAO,2BACP,YACE,wJACJ,EACA,CACE,MAAO,uBACP,YACE,oIACJ,EACA,CACE,MAAO,0BACP,YACE,uJACJ,EACA,CACE,MAAO,oBACP,YACE,4IACJ,EACA,CACE,MAAO,qCACP,YACE,iIACJ,CACF,CAAA,EAkBK,MAAA,CACL,cAAAT,EACA,WAAAC,EACA,kBAAAC,EACA,iBAAAC,EACA,mBAAAC,EACA,SArBgBM,GAChB,OAAA,QAAAt6B,EAAAm6B,GAAA,YAAAA,EAA2BG,KAA3B,YAAAt6B,EAA8C,QAAS,IAqBvD,eApBsBs6B,GACtB,OAAA,QAAAt6B,EAAAm6B,GAAA,YAAAA,EAA2BG,KAA3B,YAAAt6B,EAA8C,cAAe,IAoB7D,yBAnBgCs6B,GAChC,OAAA,QAAAt6B,EAAAm6B,GAAA,YAAAA,EAA2BG,KAA3B,YAAAt6B,EAA8C,wBAAyB,IAmBvE,aAjBAs6B,IAEAF,GAAA,YAAAA,EAAwBE,KAAqB,CAAA,EAgB7C,cAdAA,IAEAD,GAAA,YAAAA,EAAyBC,KAAqB,CAAA,CAY9C,CAEJ,EC/4DaC,GAA2BL,GAAkB,CAClD,MAAAM,EAA0Bj1B,EAAU,OAAO,kBA6BjD,MA5BoE,CAClE,KAAMi1B,EAAwB,UAC9B,KAAMA,EAAwB,UAC9B,KAAMA,EAAwB,QAC9B,KAAMA,EAAwB,QAC9B,KAAMA,EAAwB,UAC9B,KAAMA,EAAwB,UAC9B,KAAMA,EAAwB,UAC9B,KAAMA,EAAwB,UAC9B,KAAMA,EAAwB,UAC9B,KAAMA,EAAwB,UAC9B,KAAMA,EAAwB,QAC9B,KAAMA,EAAwB,QAC9B,KAAMA,EAAwB,UAC9B,KAAMA,EAAwB,UAC9B,KAAMA,EAAwB,UAC9B,KAAMA,EAAwB,UAC9B,cAAeA,EAAwB,cACvC,kBAAmBA,EAAwB,kBAC3C,aAAcA,EAAwB,aACtC,YAAaA,EAAwB,YACrC,SAAUA,EAAwB,SAClC,WAAYA,EAAwB,WACpC,UAAWA,EAAwB,UACnC,UAAWA,EAAwB,UACnC,UAAWA,EAAwB,SAAA,EAGAN,CAAK,CAC5C,EChCaO,GAAyBr5B,EAAOmD,CAAK,EAAE,CAAC,CAAE,MAAAjD,MAAa,CAClE,MAAO,MACP,QAAS,OACT,WAAY,SACZ,cAAe,MACf,CAACA,EAAM,YAAY,KAAK,IAAI,CAAC,EAAG,CAC9B,cAAe,SACf,MAAO,MACT,CACF,EAAE,EAEWo5B,GAAoBt5B,EAAO,MAAM,EAAE,CAAC,CAAE,MAAAE,MAAa,CAC9D,YAAa,OACb,WAAY,MACd,EAAE,EAEWq5B,GAA4Bv5B,EAAOmD,CAAK,EAAE,CAAC,CAAE,MAAAjD,MAAa,CACrE,MAAO,OACP,OAAQ,OACR,gBAAiB,UACjB,aAAc,MACd,SAAU,SACV,SAAU,WACV,cAAe,KACjB,EAAE,EAEWs5B,GAAmBx5B,EAAOmD,CAAK,EAAE,CAAC,CAAE,MAAAjD,EAAO,SAAAkvB,MAAgB,CACtE,MAAO,GAAGA,CAAQ,IAClB,OAAQ,OACR,gBAAiB,UACjB,aAAc,aAChB,EAAE,EAEWqK,GAAsBz5B,EAAOmD,CAAK,EAAE,CAAC,CAAE,MAAAjD,EAAO,SAAAkvB,MAAgB,CACzE,MAAO,OACP,OAAQ,OACR,aAAc,MACd,gBAAiB,UACjB,SAAU,WACV,IAAK,MACL,KAAM,GAAGA,CAAQ,IACjB,UAAW,uBACb,EAAE,EChCWsK,GAAgB,CAAC,CAAE,WAAAC,YAE3BN,GACC,CAAA,SAAA,CAAAv2B,OAACw2B,GAAmB,CAAA,SAAA,CAAAK,EAAW,GAAA,EAAC,SAC/BJ,GACC,CAAA,SAAA,CAAA32B,EAAA,IAAC42B,GAAiB,CAAA,SAAU,OAAOG,CAAU,CAAG,CAAA,EAC/C/2B,EAAA,IAAA62B,GAAA,CAAoB,SAAU,OAAOE,CAAU,CAAG,CAAA,CAAA,EACrD,CACF,CAAA,CAAA,EClBSC,GAAiC55B,EAAOmD,CAAK,EAAE,CAAC,CAAE,MAAAjD,MAAa,CAC1E,MAAO,QACP,UAAW,OACX,OAAQ,aAAaA,EAAM,QAAQ,KAAK,GAAG,CAAC,GAC5C,QAAS,OACT,aAAc,KAChB,EAAE,EAEW25B,GAAkC75B,EAAOmD,CAAK,EAAE,CAAC,CAAE,MAAAjD,MAAa,CAC3E,MAAO,MACP,cAAe,MACf,UAAW,OACX,eAAgB,gBAChB,CAACA,EAAM,YAAY,KAAK,IAAI,CAAC,EAAG,CAC9B,cAAe,QACjB,CACF,EAAE,ECEW45B,GAAyB,CAAC,CACrC,2BAAAC,EACA,gCAAAC,EACA,sCAAAC,EACA,kCAAAC,EACA,gCAAAC,EACA,iCAAAC,CACF,IAAmC,CACjC,KAAM,CAACC,EAAeC,CAAgB,EAAIr8B,WAAS,EAAK,EAElDs8B,EAAe,IAAM,CACzBD,EAAiB,CAACD,CAAa,CAAA,EAG3BG,EAAqB,IAClBP,EAAsC,IAAI,CAAC7W,EAAapkB,IAC5D4D,EAAAA,IAAAC,EAAA,CAAiB,aAAa,MAC5B,SADQugB,CAAA,EAAApkB,CAEX,CACD,EAID,OAAA8D,EAAA,KAACK,EAAA,CACC,QAASo3B,EACT,GAAKr6B,IAAW,CACd,OAAQ,UACR,aAAc,MACd,CAACA,EAAM,YAAY,KAAK,IAAI,CAAC,EAAG,CAC9B,aAAc,MAChB,CAAA,GAGF,SAAA,CAAA4C,OAAC+2B,GACC,CAAA,SAAA,CAAA/2B,OAACK,GAAM,MAAM,MAAM,cAAc,MAAM,WAAW,SAC/C,SAAA,CAAAk3B,EAAiBz3B,EAAA,IAAA63B,GAAA,CAAA,CAAW,EAAK73B,EAAA,IAAC83B,GAAiB,EAAA,EACpD93B,EAAAA,IAACC,EAAK,CAAA,GAAI,CAAE,WAAY,MAAO,SAAU,SAAU,MAAO,MAAO,EAC9D,SACHk3B,CAAA,CAAA,CAAA,EACF,EACAn3B,EAAAA,IAAC82B,GAAc,CAAA,WAAYQ,CAAmC,CAAA,CAAA,EAChE,EACCG,GAEGz3B,EAAA,IAAAS,WAAA,CAAA,SAAAP,OAAC82B,GACC,CAAA,SAAA,CAACh3B,EAAA,IAAAC,EAAA,CAAK,QAAQ,KAAM,SAAgCm3B,EAAA,EACnDQ,EAAmB,CAAA,CAAA,CACtB,CACF,CAAA,CAAA,CAAA,CAAA,CAIR,ECtEaG,GAAuC36B,EAAOmD,CAAK,EAC9D,CAAC,CAAE,MAAAjD,CAAA,KAAa,CACd,cAAe,SACf,MAAO,MAAA,EAEX,EAEa06B,GAAsC56B,EAAOmD,CAAK,EAC7D,CAAC,CAAE,MAAAjD,CAAA,KAAa,CACd,cAAe,MACf,OAAQ,OACR,MAAO,OACP,WAAY,aACZ,CAACA,EAAM,YAAY,KAAK,IAAI,CAAC,EAAG,CAC9B,cAAe,QACjB,CAAA,EAEJ,EAEa26B,GAA0C76B,EAAOmD,CAAK,EACjE,CAAC,CAAE,MAAAjD,CAAA,KAAa,CACd,MAAO,MACP,OAAQ,SACR,CAACA,EAAM,YAAY,KAAK,IAAI,CAAC,EAAG,CAC9B,MAAO,OACP,OAAQ,QACV,CAAA,EAEJ,EAEa46B,GAA4C96B,EAAOmD,CAAK,EACnE,CAAC,CAAE,MAAAjD,CAAA,KAAa,CACd,cAAe,MACf,MAAO,OACP,aAAc,MAAA,EAElB,ECpCa66B,GAA6B/6B,EAAOmD,CAAK,EAAE,CAAC,CAAE,MAAAjD,MAAa,CACtE,cAAe,MACf,WAAY,UACZ,MAAO,MACP,UAAW,OACX,CAACA,EAAM,YAAY,KAAK,IAAI,CAAC,EAAG,CAC9B,cAAe,QACjB,CACF,EAAE,EAEW86B,GAA+Bh7B,EAAOmD,CAAK,EAAE,CAAC,CAAE,MAAAjD,MAAa,CACxE,WAAY,aACZ,MAAO,OACP,OAAQ,sBACR,aAAc,MACd,QAAS,OACT,OAAQ,eACV,EAAE,EAEW+6B,GAAmCj7B,EAAO,IAAI,EAAE,CAAC,CAAE,MAAAE,MAAa,CAC3E,OAAQ,EACR,YAAa,MACf,EAAE,EAEWg7B,GAA8Bl7B,EAAO,IAAI,EAAE,CAAC,CAAE,MAAAE,MAAa,CACtE,UAAW,MACb,EAAE,ECzBWi7B,GACXC,GAEOA,EAAW,IAAI,CAACC,EAAWr8B,WAE7Bk8B,GACC,CAAA,SAAA,CAAAp4B,OAAC,SAAQ,CAAA,SAAA,CAAUu4B,EAAA,MAAM,GAAA,EAAC,EAAS,IAAEA,EAAU,WADf,CAAA,EAAAr8B,EAAQq8B,EAAU,KAEpD,CAEH,ECGUC,GAAsB,CAAC,CAClC,UAAAC,EACA,WAAAC,CACF,WAEKT,GACC,CAAA,SAAA,CAAAj4B,OAACk4B,GACC,CAAA,SAAA,CAACl4B,EAAAA,KAAAK,EAAA,CAAM,cAAc,MACnB,SAAA,CAACP,EAAAA,IAAA64B,GAAA,CAAY,SAAS,OAAQ,CAAA,QAC7B54B,EAAK,CAAA,QAAQ,KAAK,WAAW,MAAM,SAEpC,qBAAA,CAAA,EACF,EACCD,EAAA,IAAAq4B,GAAA,CACE,SAA0BE,GAAAI,CAAS,CACtC,CAAA,CAAA,EACF,SACCP,GACC,CAAA,SAAA,CAACl4B,EAAAA,KAAAK,EAAA,CAAM,cAAc,MACnB,SAAA,CAACP,EAAAA,IAAA84B,GAAA,CAAc,SAAS,OAAQ,CAAA,QAC/B74B,EAAK,CAAA,QAAQ,KAAK,WAAW,MAAM,SAEpC,sBAAA,CAAA,EACF,EACCD,EAAA,IAAAq4B,GAAA,CACE,SAA0BE,GAAAK,CAAU,CACvC,CAAA,CAAA,EACF,CACF,CAAA,CAAA,ECJSG,GAA+B,CAAC,CAC3C,yBAAAC,EACA,2BAAAC,EACA,oBAAAhD,CACF,IAAoC,CAClC,KAAM,CAACwB,EAAeC,CAAgB,EAAIr8B,WAAS,EAAK,EAClDiC,EAAQuH,KACR,CAAE,UAAAq0B,GAAc/6B,KAChB,CACJ,mBAAA63B,EACA,SAAAmD,EACA,eAAAC,EACA,yBAAAC,EACA,aAAAC,EACA,cAAAC,GACE5D,GAA2B,EAEzB6D,EAAkBvD,EACpBD,EAAmBC,CAAmB,EACtC,GAqBEwD,GAnBwC,IAAM,CAClD,IAAIC,EAAe,EACfC,EAAkB,GACtB,cAAO,KAAKjE,GAAyBuD,CAA0B,CAAC,EAAE,QAC/DhwB,GAAQ,CACH+vB,EAAyB/vB,CAAG,EAAIywB,IAClCA,EAAeV,EAAyB/vB,CAAG,EACzB0wB,EAAA1wB,EAEtB,CAAA,EAEG0wB,IACHA,EAAkB,OAAO,KACvBjE,GAAyBuD,CAA0B,GACnD,CAAC,GAEEU,CAAA,KAKHhC,EAAe,IAAM,CACzBD,EAAiB,CAACD,CAAa,CAAA,EAG3BmC,EAA2B,IAAM,CACrC,IAAIC,EAAmB,GAEvB,OAAIZ,IAA+B,eACjCG,EAAeI,CAAe,EAAE,IAC7BhZ,GAAiBqZ,GAAoB,IAAIrZ,CAAW,EAAA,EAE/CxgB,EAAAA,IAAAC,EAAA,CAAK,aAAa,MAAO,SAAiB45B,CAAA,CAAA,IAElDR,EAAyBI,CAAiB,EAAE,IACzCjZ,GAAiBqZ,GAAoB,IAAIrZ,CAAW,EAAA,EAE/CxgB,EAAAA,IAAAC,EAAA,CAAK,aAAa,MAAO,SAAiB45B,CAAA,CAAA,EACpD,EAGIC,EAA0B,IACvB,OAAO,KACZpE,GAAyBuD,CAA0B,CAAA,EACnD,IAAKc,GAA6B,CAClC,MAAMhD,EAAa,KAAK,MACtBiC,EAAyBe,CAAwB,EAAI,GAAA,EAEvD,OAAId,IAA+B,cAE/Bj5B,EAAA,IAACk3B,GAAA,CAEC,2BAA4BiC,EAASY,CAAwB,EAC7D,gCACEV,EAAyBU,CAAwB,EAAE,CAAC,EAEtD,sCAAuCV,EACrCU,CAAA,EACA,OAAO,CAAC,EACV,kCAAmChD,EACnC,gCAAiCuC,EAAaE,CAAe,EAC7D,iCAAkCD,EAAcC,CAAe,CAAA,EAV1DO,CAAA,EAeT/5B,EAAA,IAACk3B,GAAA,CAEC,2BAA4BiC,EAASY,CAAwB,EAC7D,gCAAiCZ,EAASY,CAAwB,EAClE,sCAAuCX,EACrCW,CACF,EACA,kCAAmChD,EACnC,gCAAiCuC,EAC/BS,CACF,EACA,iCAAkCR,EAChCQ,CACF,CAAA,EAZKA,CAAA,CAaP,CAEH,EAGGC,EAAqB,IAEvB95B,EAAA,KAACK,EAAM,CAAA,UAAU,OACf,SAAA,CAAAL,OAACg4B,GACE,CAAA,SAAA,CACCjC,EAAAj2B,EAAA,IAAC,MAAA,CACC,IAAKu2B,GAAwBiD,CAAe,EAC5C,MAAO,CAAE,MAAO,MAAO,CAAA,CAAA,EAGzBx5B,EAAA,IAAC,MAAA,CACC,IAAKu2B,GAAwBkD,CAAiB,EAC9C,MAAO,CAAE,MAAO,MAAO,CAAA,CACzB,EAEFv5B,EAAAA,KAACK,EAAM,CAAA,WAAW,OAChB,SAAA,CAAAL,EAAA,KAACD,EAAK,CAAA,QAAQ,OAAO,WAAW,SAC7B,SAAA,CAAAu1B,GAA6ByD,CAA0B,EACxDj5B,EAAA,IAACi6B,GAAA,CACC,MACExE,GACEwD,CACF,EAEF,UAAU,SACV,gBAAiB,EAEjB,SAAAj5B,EAAA,IAACk6B,GAAA,CACC,GAAI,CACF,SAAU,OACV,OAAQ,MACR,MAAO58B,EAAM,QAAQ,QAAQ,IAC/B,CAAA,CACF,CAAA,CACF,CAAA,EACF,EACA4C,EAAAA,KAACD,EAAK,CAAA,QAAQ,KAAK,SAAA,CAAA,qBACE,IAClBk5B,EAASK,GAAoCC,CAAiB,CAAA,EACjE,CAAA,EACF,CAAA,EACF,EACCG,EAAyB,EAC1B55B,EAAA,IAACsC,GAAA,CACC,QAAQ,YACR,QAASq1B,EACT,GAAI,CAAE,UAAW,OAAQ,MAAO,aAAc,EAE7C,WACGz3B,EAAAA,KAAAO,EAAA,SAAA,CAAA,SAAA,CAAA,cACMo3B,GAAW,EAAA,CAAA,CAAA,CACnB,EAEE33B,EAAAA,KAAAO,EAAA,SAAA,CAAA,SAAA,CAAA,cACM05B,GAAW,EAAA,CAAA,EACnB,CAAA,CAEJ,CACF,CAAA,CAAA,EAIJ,cACGpC,GACE,CAAA,SAAA,CAACmB,EAGAh5B,EAAA,KAAC83B,GACE,CAAA,SAAA,CACC/B,EAAAj2B,EAAA,IAAC,MAAA,CACC,IAAKu2B,GAAwBiD,CAAe,EAC5C,MAAO,CAAE,MAAO,MAAO,CAAA,CAAA,EAGzBx5B,EAAA,IAAC,MAAA,CACC,IAAKu2B,GAAwBkD,CAAiB,EAC9C,MAAO,CAAE,MAAO,MAAO,CAAA,CACzB,SAEDxB,GACC,CAAA,SAAA,CAAA/3B,EAAA,KAACD,EAAK,CAAA,QAAQ,OAAO,WAAW,SAC7B,SAAA,CAAAu1B,GAA6ByD,CAA0B,EACxDj5B,EAAA,IAACi6B,GAAA,CACC,MACExE,GACEwD,CACF,EAEF,UAAU,cACV,gBAAiB,EAEjB,SAAAj5B,EAAA,IAACk6B,GAAA,CACC,GAAI,CACF,SAAU,OACV,OAAQ,MACR,MAAO58B,EAAM,QAAQ,QAAQ,IAC/B,CAAA,CACF,CAAA,CACF,CAAA,EACF,EACA4C,EAAAA,KAACD,EAAK,CAAA,QAAQ,KAAK,SAAA,CAAA,qBACE,IAClBk5B,EAASK,GAAoCC,CAAiB,CAAA,EACjE,EACCG,EAAyB,CAAA,EAC5B,QACCt3B,GAAO,CAAA,QAAQ,YAAY,QAASq1B,EAClC,WACGz3B,EAAAA,KAAAO,EAAA,SAAA,CAAA,SAAA,CAAA,cACMo3B,GAAW,EAAA,CAAA,CAAA,CACnB,EAEE33B,EAAAA,KAAAO,EAAA,SAAA,CAAA,SAAA,CAAA,cACM05B,GAAW,EAAA,CAAA,CAAA,CACnB,CAEJ,CAAA,CAAA,EACF,EApDAH,EAEA,EAoDFh6B,EAAA,IAACO,EAAA,CACC,GAAKjD,IAAW,CACd,QAAS,OACT,MAAO,OACP,WAAY,MACZ,CAACA,EAAM,YAAY,KAAK,IAAI,CAAC,EAAG,CAC9B,QAAS,CACX,CAAA,GAGD,WAEI4C,EAAAA,KAAAO,EAAA,SAAA,CAAA,SAAA,CAAwBq5B,EAAA,EAAG,IAC5B95B,EAAA,IAAC04B,GAAA,CACC,UAEMY,EADJL,IAA+B,cACdO,EACAC,CADe,EAGlC,WAEMF,EADJN,IAA+B,cACbO,EACAC,CADe,CACE,CAEvC,CAAA,CAAA,CACF,EACE,IAAA,CACN,EACAz5B,EAAA,IAACmb,GAAA,CACC,GAAK7d,IAAW,CACd,QAAS,EACT,CAACA,EAAM,YAAY,KAAK,IAAI,CAAC,EAAG,CAC9B,QAAS,MACX,CAAA,EACF,CACF,CACF,CAAA,CAAA,CAEJ,ECnSa88B,GAAoC,CAAC,CAChD,kBAAAC,EACA,oBAAApE,EACA,WAAAqE,CACF,IAA8C,CAC5C,MAAMC,EAA6B,IAC1B,OAAO,KAAKF,CAAiB,EAAE,IAAKpxB,GACrCA,IAAQ,cAGNjJ,MAAAS,EAAAA,SAAA,CAAA,SAAAT,EAAA,IAAC+4B,GAAA,CAEC,yBAA0BsB,EAAkBpxB,CAAG,EAC/C,2BAA4BA,EAC5B,oBAAAgtB,CAAA,EAHKhtB,CAKT,CAAA,CAAA,EAIAjJ,EAAA,IAAC+4B,GAAA,CAEC,yBAA0BsB,EAAkBpxB,CAAG,EAC/C,2BAA4BA,CAAA,EAFvBA,CAAA,CAMZ,EAID,OAAA/I,EAAA,KAACK,EAAM,CAAA,MAAM,OACX,SAAA,CAAAL,EAAA,KAACK,EAAA,CACC,cAAc,MACd,eAAe,gBACf,OAAO,OACP,WAAW,aAEX,SAAA,CAACP,EAAA,IAAAC,EAAA,CAAK,QAAQ,KAAK,SAAwB,2BAAA,EAC3CC,EAAA,KAACoC,GAAA,CACC,QAAQ,WACR,KAAK,QACL,QAASg4B,EACT,GAAKh9B,IAAW,CACd,MAAO,cACP,SAAU,SACV,CAACA,EAAM,YAAY,KAAK,IAAI,CAAC,EAAG,CAC9B,MAAO,KACT,CAAA,GAGF,SAAA,CAAA0C,EAAA,IAACw6B,GAAQ,EAAA,EAAG,IACX,aAAa,QAAQ,gBAAgB,EAClC,gBACA,aAAA,CAAA,CACN,CAAA,CAAA,CACF,EACCD,EAA2B,CAC9B,CAAA,CAAA,CAEJ,ECvEaE,GAAc,CACzB,aAAc,CACZ,QAAS,CACP,QAAS,UACT,UAAW,SACb,EACA,UAAW,CACT,QAAS,UACT,UAAW,SACb,EACA,UAAW,CACT,QAAS,UACT,UAAW,SACb,EACA,UAAW,CACT,QAAS,UACT,UAAW,SACb,CACF,EACA,eAAgB,OAChB,kBAAmB,kCACnB,gBAAiB,UACjB,yBAA0B,UAC1B,oBAAqB,SACvB,ECrBaC,GAAet9B,EAAO,KAAK;AAAA,sBAClBq9B,GAAY,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA,EAOxCE,GAAgBv9B,EAAOmD,CAAK,EAAE,CAAC,CAAE,MAAAjD,MAAa,CACzD,QAAS,YACT,WAAY,SACZ,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,QAAS,gBACX,CACF,EAAE,EAEsCF,EAAOmD,CAAK,EAAE,CAAC,CAAE,MAAAjD,MAAa,CACpE,MAAO,OACP,cAAe,SACf,SAAU,OACV,eAAgB,eAChB,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,cAAe,KACjB,CACF,EAAE,EAEoCF,EAAO,KAAK,EAAE,CAAC,CAAE,MAAAE,MAAa,CAClE,MAAO,OACP,aAAc,MACd,UAAWm9B,GAAY,kBACvB,QAAS,OACT,QAAS,OACT,cAAe,SACf,eAAgB,SAChB,WAAY,SACZ,aAAc,OACd,CAACn9B,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,MAAO,QACP,aAAc,MAChB,CACF,EAAE,EAEkCF,EAAOmD,CAAK,EAAE,CAAC,CAAE,MAAAjD,MAAa,CAChE,WAAYm9B,GAAY,gBACxB,MAAO,OACP,eAAgB,SAChB,WAAY,SACZ,aAAc,MACd,OAAQ,iBACR,UAAWA,GAAY,kBACvB,QAAS,OACT,cAAe,SAEf,CAACn9B,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,cAAe,MACf,eAAgB,cAClB,CACF,EAAE,EAEwBF,EAAO,KAAK,EAAE,CAAC,CAAE,MAAAE,MAAa,CACtD,MAAO,QACP,OAAQ,QACR,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,MAAO,OACP,OAAQ,MACV,CACF,EAAE,EAEgCF,EAAOmD,CAAK,EAAE,CAAC,CAAE,MAAAjD,MAAa,CAC9D,WAAY,SAEZ,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,MAAO,OACP,eAAgB,eAChB,cAAe,KACjB,CACF,EAAE,EAE2BF,EAAOmD,CAAK,EAAE,CAAC,CAAE,MAAAjD,MAAa,CACzD,cAAe,SAEf,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,cAAe,KACjB,CACF,EAAE,EC/EK,MAAMs9B,GAAU,CAAC,CAAE,cAAAC,KAAkC,CACpD,MAAAC,EAAWv5B,EAAU,OAAO,SAC5Bw5B,EAAwBx5B,EAAU,OAAO,sBACzCy5B,EAAyBz5B,EAAU,OAAO,uBAEhD,cACGm5B,GACC,CAAA,SAAA,CAAA16B,EAAA,IAAC,MAAA,CACC,IAAK86B,EACL,MAAO,CACL,MAAO,OACP,MAAO,MACP,SAAU,WACV,IAAK,IACP,EACA,IAAI,WAAA,CACN,EACA96B,EAAA,IAAC,MAAA,CACC,IAAKg7B,EACL,IAAI,gCACJ,MAAO,CACL,SAAU,WACV,MAAO,OACP,IAAK,IACP,CAAA,CACF,SAECL,GACC,CAAA,SAAA,CAAA36B,EAAAA,IAACC,GAAK,QAAQ,KAAK,UAAW,SAAU,GAAI,IAAK,SAEjD,qCAAA,CAAA,EACAD,EAAAA,IAACC,GAAK,QAAQ,QAAQ,UAAW,SAAU,GAAI,EAAG,SAIlD,+IAAA,CAAA,EACAC,EAAA,KAACoC,GAAA,CACC,QAASu4B,EACT,QAAQ,YACR,GAAI,CAAE,gBAAiB,MAAO,EAC/B,SAAA,CAAA,6BAEE76B,EAAA,IAAA,MAAA,CAAI,IAAK+6B,EAAuB,IAAI,0BAA0B,CAAA,CAAA,CACjE,CAAA,EACF,CACF,CAAA,CAAA,CAEJ,ECjDaE,GAAgC,IAAM,CACjD,KAAM,CAAE,KAAMC,CAAU,EAAItH,GAAgB,SAAS,EAC/C,CAAE,SAAAnsB,CAAA,EAAavM,EAAA,WAAWC,EAAS,EAEzC,OAAOgb,GAAS,CACd,SAAU,CAAC,eAAe,EAC1B,QAAS,IAAMglB,GAAaD,GAAA,YAAAA,EAAW,KAAK,EAC5C,QAAUv1B,GAAU,CAIH,eAAA,QAAQ,gBAAiB,MAAM,EAC9C8B,EAAS,gDAAiD9B,CAAc,CAC1E,EACA,QAAS,CAAC,EAACu1B,GAAA,MAAAA,EAAW,OACtB,MAAO,CAAA,CACR,CACH,EAEaC,GAAe,MAAOC,GAAkB,CAC7C,MAAAC,EAAW,MAAM,MAAM,2CAA4C,CACvE,QAAS,CACP,eAAgB,mBAChB,cAAe,UAAUD,CAAK,EAChC,CAAA,CACD,EAEG,GAAA,CAACC,EAAS,GACZ,MAAM,IAAI,MAAM,UAAUA,EAAS,MAAM,EAAE,EAGvC,MAAAC,EAAY,MAAMD,EAAS,OAE3BE,EAAiB,CACrB,YAAa,mBACb,KAAM,EACN,OAAQ,EACR,UAAW,iBACX,cAAe,iDACf,SAAU,CACR,WAAY,CAAC,UAAU,EACvB,iBAAkB,gBAClB,UAAW,SACX,WAAY,QACd,CAAA,EAGIC,EAAc,CAClB,YAAa,mBACb,KAAM,EACN,OAAQ,EACR,UAAW,iBACX,cAAe,wDACf,SAAU,CACR,WAAY,CAAC,QAAQ,EACrB,iBAAkB,aAClB,UAAW,SACX,WAAY,QACd,CAAA,EAGIC,EAAc,KAAK,MAAMH,EAAU,aAAa,UAAU,OAAS,CAAC,EAG1EA,EAAU,aAAa,UAAU,OAAOG,EAAa,EAAGF,CAAc,EAIhE,QAAAG,EAAID,EAAc,EACtBC,EAAIJ,EAAU,aAAa,UAAU,OACrCI,IACA,CACA,MAAMC,EAAkBL,EAAU,aAAa,UAAUI,CAAC,EACpDE,EAAc,eAAe,OAAOF,EAAI,CAAC,EAAE,SAAS,EAAG,GAAG,CAAC,GACjEC,EAAgB,UAAYC,CAC9B,CAGU,OAAAN,EAAA,aAAa,UAAU,KAAKE,CAAW,EAE1CF,CACT,EAEaO,GAAuB,IAAM,CACxC,KAAM,CAAE,KAAMX,EAAW,UAAWY,GAClClI,GAAgB,SAAS,EACrB,CAAE,SAAAnsB,CAAA,EAAavM,EAAA,WAAWC,EAAS,EAEzC,eAAe4gC,EAAYC,EAAyC,CAC9D,GAAA,CACI,MAAAX,EAAW,MAAM,MAAM,sBAAuB,CAClD,OAAQ,OACR,QAAS,CACP,eAAgB,mBAChB,cAAe,UAAUH,GAAA,YAAAA,EAAW,KAAK,EAC3C,EACA,KAAM,KAAK,UAAUc,CAAO,CAAA,CAC7B,EAKG,GAACX,EAAS,GAGZ,OAAOA,EAAS,OAFhB,MAAM,IAAI,MAAM,UAAUA,EAAS,MAAM,EAAE,QAItC11B,EAAO,CACd8B,EAAS,+BAAgC9B,CAAc,CACzD,CACF,CAEO,MAAA,CACL,YAAAo2B,EACA,eAAAD,CAAA,CAEJ,EAEaG,GAA8B,IAAM,CAC/C,KAAM,CAAE,KAAMf,CAAU,EAAItH,GAAgB,SAAS,EAC/C,CAAE,SAAAnsB,CAAA,EAAavM,EAAA,WAAWC,EAAS,EAEzC,OAAOgb,GAAS,CACd,SAAU,CAAC,aAAa,EACxB,QAAS,SAAY,MAAM+lB,GAAWhB,GAAA,YAAAA,EAAW,KAAK,EACtD,QAAUv1B,GAAU,CAIlB8B,EAAS,8CAA+C9B,CAAc,CACxE,EACA,QAAS,CAAC,EAACu1B,GAAA,MAAAA,EAAW,OACtB,MAAO,CAAA,CACR,CACH,EAEagB,GAAa,MAAOd,GAAkB,CACjD,MAAMC,EAAW,MAAM,MACrB,iDACA,CACE,QAAS,CACP,eAAgB,mBAChB,cAAe,UAAUD,CAAK,EAChC,CACF,CAAA,EAGE,GAAA,CAACC,EAAS,GACZ,MAAM,IAAI,MAAM,UAAUA,EAAS,MAAM,EAAE,EAKtC,OAFS,MAAMA,EAAS,MAGjC,EChKac,GAAkB,OAElBC,GAAc,OAEdC,GAAsB,IAEtBC,GAAsB,ICS7BC,GAAoBjB,GAA+B,CACvD,MAAMkB,EAAqB,aAAa,QAAQ,qBAAqB,GAAK,GAC1E,OAAIA,EACKlB,EAAU,CAACkB,CAAkB,EAE/BlB,EAAU,CAAC,CACpB,EAEMmB,GAA0B,CAC9BnB,EACAoB,IACG,CACH,MAAMtgC,EAAQk/B,EAAU,UACrBqB,GAAaA,EAAS,YAAcD,EAAe,SAAA,EAEtD,aAAa,QAAQ,sBAAuB,KAAK,UAAUtgC,CAAK,CAAC,CACnE,EAEawgC,GACXC,GACG,CACG,KAAA,CACJ,QAAS,CAAE,QAAAlhC,CAAQ,GACjB6L,GAAW,EACT,CAAE,YAAAu0B,GAAgBF,KAClB,CAACiB,CAAM,EAAIzhC,EAAA,SAAiBwhC,EAAiB,aAAa,EAC1D,CAACvB,CAAS,EAAIjgC,EAAA,SAA0BwhC,EAAiB,SAAS,EAElEE,EAAoBzB,EAEpB0B,EAAgBT,GAAiBQ,CAAiB,EAClD,CAACL,EAAgBO,CAAiB,EACtC5hC,WAAwB2hC,CAAa,EACjCR,EAAqB,aAAa,QAAQ,qBAAqB,EACjE,KAAK,MAAM,aAAa,QAAQ,qBAAqB,CAAE,EACvD,EACE,CAACU,EAAgBC,CAAiB,EAAI9hC,EAAA,SAC1CmhC,EAAqB,CAAA,EAEjB,CAACY,EAAuBC,CAAwB,EAAIhiC,EAAA,SACvDmhC,EAAqBlB,EAAU,OAAU,GAAA,EAEtC,CAACgC,EAAmBC,CAAoB,EAAIliC,WAAkB,EAAK,EACnE,CAACmiC,EAAkBC,CAAmB,EAAIpiC,WAAkB,EAAK,EACjE,CAACqiC,EAAgBC,CAAiB,EAAItiC,WAAyB,IAAM,CACnE,MAAAuiC,EAAe,aAAa,QAAQ,gBAAgB,EAC1D,OAAOA,EAAe,KAAK,MAAMA,CAAY,EAAI,CAAA,CAAC,CACnD,EACD/hC,EAAAA,UAAU,IAAM,CACV2hC,IACFC,EAAoB,EAAK,EACZI,IACf,EACC,CAACL,CAAgB,CAAC,EAEf,MAAAM,EAAuBC,GAAyB,CAChD,GAAAA,EAAO,UAAYC,IAAmB,CACxCC,EAAsBF,CAAM,EAC5BN,EAAoB,EAAI,EACVS,IACd,MACF,CACA,GAAI,CAACH,EAAO,UAAYC,IAAmB,CAChBG,IACzBV,EAAoB,EAAI,EACxB,MACF,CAEAQ,EAAsBF,CAAM,EACdG,GAAA,EAGVL,EAAe,IAAM,CACnB,MAAAO,EAAgB,aAAa,QAAQ,gBAAgB,EAM3D,IAAIC,GALgCD,EAChC,KAAK,MAAMA,CAAa,EACxBV,GAGgC,OACjCK,GAAaA,EAAO,YAAc,gBAAA,EAIrCM,EAAkBA,EAAgB,IAAI,CAACN,EAAQ3hC,IACzC,SAAS2hC,EAAO,UAAU,MAAM,GAAG,EAAE,IAAI,EAAI,EAAE,EAAI,GAC9C,CACL,GAAGA,EACH,UAAWO,EAAmBP,EAAO,SAAS,CAAA,EAG3CA,CACR,EAEWhC,EAAA,CACV,UAAWpgC,GAAA,YAAAA,EAAS,QAAQ,UAAU,UACtC,QAASmhC,EACT,WAAY,sBACZ,QAASuB,CAAA,CACV,EAGDV,EAAkBU,CAAe,EAGjC,aAAa,QAAQ,iBAAkB,KAAK,UAAUA,CAAe,CAAC,CAAA,EAGlEJ,EAAyBF,GAAyB,CACtDJ,EAAmBY,GAAuB,CACxC,MAAMC,EAAiBD,EAAmB,OACvCE,GAAiBA,EAAa,YAAc,gBAAA,EAGzCC,EAAsBF,EAAe,UACxCC,IAAiBA,GAAA,YAAAA,EAAc,aAAcV,EAAO,SAAA,EAGnDW,IAAwB,IACXF,EAAA,OAAOE,EAAqB,CAAC,EAG9C,MAAMC,EAAoB,CAAC,GAAGH,EAAgBT,CAAM,EAEpD,oBAAa,QAAQ,iBAAkB,KAAK,UAAUY,CAAiB,CAAC,EAEjEA,CAAA,CACR,CAAA,EAGGC,EAAqBxiC,GAAiC,CAE1D,GAAIA,EAAQ,GAAKA,GAAS2gC,EAAkB,OACpC,MAAA,IAAI,MAAM,qBAAqB,EAEvC,OAAOA,EAAkB3gC,CAAK,CAAA,EAG1ByiC,EAAmB,IACvB9B,EAAkB,CAAC,EAAE,YAAcL,EAAe,UAE9CsB,EAAkB,IACtBjB,EAAkBA,EAAkB,OAAS,CAAC,EAAE,YAChDL,EAAe,UAEXwB,EAAgB,IAAM,CACDC,IACzBW,EAAyB1C,EAAW,CAAA,EAGhC2C,EAAe,IAAM,CACrBF,EAAiB,IAEIV,IACzBW,EAAyB3C,EAAe,EAAA,EAIpCgC,EAA2B,IAAM,CACrCZ,EAAqB,EAAI,EACzB,MAAMyB,EAAU,SAAS,eACvB,aAAatC,EAAe,SAAS,EAAA,EAEnCsC,IAEMA,EAAA,MAAM,UAAY,sBAC5B,EAGIV,EAAsBW,GAAqB,CACzC,MAAAC,EAAQD,EAAS,MAAM,GAAG,EAC1BE,EAAa,SAASD,EAAMA,EAAM,OAAS,CAAC,EAAG,EAAE,EAAI,EACrD,OAAAA,EAAAA,EAAM,OAAS,CAAC,EAAI,OAAOC,CAAU,EAAE,SAAS,EAAG,GAAG,EACrDD,EAAM,KAAK,GAAG,CAAA,EAGjBJ,EAA4BM,GAAmB,CACnD,IAAIC,EAAyB,EAC7B,MAAML,EAAU,SAAS,eACvB,aAAatC,EAAe,SAAS,EAAA,EAElCsC,GAEL,WAAW,IAAM,CACfM,EAAgCN,CAAO,EAEnCI,IAAWhD,IACYiD,EAAA,SAAS7C,CAAkB,EAAI,EACxDW,EAAkBD,EAAiB,CAAC,IAEXmC,EAAA,SAAS7C,CAAkB,EAAI,EACxDW,EAAkBD,EAAiB,CAAC,GAGhC,MAAAqC,EAAmBX,EAAkBS,CAAsB,EACjEpC,EAAkBsC,CAAgB,EAClClC,EACGH,EAAiBH,EAAkB,OAAU,GAAA,EAEhDyC,EAAiBR,CAAO,GACvB1C,EAAmB,CAAA,EAGlBgD,EAAmCN,GAAyB,CAC5DA,IACMA,EAAA,UAAU,IAAI,QAAQ,EAC9BA,EAAQ,MAAM,UAAY,mBAC5B,EAGIQ,EAAoBR,GAAyB,CAC7CA,GACF,WAAW,IAAM,CACPA,EAAA,UAAU,OAAO,QAAQ,EACjCzB,EAAqB,EAAK,GACzBlB,EAAmB,CACxB,EAIFxgC,OAAAA,EAAAA,UAAU,IAAM,CACd4gC,GAAwBM,EAAmBL,CAAc,CAAA,EACxD,CAACA,EAAgBpB,CAAS,CAAC,EAEvB,CACL,aAAAyD,EACA,kBAAAzB,EACA,eAAAZ,EACA,sBAAAU,EACA,oBAAAU,CAAA,CAEJ,ECpPa2B,GAAeriC,EAAOkF,EAAM,EAAE,CAAC,CAAE,MAAAhF,MAAa,CACzD,SAAU,OACV,QAAS,MACT,OAAQ,OACR,YAAa,MACb,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,SAAU,OACV,YAAa,MACb,aAAc,MACd,OAAQ,MACV,CACF,EAAE,EAEWoiC,GAAYtiC,EAAO,KAAK,EAAE,CAAC,CAAE,MAAAE,MAAa,CACrD,SAAU,QACV,eAAgB,SAChB,OAAQ,OACR,QAAS,OACT,cAAe,iBACf,SAAU,OACV,MAAO,OACP,IAAKA,EAAM,QAAQ,GAAG,EACtB,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,SAAU,QACV,IAAKA,EAAM,QAAQ,GAAG,CACxB,CACF,EAAE,EAE2BF,EAAOmD,CAAK,EAAE,KAAO,CAChD,cAAe,MACf,eAAgB,eAChB,MAAO,MACT,EAAE,EC3BK,MAAMo/B,GAA+B,CAAC,CAC3C,UAAAC,EACA,SAAAX,EACA,gBAAAY,EACA,YAAAC,CACF,IAAiC,CACzB,KAAA,CAAE,SAAA5hC,GAAaC,KAEnB,OAAA6B,EAAA,IAAC0/B,GACE,CAAA,SAAAE,EAAU,IAAI,CAAC7B,EAAgB3hC,IAC9B4D,EAAAA,IAAC+D,GAAM,SAAN,CACC,SAAA/D,EAAA,IAACy/B,GAAA,CACC,MAAM,UACN,QAAQ,WACR,QAAS,IACPK,EAAY,CACV,UAAWb,EACX,iBAAkBY,EAClB,SAAU9B,CAAA,CACX,EAEH,GAAI,CACF,YACEx8B,EAAU,wBAAwB,kBAAkBnF,CAAK,EAC3D,UAAW,CACT,OAAQ,aAAamF,EAAU,wBAAwB,kBAAkBnF,CAAK,CAAC,cAC/E,gBAAiB8B,EACb,UACAqD,EAAU,wBAAwB,uBAChCnF,CACF,CACN,EACA,WAAY,CACV,OAAQ,aAAamF,EAAU,wBAAwB,kBAAkBnF,CAAK,CAAC,cAC/E,gBACEmF,EAAU,wBAAwB,uBAChCnF,CACF,CACJ,CACF,EAEA,SAAA4D,EAAA,IAACC,EAAA,CACC,QAAQ,KACR,MAAOsB,EAAU,wBAAwB,kBAAkBnF,CAAK,EAChE,GAAI,EAEH,SAAA2hC,CAAA,CACH,CAAA,CAAA,GArCiBA,CAuCrB,CACD,CACH,CAAA,CAEJ,EC1Da0B,GAAeriC,EAAOkF,EAAM,EAAE,KAAO,CAChD,SAAU,QACV,QAAS,MACT,OAAQ,MACV,EAAE,EAEWo9B,GAAYtiC,EAAO,KAAK,EAAE,KAAO,CAC5C,SAAU,QACV,eAAgB,QAChB,QAAS,MACX,EAAE,ECRW2iC,GAA0B,CAAC,CACtC,UAAAH,EACA,SAAAX,EACA,gBAAAY,EACA,YAAAC,CACF,IAEK9/B,EAAAA,IAAA0/B,GAAA,CACE,SAAUE,EAAA,IAAK7B,GACd/9B,EAAA,IAACy/B,GAAA,CACC,QAAQ,YACR,QAAS,IACPK,EAAY,CACV,UAAWb,EACX,iBAAkBY,EAClB,SAAU9B,CAAA,CACX,EAEH,GAAI,CAAE,gBAAiB,MAAO,EAE7B,SAAAA,CAAA,CAEJ,CAAA,CACH,CAAA,EChBSiC,GAAwC,CACnD,MAAOL,GACP,OAAQI,EACV,ECXaE,GAAmB7iC,EAAOmD,CAAK,EAAE,CAAC,CAAE,MAAAjD,MAAa,CAC5D,aAAc,OACd,UAAW,QACX,SAAU,SACV,QAAS,cACT,SAAU,WACV,eAAgB,SAChB,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,UAAW,QACX,QAAS,WACX,EACA,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,UAAW,QACX,QAAS,YACT,OAAQ,OACV,EAEA,+BAAgC,CAC9B,UAAW,QACX,eAAgB,QAChB,QAAS,GACX,CACF,EAAE,EAE6BF,EAAOmD,CAAK,EAAE,KAAO,CAClD,WAAY,uDACZ,aAAc,CACZ,UAAW,eACb,EACA,YAAa,CACX,UAAW,kBACb,CACF,EAAE,EAE6BnD,EAAO,KAAK,EAAE,CAC3C,QAAS,cACT,OAAQ,MACV,CAAC,ECrCD,MAAM8iC,GAA2B,IAAM,CACrC,MAAMC,EAAiB,CACrB,KAAM,GACN,SAAU,GACV,cAAe5+B,EAAU,WAAW,yBACpC,iBAAkB,CAChB,oBAAqB,gBACvB,CAAA,EAIA,OAAAvB,EAAAA,IAAC,MACC,CAAA,SAAAA,EAAA,IAACogC,GAAO,CAAA,QAASD,EAAgB,OAAQ,IAAK,MAAO,GAAK,CAAA,CAC5D,CAAA,CAEJ,ECAME,GAAsBjjC,EAAOkjC,EAAW,EAAE,CAC9C,aAAc,cACd,gBAAiB,UACjB,2BAA4B,CAC1B,gBAAiB,SACnB,CACF,CAAC,EAEM,SAASC,GAAgB,CAC9B,aAAAC,EACA,kBAAAC,CACF,EAAyB,CACvB,KAAM,CAAE,eAAA/D,EAAgB,sBAAAU,EAAuB,oBAAAU,CAAoB,EACjElB,GAA2B4D,CAAY,EACnCE,EAAYhE,GAAA,YAAAA,EAAgB,SAAS,WACrCiE,GAAmBjE,GAAA,YAAAA,EAAgB,aAAc,iBACjDkE,GAAiBlE,GAAA,YAAAA,EAAgB,aAAc,iBAC/CmE,EACJb,GAAgBU,CAAuC,EACnD,CAAE,SAAAxiC,GAAaC,KAEf2iC,EAAoB,CAAC9X,EAAc+X,IAAuB,CAC9D,MAAMC,EAAchY,EAAK,MAAM,EAAG+X,CAAU,EACtCE,EAAajY,EAAK,MAAM+X,CAAU,EACxC,cACG,OACE,CAAA,SAAA,CAAAC,QACA,KAAG,EAAA,EACHC,CACH,CAAA,CAAA,CAAA,EAIJplC,OAAAA,EAAAA,UAAU,IAAM,CACd,GAAI+kC,EAAgB,CACZ,MAAAM,EAAU,WAAW,IAAM,CACbT,KACjB,GAAI,EAEA,MAAA,IAAM,aAAaS,CAAO,CACnC,CACC,EAAA,CAACxE,EAAgB+D,EAAmBG,CAAc,CAAC,EAElDA,IACF,aAAa,WAAW,iBAAiB,EACzC,aAAa,WAAW,qBAAqB,EAC7C,aAAa,WAAW,gBAAgB,EACxC,aAAa,WAAW,cAAc,GAItC1gC,EAAA,KAACkC,EAAA,CACC,GAAI,CACF,gBAAiB,OACjB,OAAQ,IACR,aAAc,MACd,MAAO,MACT,EAEA,SAAA,CAAApC,EAAA,IAACqgC,GAAA,CACC,MAAOjD,EACP,QAAQ,cACR,GAAI,CAAE,OAAQ,CAAC,GAAI,EAAE,CAAE,CAAA,CACzB,EACAp9B,EAAA,IAACC,EAAA,CACC,QAAQ,KACR,MAAM,OACN,GAAI,CACF,SAAU,WACV,SAAU,CAAC,GAAI,EAAE,CACnB,EAEC,SAAG,GAAA,KAAK,MAAMm9B,CAAqB,CAAC,GAAA,CACvC,QACC6C,GACC,CAAA,SAAAjgC,EAAA,IAACO,EAAA,CACC,GAAI,aAAam8B,EAAe,SAAS,GACzC,GAAI,CAAE,WAAY,gBAAiB,EAEnC,SAAAx8B,EAAA,KAACK,EAAA,CACC,GAAI,CAAE,OAAQ,QAAS,EACvB,WAAYogC,EAAmB,QAAU,SAEzC,SAAA,CAAA3gC,EAAA,IAACC,EAAA,CACC,QAAQ,KACR,MAAM,OACN,UAAU,QACV,GAAI,CACF,SAAU,CAAC,GAAI,EAAE,EACjB,aAAc,CAAC,EAAG,CAAC,EACnB,QAAS/B,EAAW,SAAW,QACjC,EACA,GAAI,gBAAgBw+B,EAAe,SAAS,GAE3C,WACGoE,EAAkBpE,EAAe,cAAe,EAAE,EAClDA,EAAe,aAAA,CACrB,EACCkE,SAAmBV,GAAyB,EAAA,EAC7ClgC,EAAA,IAACO,EAAA,CACC,QAASqgC,EAAiB,OAAS,QACnC,GAAI,CAAE,MAAO,MAAO,EAEpB,SAAA5gC,EAAA,IAAC6gC,EAAA,CACC,YAAa/C,EACb,SAAUpB,EAAe,UACzB,UACEA,EAAe,SAAS,WACpBA,EAAe,SAAS,WAAW,IAAKre,GACtC,OAAOA,CAAI,CAAA,EAEb,CAAC,EAEP,gBACEqe,EAAe,SAAS,mBAAqB,MAC7CA,EAAe,SAAS,mBAAqB,OACzCA,EAAe,SAAS,iBACxB,EAAA,CAER,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,CAAA,CAAA,CAAA,CAGN,CC5IO,MAAMyE,GAAyB/jC,EAAOsjB,EAAK,EAAE,CAAC,CAAE,MAAApjB,MAAa,CAClE,SAAU,SAEV,iBAAkB,CAChB,SAAU,QACV,UAAW,QACX,OAAQ,IACR,yBAA0B,CACxB,QAAS,GACX,CACF,EACA,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,SAAU,QACZ,CACF,EAAE,EAEW8jC,GAAiBhkC,EAAO,KAAK,EAAE,CAAC,CAAE,MAAAE,MAAa,CAC1D,QAAS,YACT,gBAAiBm9B,GAAY,yBAC7B,OAAQ,OACR,IAAK,MACL,SAAU,WACV,QAAS,OACT,eAAgB,gBAChB,MAAO,OACP,WAAY,CACV,QAAS,KACT,gBAAiB,OAAOl5B,EAAU,OAAO,0BAA0B,IACnE,SAAU,WACV,MAAO,QACP,OAAQ,QACR,OAAQ,IACR,MAAO,IACP,iBAAkB,YAClB,mBAAoB,OACtB,EACA,CAACjE,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,QAAS,OACT,MAAO,OACT,CACF,EAAE,EC1BI+jC,GAAcjkC,EAAOkF,EAAM,EAAE,KAAO,CACxC,SAAU,WACV,MAAO,MACP,MAAO,OACP,IAAK,KACP,EAAE,EAEWg/B,GAAuB,CAAC,CACnC,KAAAjhB,EACA,YAAAC,CACF,IAA2B,CACzB,KAAM,CAAE,KAAMgb,CAAU,EAAIL,GAA8B,EACpD,CAACpoB,EAAcsb,CAAe,EAAIC,GAAgB,EAElD,CAACmT,EAAMC,CAAO,EAAInmC,WAAS,CAAC,EAC5B,CAAComC,EAAkBC,CAAmB,EAAIrmC,WAAS,EAAK,EAExDsmC,EAAc,IAAM,CACpBrG,GAAcA,EAA2C,cAC3DkG,EAAQ,CAAC,CACX,EAGII,EAAwB,IAAM,CAClCF,EAAoB,EAAI,CAAA,EAG1B7lC,EAAAA,UAAU,IAAM,CACV4lC,IACeI,IACJhvB,EAAA,IAAI,OAAQ,SAAS,EAClCsb,EAAgBtb,CAAY,EAE7B,EAAA,CAAC4uB,EAAkB5uB,EAAcsb,CAAe,CAAC,EAEpD,MAAM2T,EAAgB,IAAM,CACtB,GAAAxG,GAAcA,EAA2C,aAEzD,OAAAt7B,EAAA,IAACugC,GAAA,CACC,aACGjF,EAA2C,aAE9C,kBAAmBsG,CAAA,CAAA,CAKzB,EAGIC,EAAmB,IAAM,CAC7BL,EAAQ,CAAC,EACTE,EAAoB,EAAK,EACbphB,GAAA,EAGd,aACG6gB,GAAuB,CAAA,KAAA9gB,EAAY,GAAG,oBACrC,gBAAC+gB,GACE,CAAA,SAAA,CAAAG,IAAS,GAAKvhC,EAAA,IAAC46B,GAAQ,CAAA,cAAe+G,EAAa,EACnDJ,IAAS,GAAKvhC,MAAC8hC,EAAc,CAAA,CAAA,QAC7BT,GAAY,CAAA,QAASQ,EACpB,SAAA7hC,MAAC2gB,IAAM,CAAA,EACT,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,ECvEaohB,GAAuB1G,GAAsC,CACxE,MAAMp/B,EAAc,CAClB,oBAAqB,EACrB,SAAU,EACV,QAAS,EACT,MAAO,EACP,iBAAkB,CAAA,EAGd+lC,EAAmB,IAAM,CAC7B,MAAMC,EAAa,CAAA,EAEnB,QAAS7lC,EAAQ,EAAGA,EAAQi/B,EAAS,QAAQ,OAAQj/B,IAAS,CACtD,MAAA4iC,EAAU3D,EAAS,QAAQj/B,CAAK,EACtC6lC,EAAWjD,EAAQ,gBAAgB,EAAI/iC,EAAY+iC,EAAQ,QAAQ,CACrE,CAEOiD,OAAAA,CAAA,EAGHC,EAAsB,CAC1B,mBAAoB,CAClB,wBACA,wBACA,wBACA,uBACF,EACA,qBAAsB,CACpB,wBACA,wBACA,wBACA,uBACF,EACA,yBAA0B,CACxB,wBACA,wBACA,wBACA,uBACF,EACA,oBAAqB,CACnB,wBACA,wBACA,wBACA,uBACF,EACA,gBAAiB,CACf,wBACA,wBACA,wBACA,uBACF,EACA,cAAe,CACb,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACF,EACA,cAAe,CACb,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACF,EACA,cAAe,CACb,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACF,EACA,eAAgB,CACd,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACF,EACA,wBAAyB,CACvB,wBACA,wBACA,mBACA,mBACA,oBACA,oBACA,oBACA,mBACF,EACA,mBAAoB,CAClB,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACF,EACA,uBAAwB,CACtB,wBACA,wBACA,wBACA,wBACA,wBACA,oBACA,mBACA,kBACF,EACA,oBAAqB,CACnB,wBACA,wBACA,wBACA,wBACA,wBACA,mBACA,mBACA,kBACF,CAAA,EAGID,EAAaD,IAEbG,EAAkBC,GACGF,EAAoBE,CAAQ,EAAE,IACpDC,GAA4BJ,EAAWI,CAAuB,CAAA,EAGxD,OAAO,CAACt5B,EAAau5B,IAAev5B,EAAMu5B,EAAI,CAAC,GACrDJ,EAAoBE,CAAQ,EAAE,OAAS,GAItCG,EAAoBC,GACpBA,GAAS,IACJ,EACEA,GAAS,IACX,EACEA,GAAS,GACX,EACEA,GAAS,IACX,EACEA,GAAS,IACX,EAEA,EAILC,EAA0B,CAACD,EAAeJ,IAAqB,CACnE,OAAQA,EAAU,CAChB,IAAK,gBACH,OAAII,GAAS,GACJ,YAEA,YAEX,IAAK,UACH,OAAIA,GAAS,GACJ,UAEA,WAEX,IAAK,cACH,OAAIA,GAAS,GACJ,YAEA,SAEX,IAAK,WACH,OAAIA,GAAS,GACJ,UAEA,cAEX,QACS,MAAA,EACX,CAAA,EAGK,MAAA,CACL,OAAQ,CACN,QAAS,CACP,YAAaL,EAAe,oBAAoB,EAChD,cAAeA,EAAe,sBAAsB,EACpD,kBAAmBA,EAAe,0BAA0B,EAC5D,aAAcA,EAAe,qBAAqB,EAClD,SAAUA,EAAe,iBAAiB,CAC5C,EACA,KAAM,CACJ,UAAWA,EAAe,eAAe,EACzC,UAAWA,EAAe,eAAe,EACzC,UAAWA,EAAe,eAAe,EACzC,WAAYA,EAAe,gBAAgB,CAC7C,EACA,YAAa,CACX,cAAeA,EAAe,yBAAyB,EACvD,QAASA,EAAe,oBAAoB,EAC5C,YAAaA,EAAe,wBAAwB,EACpD,SAAUA,EAAe,qBAAqB,CAChD,CACF,EACA,SAAU,CACR,aAAc,CACZ,UAAWI,EAAiBJ,EAAe,eAAe,CAAC,EAC3D,UAAWI,EAAiBJ,EAAe,eAAe,CAAC,EAC3D,UAAWI,EAAiBJ,EAAe,eAAe,CAAC,EAC3D,WAAYI,EAAiBJ,EAAe,gBAAgB,CAAC,CAC/D,EACA,oBAAqB,CACnB,cAAeM,EACbN,EAAe,yBAAyB,EACxC,eACF,EACA,QAASM,EACPN,EAAe,oBAAoB,EACnC,SACF,EACA,YAAaM,EACXN,EAAe,wBAAwB,EACvC,aACF,EACA,SAAUM,EACRN,EAAe,qBAAqB,EACpC,UACF,CACF,CACF,CAAA,CAEJ,EChPaO,GAAwB,IAAM,CACzC,KAAM,CAACC,EAAmBC,CAAoB,EAAIvnC,WAAS,EAAK,EAC1D,CAACg/B,EAAmBwI,CAAoB,EAAIxnC,EAAA,SAAS,CAAE,CAAA,EACvD,CAAC46B,EAAqB6M,CAAsB,EAAIznC,EAAA,SAAS,CAAE,CAAA,EAC3D,CAAE,KAAAyO,EAAM,QAAAi5B,EAAS,UAAAxe,GAAc0X,GAA4B,EAC3D,CAAE,YAAAF,EAAa,eAAAD,CAAe,EAAID,GAAqB,EACvD,CACJ,QAAS,CAAE,QAAAlgC,CAAQ,GACjB6L,GAAW,EAETw7B,EAAwB,IAAM,CAClCJ,EAAqB,EAAI,CAAA,EAGrBK,EAAyB,IAAM,CAC3BF,IACRH,EAAqB,EAAK,CAAA,EAGtBtI,EAAa,IAAM,CACD0I,GAAA,EAGxBnnC,EAAAA,UAAU,IAAM,CACd,GAAIiO,EAAM,CACF,MAAAkyB,EAAU+F,GAAoBj4B,CAAI,EACxC+4B,EAAqB7G,EAAQ,MAAM,EACZ8G,EAAA9G,EAAQ,SAAS,mBAAmB,CAC7D,CAAA,EACC,CAAClyB,CAAI,CAAC,EAET,MAAMo5B,EAA4B,SAAY,CAE5C,GAAI,CADiB,aAAa,QAAQ,cAAc,EAEtD,OAEI,MAAA9E,EAAgB,aAAa,QAAQ,gBAAgB,EACrD+E,EAAgB,KAAK,MAAM/E,GAAiB,EAAE,EAChD+E,EAAc,SAAW,KAC3B,MAAMpH,EAAY,CAChB,UAAWpgC,GAAA,YAAAA,EAAS,QAAQ,UAAU,UACtC,QAAS,cACT,WAAY,sBACZ,QAASwnC,CAAA,CACV,EACD,aAAa,WAAW,cAAc,EACtC,aAAa,WAAW,gBAAgB,EACxC,aAAa,WAAW,qBAAqB,EACrCJ,IACV,EASF,OANAlnC,EAAAA,UAAU,IAAM,CACTigC,GACuBoH,GAC5B,EACC,CAACpH,CAAc,CAAC,EAEfvX,EAEArkB,EAAA,KAACK,EAAA,CACC,GAAKjD,IAAW,CACd,CAACA,EAAM,YAAY,KAAK,IAAI,CAAC,EAAG,CAC9B,aAAc,MAChB,CAAA,GAGF,SAAA,CAAA0C,EAAA,IAACo1B,GAAkB,EAAA,EACnBp1B,EAAAA,IAACoC,EAAI,CAAA,GAAI,CAAE,QAAS,QAAS,EAC3B,SAACpC,EAAAA,IAAAixB,GAAA,CAAY,MAAO,CAAA,CAAG,CACzB,CAAA,CAAA,CAAA,CAAA,EAMJ/wB,EAAA,KAACK,EAAA,CACC,GAAKjD,IAAW,CACd,CAACA,EAAM,YAAY,KAAK,IAAI,CAAC,EAAG,CAC9B,aAAc,MAChB,CAAA,GAGF,SAAA,CAAA0C,EAAA,IAACo1B,GAAkB,EAAA,EAClB,OAAO,KAAKiF,CAAiB,EAAE,OAAS,EACvCr6B,EAAA,IAACo6B,GAAA,CACC,kBAAAC,EACA,oBAAApE,EACA,WAAAqE,CAAA,CAGF,EAAAt6B,EAAA,IAAC60B,GAAyB,CAAA,SAAUmO,CAAuB,CAAA,EAE7DhjC,EAAA,IAACshC,GAAA,CACC,KAAMqB,EACN,YAAaM,CAAA,CACf,CAAA,CAAA,CAAA,CAGN,ECrGaG,GAAgBhmC,EAAO6C,CAAI,EAAE,CAAC,CAAE,MAAA3C,MAAa,CACxD,UAAW,SACX,aAAcA,EAAM,QAAQ,CAAC,CAC/B,EAAE,EAEW+lC,GAAajmC,EAAO,KAAK,EAAE,CAAC,CAAE,MAAAE,MAAa,CACtD,SAAU,WACV,IAAK,EACL,MAAO,EACP,YAAaA,EAAM,QAAQ,CAAC,EAC5B,UAAWA,EAAM,QAAQ,CAAC,EAC1B,QAAS,OAET,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,QAAS,UACT,MAAO,GACT,EAEA,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,MAAO,GACT,EAEA,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,MAAO,GACT,EAEA,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,MAAO,IACP,YAAaA,EAAM,QAAQ,CAAC,EAC5B,UAAWA,EAAM,QAAQ,CAAC,CAC5B,CACF,EAAE,EAEWgmC,GAAalmC,EAAO,KAAK,EAAE,CAAC,CAAE,MAAAE,MAAa,CACtD,MAAO,MACP,SAAU,IAEV,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,SAAU,GACZ,EAEA,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,MAAO,MACP,SAAU,SACZ,CACF,EAAE,EAEWimC,GAAqBnmC,EAAQyI,GACvC7F,EAAA,IAAAqB,EAAA,CAAK,KAAI,GAAC,GAAI,GAAI,GAAI,EAAI,GAAGwE,CAAO,CAAA,CACtC,EAAE,CAAC,CAAE,MAAAvI,MAAa,CACjB,OAAQ,aAAaA,EAAM,QAAQ,OAAO,GAE1C,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,UAAW,OAEX,gBAAiB,CACf,UAAW,aAAaA,EAAM,QAAQ,OAAO,EAC/C,CACF,EAEA,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,iBAAkB,CAChB,UAAW,aAAaA,EAAM,QAAQ,OAAO,EAC/C,EAEA,sBAAuB,CACrB,WAAY,MACd,CACF,CACF,EAAE,EAEWkmC,GAAkBpmC,EAAQyI,GACrC7F,EAAAA,IAACO,GAAM,UAAU,MAAM,QAAS,EAAI,GAAGsF,CAAO,CAAA,CAC/C,EAAE,CAAC,CAAE,MAAAvI,MAAa,CACjB,WAAYA,EAAM,QAAQ,WAAW,MACrC,QAASA,EAAM,QAAQ,CAAC,CAC1B,EAAE,EAEWmmC,GAAiBrmC,EAAQyI,SACnCof,GAAK,CAAA,QAAQ,WAAY,GAAGpf,CAAO,CAAA,CACrC,EAAE,CAAC,CAAE,MAAAvI,MAAa,CACjB,OAAQ,OACR,gBAAiBA,EAAM,QAAQ,WAAW,QAC1C,OAAQ,EACR,QAAS,OACT,cAAe,SACf,WAAY,SACZ,eAAgB,SAChB,IAAKA,EAAM,QAAQ,GAAG,CACxB,EAAE,EAEWomC,GAAgBtmC,EAAO,KAAK,EAAE,CAAC,CAAE,MAAAE,MAAa,CACzD,QAAS,OACT,WAAY,SACZ,eAAgB,SAChB,MAAO,GACP,OAAQ,GACR,aAAc,MACd,gBAAiBA,EAAM,QAAQ,WAAW,KAC5C,EAAE,EAEW0nB,GAAa5nB,EAAO6nB,EAAI,EAAE,CAAC,CAAE,MAAA3nB,MAAa,CACrD,QAAS,OACT,WAAY,SACZ,IAAKA,EAAM,QAAQ,CAAC,EACpB,gBAAiBA,EAAM,QAAQ,WAAW,QAC1C,OAAQ,CACV,EAAE,EC5FK,SAASqmC,GAAM,CAAE,gBAAAr8B,EAAiB,cAAAs8B,GAAoC,CAC3E,KAAM,CAACC,EAAUC,CAAW,EAAI//B,GAAM,SAAiB,EAAE,EACnDzG,EAAQuH,KACd,cACGzC,EACC,CAAA,SAAA,CAAAlC,OAAC+kB,IAAK,QAAQ,WAAW,GAAI,CAAE,SAAU,UACvC,EAAA,SAAA,CAAA/kB,EAAA,KAACD,EAAA,CACC,QAAQ,KACR,GAAI,CAAE,QAAS,OAAQ,WAAY,SAAU,IAAK,CAAE,EAEpD,SAAA,CAACD,EAAAA,IAAA+jC,GAAA,CAAM,GAAI,CAAE,MAAOzmC,EAAM,QAAQ,QAAQ,IAAA,EAAO,SAAS,OAAQ,CAAA,EAAE,WAAA,CAAA,CAEtE,EAEA0C,EAAA,IAACC,EAAA,CACC,GAAK3C,IAAW,CACd,aAAcA,EAAM,QAAQ,CAAC,EAC7B,SAAU,CAAE,GAAI,OAAQ,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,CAAA,GAGnD,YAA2BumC,CAAQ,CAAA,CACtC,QAEC5jC,EAAK,CAAA,WAAW,OAAO,GAAI,EAAG,SAE/B,gCAAA,EAEAD,EAAA,IAACgkC,GAAA,CACC,gBAAA18B,EACA,cAAAs8B,EACA,eAAgBE,EAChB,kBAAmB,EAAA,CACrB,EAEC9jC,EAAA,IAAAqjC,GAAA,CAAW,IAAKY,GAAe,IAAI,OAAO,CAAA,EAC7C,EAEA/jC,EAAA,KAAC+kB,GAAA,CACC,QAAQ,WACR,GAAK3nB,IAAW,CACd,WAAY,8BAA8BA,EAAM,QAAQ,WAAW,KAAK,YAAYA,EAAM,QAAQ,WAAW,KAAK,UAAA,GAGpH,SAAA,CAAC0C,EAAA,IAAAojC,GAAA,CAAc,QAAQ,KAAK,SAAY,eAAA,EAExCljC,EAAA,KAACmB,EAAA,CACC,UAAS,GACT,GAAK/D,IAAW,CACd,WAAYA,EAAM,QAAQ,WAAW,KAAA,GAGvC,SAAA,CAAC0C,EAAA,IAAAujC,GAAA,CACC,gBAACC,GACC,CAAA,SAAA,CAACxjC,EAAA,IAAAoC,EAAA,CACC,SAACpC,EAAA,IAAA+hB,GAAA,CAAY,CAAA,EACf,SAEC3f,EACC,CAAA,SAAA,CAACpC,EAAA,IAAAC,EAAA,CAAK,QAAQ,KAAK,SAAyB,4BAAA,QAE3CA,EAAK,CAAA,QAAQ,QAAQ,UAAU,OAAO,SAKvC,yMAAA,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,EAEAD,EAAA,IAACujC,GACC,CAAA,SAAArjC,EAAAA,KAACsjC,GACC,CAAA,SAAA,CAACxjC,EAAA,IAAAoC,EAAA,CACC,SAACpC,EAAA,IAAAkkC,GAAA,CAAK,CAAA,EACR,SAEC9hC,EACC,CAAA,SAAA,CAACpC,EAAA,IAAAC,EAAA,CAAK,QAAQ,KAAK,SAAkB,qBAAA,QACpCA,EAAK,CAAA,QAAQ,QAAQ,UAAU,OAAO,SAKvC,6NAAA,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,EAEAD,EAAA,IAACujC,GACC,CAAA,SAAArjC,EAAAA,KAACsjC,GACC,CAAA,SAAA,CAACxjC,EAAA,IAAAoC,EAAA,CACC,SAACpC,EAAA,IAAAmkC,GAAA,CAAW,CAAA,EACd,SAEC/hC,EACC,CAAA,SAAA,CAACpC,EAAA,IAAAC,EAAA,CAAK,QAAQ,KAAK,SAAS,YAAA,QAC3BA,EAAK,CAAA,QAAQ,QAAQ,UAAU,OAAO,SAIvC,mLAAA,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,EAEAD,EAAA,IAACujC,GACC,CAAA,SAAArjC,EAAAA,KAACsjC,GACC,CAAA,SAAA,CAACxjC,EAAA,IAAAoC,EAAA,CACC,SAACpC,EAAA,IAAAokC,GAAA,CAAW,CAAA,EACd,SAEChiC,EACC,CAAA,SAAA,CAACpC,EAAA,IAAAC,EAAA,CAAK,QAAQ,KAAK,SAAY,eAAA,QAC9BA,EAAK,CAAA,QAAQ,QAAQ,UAAU,OAAO,SAIvC,+JAAA,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,CAAA,CAAA,CACF,EAEAC,EAAAA,KAAC+kB,GAAK,CAAA,QAAQ,WACZ,SAAA,CAACjlB,EAAA,IAAAojC,GAAA,CAAc,QAAQ,KAAK,SAAa,gBAAA,EAExCljC,EAAA,KAAAmB,EAAA,CAAK,UAAS,GAAC,QAAS,EACvB,SAAA,CAACrB,EAAAA,IAAAqB,EAAA,CAAK,KAAI,GAAC,GAAI,GAAI,GAAI,EACrB,gBAACoiC,GACC,CAAA,SAAA,CAAAzjC,EAAA,IAAC0jC,GACC,CAAA,SAAA1jC,EAAA,IAACqkC,GAAY,CAAA,GAAI,CAAE,MAAO/mC,EAAM,QAAQ,QAAQ,IAAA,EAAO,SAAS,OAAQ,CAAA,EAC1E,EAEA0C,EAAAA,IAACC,GAAK,QAAQ,KAAK,UAAU,SAAS,EAAG,EAAG,SAE5C,2BAAA,CAAA,EACAC,EAAAA,KAACD,EAAK,CAAA,UAAU,SAAS,SAAA,CAAA,gDACuB,IAC9CD,EAAAA,IAAC,KAAE,SAAuB,yBAAA,CAAA,EAAI,kDAAA,EAEhC,CAAA,CAAA,CACF,CACF,CAAA,EAEAA,EAAAA,IAACqB,GAAK,KAAI,GAAC,GAAI,GAAI,GAAI,EACrB,SAAAnB,EAAA,KAACujC,GACC,CAAA,SAAA,CAAAzjC,EAAA,IAAC0jC,GACC,CAAA,SAAA1jC,EAAA,IAACskC,GAAO,CAAA,GAAI,CAAE,MAAOhnC,EAAM,QAAQ,QAAQ,IAAA,EAAO,SAAS,OAAQ,CAAA,EACrE,EAEA0C,EAAAA,IAACC,GAAK,QAAQ,KAAK,UAAU,SAAS,EAAG,EAAG,SAE5C,sBAAA,CAAA,EACAC,EAAAA,KAACD,EAAK,CAAA,UAAU,SAAS,SAAA,CAAA,sDAC6B,IACpDD,EAAAA,IAAC,KAAE,SAA8B,gCAAA,CAAA,EAAI,uCAAA,EAEvC,CAAA,CAAA,CACF,CACF,CAAA,EAEAA,EAAAA,IAACqB,GAAK,KAAI,GAAC,GAAI,GAAI,GAAI,EACrB,SAAAnB,EAAA,KAACujC,GACC,CAAA,SAAA,CAAAzjC,EAAA,IAAC0jC,GACC,CAAA,SAAA1jC,EAAA,IAACukC,GAAU,CAAA,GAAI,CAAE,MAAOjnC,EAAM,QAAQ,QAAQ,IAAA,EAAO,SAAS,OAAQ,CAAA,EACxE,SAEC2C,EAAK,CAAA,QAAQ,KAAK,UAAU,SAAS,EAAG,EACtC,SAAA,CAAA,IAAI,YAAA,EAEP,EACAC,EAAAA,KAACD,EAAK,CAAA,UAAU,SAAS,SAAA,CAAA,4DACmC,IAC1DD,EAAAA,IAAC,KAAE,SAA8B,gCAAA,CAAA,EAAI,GAAA,EACvC,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,CAAA,EACF,EAEAE,EAAAA,KAAC+kB,GAAK,CAAA,QAAQ,WACZ,SAAA,CAACjlB,EAAA,IAAAojC,GAAA,CAAc,QAAQ,KAAK,SAA0B,6BAAA,EAErDljC,EAAA,KAAAmB,EAAA,CAAK,UAAS,GAAC,QAAS,EACvB,SAAA,CAAArB,EAAA,IAACqB,EAAA,CACC,KAAI,GACJ,GAAI,GACJ,GAAI,EACJ,GAAI,CACF,QAAS,OACT,WAAY,SACZ,eAAgB,QAClB,EAEA,SAACrB,EAAA,IAAAsjC,GAAA,CAAW,IAAKkB,GAAe,IAAI,OAAO,CAAA,CAC7C,SACCnjC,EAAK,CAAA,KAAI,GAAC,GAAI,GAAI,GAAI,EACrB,SAAA,CAACnB,EAAAA,KAAA8kB,GAAA,CAAW,QAAQ,WAClB,SAAA,CAAAhlB,EAAA,IAACykC,GAAU,EAAA,SAEVxkC,EACC,CAAA,SAAA,CAAAD,EAAAA,IAAC,KAAE,SAAwB,0BAAA,CAAA,EAAI,6CAAA,EAEjC,CAAA,EACF,EAEAE,EAAAA,KAAC8kB,GAAW,CAAA,QAAQ,WAClB,SAAA,CAAAhlB,EAAA,IAAC0kC,GAAiB,EAAA,SAEjBzkC,EACC,CAAA,SAAA,CAAAD,EAAAA,IAAC,KAAE,SAA8C,gDAAA,CAAA,EAAI,2EAAA,EAEvD,CAAA,EACF,EAEAE,EAAAA,KAAC8kB,GAAW,CAAA,QAAQ,WAClB,SAAA,CAAAhlB,EAAA,IAAC2kC,GAAO,EAAA,SAEP1kC,EACC,CAAA,SAAA,CAAAD,EAAAA,IAAC,KAAE,SAAU,YAAA,CAAA,EAAI,4CAAA,EACnB,CAAA,EACF,EAEAE,EAAAA,KAAC8kB,GAAW,CAAA,QAAQ,WAClB,SAAA,CAAAhlB,EAAA,IAAC4kC,GAAmB,EAAA,SAEnB3kC,EACC,CAAA,SAAA,CAAAD,EAAAA,IAAC,KAAE,SAAuB,yBAAA,CAAA,EAAI,yFAAA,EAEhC,CAAA,EACF,CAAA,EACF,CAAA,EACF,CAAA,EACF,CACF,CAAA,CAAA,CAEJ,CCpQO,MAAM6kC,GAAgB,IAAM,OACjC,KAAM,CAAE,KAAMlpC,CAAQ,EAAIC,GAAW,EAAI,EACnCkpC,IAAW9oC,EAAAL,GAAA,YAAAA,EAAS,QAAQ,YAAjB,YAAAK,EAA4B,YAAa,GAE1D,aAAQ+oC,GAAU,CAAA,WAAYD,EAAU,iBAAgB,GAAC,kBAAiB,EAAC,CAAA,CAC7E,ECJO,SAASE,IAAY,CAC1B,KAAM,CAAE,KAAAl7B,EAAM,UAAAya,CAAU,EAAI0gB,GAAkB,EACxC,CAAE,SAAAC,GAAaC,KAErB,GAAI5gB,EACK,OAAA,KAGT,MAAM6gB,EAAmCt7B,GAAA,YAAAA,EAAM,KAC7C,CAAC,CAAE,KAAArB,KAA6BA,IAASy8B,GAGpC,OAAAllC,MAACqlC,IAAgB,KAAAD,CAAY,CAAA,CACtC,CCEA,MAAME,GAAaloC,EAAO6C,CAAI,EAAE,CAAC,CAAE,MAAA3C,MAAa,CAC9C,cAAe,GACf,UAAWA,EAAM,QAAQ,GAAG,EAC5B,aAAcA,EAAM,QAAQ,CAAC,EAC7B,UAAW,SACX,eAAgB,WAClB,EAAE,EAEIoiC,GAAYtiC,EAAOmD,CAAK,EAAE,CAAC,CAAE,MAAAjD,MAAa,CAC9C,OAAQA,EAAM,QAAQ,EAAG,MAAM,EAC/B,SAAU,qBACV,SAAU,WACV,QAASA,EAAM,QAAQ,OAAQ,CAAC,CAClC,EAAE,EAMIioC,GAA4B,OAC5BC,GAA2B,8BAEpBC,GAAQC,EAAA,WACnB,CAAC,CAAE,eAAAC,CAAe,EAAU7gC,IAA4B,CACtDjJ,EAAAA,UAAU,IAAM,CACd,SAAS,MAAQ,sBACnB,EAAG,CAAE,CAAA,EAEL,KAAM,CAAC+pC,EAAaC,CAAc,EAAIC,GAAc,SAAUC,EAAW,EACnE,CAACC,EAAwBC,CAAyB,EAAI5qC,EAAAA,SAE1D,MAAS,EACL,CAAE,WAAA62B,CAAA,EAAeh3B,EAAA,WAAWC,EAAS,EACrC,CAAC+qC,EAASC,EAAcC,EAASC,CAAa,EAAIC,KAExDzqC,OAAAA,EAAAA,UAAU,IAAM,CACV,IAAA0qC,EAEAX,IAAgB,WAClBW,QACGC,GAAM,CAAA,QAAQ,WAAW,SAAS,UAAU,SAE7C,sDAAA,CAAA,EAEFtU,EACE,eACAqT,GACAC,EAAA,GAEOI,IAAgB,WAEvBW,EAAAvmC,EAAA,IAACwmC,GAAA,CACC,QAAQ,WACR,GAAI,CAAE,MAAO,YAAa,EAC1B,SAAS,QACV,SAAA,uGAAA,CAAA,EAKHtU,EACE,eACAqT,GACAC,EAAA,GAEOI,IAAgB,YAEvBW,EAAAvmC,EAAA,IAACwmC,GAAA,CACC,QAAQ,WACR,GAAI,CAAE,MAAO,YAAa,EAC1B,SAAS,QACV,SAAA,mEAAA,CAAA,EAIHtU,EACE,eACAqT,GACAC,EAAA,GAIAI,IACFK,EAA0BM,CAAY,EACtCV,EAAe,OAAW,WAAW,EACvC,EACC,CAACD,EAAaC,CAAc,CAAC,EAG9B3lC,EAAA,KAACw/B,GAAU,CAAA,IAAA56B,EAAU,QAAS,IAAK,MAAO,CAAE,GAAI,MAAO,GAAI,KAAA,EACzD,SAAA,CAAA9E,EAAA,IAACC,EAAA,CACC,QAAQ,KACR,SAAS,UACT,WAAY,IACZ,GAAI,CAAE,OAAQ,EAAG,WAAY,KAAM,EACnC,UAAW,SACZ,SAAA,SAAA,CAED,EACC+lC,EACDhmC,EAAA,IAACymC,GAAA,CACC,eAAgB,CAAC,CAACP,EAClB,QAAAA,EACA,aAAAC,EACA,QAAAC,EACA,cAAAC,EACA,eAAAV,CAAA,CACF,EACCzlC,EAAA,KAAAK,EAAA,CAAM,QAAS,IAAK,WAAW,SAC9B,SAAA,CAAAP,EAAA,IAACK,GAAA,CACC,GAAI,gCACJ,UAAQ,uBAER,eAACilC,GAAW,CAAA,QAAQ,KAAK,WAAY,EAAG,SAExC,wBAAA,CAAA,CACF,EACCtlC,MAAAK,GAAA,CAAK,GAAI,oBAAqB,UAAQ,mBACrC,SAACL,EAAAA,IAAAslC,GAAA,CAAW,QAAQ,KAAK,WAAY,EAAG,qCAExC,CAAA,EACF,EACCtlC,MAAAK,GAAA,CAAK,GAAI,sBAAuB,UAAQ,oBACvC,SAACL,EAAAA,IAAAslC,GAAA,CAAW,QAAQ,KAAK,WAAY,EAAG,sCAExC,CAAA,EACF,CAAA,EACF,QACCpjC,GAAO,EAAA,EACPgkC,IAAY,eACXhmC,EAAA,KAACD,GAAK,QAAQ,UAAU,UAAU,SAAS,SAAA,CAAA,4BACf,IAC1BD,EAAA,IAAC0mC,GAAA,CACC,KAAK,iDACL,OAAO,SACP,IAAI,sBACJ,MAAM,eACN,UAAU,SACX,SAAA,sBAAA,CAED,EAAW,IAAI,UACP,IACR1mC,EAAA,IAAC0mC,GAAA,CACC,KAAK,4CACL,OAAO,SACP,IAAI,sBACJ,MAAM,eACN,UAAU,SACX,SAAA,gBAAA,CAED,EAAW,IAAI,MACX,IACJ1mC,EAAA,IAAC0mC,GAAA,CACC,KAAK,4CACL,OAAO,SACP,IAAI,sBACJ,MAAM,eACN,UAAU,SACX,SAAA,kBAAA,CAED,EAAW,IAAI,QAEjB,CAAA,CAAA,EACER,IAAY,WACdhmC,OAACD,GAAK,QAAQ,UAAU,UAAU,SAAS,SAAA,CAAA,4BACf,IAC1BD,EAAA,IAAC0mC,GAAA,CACC,KAAK,2BACL,OAAO,SACP,IAAI,sBACJ,MAAM,eACN,UAAU,SACX,SAAA,UAAA,CAED,EAAW,IAAI,UACP,IACR1mC,EAAA,IAAC0mC,GAAA,CACC,KAAK,mCACL,OAAO,SACP,IAAI,sBACJ,MAAM,eACN,UAAU,SACX,SAAA,gBAAA,CAED,EAAW,IAAI,MACX,IACJ1mC,EAAA,IAAC0mC,GAAA,CACC,KAAK,iCACL,OAAO,SACP,IAAI,sBACJ,MAAM,eACN,UAAU,SACX,SAAA,kBAAA,CAED,EAAW,IAAI,QAAA,CAAA,CAEjB,EACE,IACN,CAAA,CAAA,CAEJ,CACF,ECrNMC,GAAiBvpC,EAAO,KAAK,EAAE,CAAC,CAAE,MAAAE,MAAa,CACnD,MAAO,OACP,OAAQ,OACR,UAAW,QACb,EAAE,EAEWspC,GAAwB,IAAM,CACzC,MAAMnrC,EAAWC,KACX,CACJ,OAAQ,CAAE,sBAAAmrC,CAAsB,CAC9B,EAAAtlC,EACE,CAAE,aAAAtG,CAAA,EAAiBC,EAAA,WAAWC,EAAS,EACvC,CAAE,SAAA4C,CAAa,EAAA9C,EACb,QAAA,IAAI,WAAY8C,CAAQ,EAChC,MAAM+oC,EAAwB,IAAM,CAClCrrC,EAAS,eAAe,CAAA,EAE1B,OACGyE,EAAAA,KAAA6mC,GAAA,CAAc,WAAU,GAAC,UAAU,2BAClC,SAAA,CAAA/mC,EAAA,IAAC2mC,GAAe,CAAA,IAAKE,EAAuB,IAAI,eAAe,EAC/D7mC,EAAAA,IAACC,GAAK,QAAQ,KAAK,UAAW,EAAG,UAAU,SAAS,SAEpD,4BAAA,CAAA,QACCA,EAAK,CAAA,QAAQ,QAAQ,UAAU,SAAS,SAEzC,mDAAA,EACAD,EAAA,IAACsC,GAAA,CACC,QAAQ,YACR,QAASwkC,EACT,GAAI,CAAE,MAAO,cAAe,UAAW,QAAS,EACjD,SAAA,qBAAA,CAED,CACF,CAAA,CAAA,CAEJ,ECKA,SAAS5nB,GAAegG,EAAgB,CAC/B,OAAAvT,EAAAA,QAAQ,IAAM,IAAI,gBAAgBuT,CAAM,EAAG,CAACA,CAAM,CAAC,CAC5D,CAEA,MAAM8hB,GAAa5pC,EAAO,KAAK,EAAE,CAAC,CAAE,MAAAE,MAAa,CAC/C,MAAO,OACP,OAAQ,OAER,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,OAAQ,MACV,EAEA,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,OAAQ,OACR,SAAU,QACZ,CACF,EAAE,EAEI2pC,GAAwB7pC,EAAOgF,CAAG,EAAE,CAAC,CAAE,MAAA9E,MAAa,CACxD,UAAWA,EAAM,QAAQ,CAAC,EAC1B,aAAcA,EAAM,QAAQ,GAAG,EAI/B,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,MAAO,OAGT,CACF,EAAE,EAOK,SAAS4pC,GAAO,CAAE,gBAAA5/B,EAAiB,cAAAs8B,GAAoC,CACtE,KAAA,CAAE,OAAAze,GAAWnnB,KACb,CAAE,WAAA6c,GAAesqB,KACjB,CAAE,SAAA19B,CAAA,EAAavM,EAAA,WAAWC,EAAS,EACnC,CACJ,aAAc,CAAE,oBAAAmR,CAAoB,CAAA,EAClCpR,EAAAA,WAAW0vB,EAAY,EACrBuc,EAAcC,KACd1rB,EAAcwD,GAAeiG,CAAM,EACnCkiB,EAAiB3rB,EAAY,IAAI,WAAW,GAAK,GACjD,CAACZ,EAAWkT,CAAY,EAAI3yB,WAASgsC,CAAc,EACnD,CAAE,QAAArqB,EAAS,WAAAsqB,EAAY,WAAA1rC,GAAe4L,GAAW,EACjD,CAAE,QAAS+/B,CAAA,EAAmB3rC,EAAWohB,EAAQ,eAAe,EAChEwqB,EAAerY,GAActU,CAAwC,EACvE,GAAA,OAAO2sB,GAAiB,WAC1B,MAAM,IAAI,MAAM,wBAAwB3sB,CAAU,EAAE,EAEtD,KAAM,CAAE,kBAAA4sB,EAAmB,uBAAAC,CAAuB,EAAI3mB,GAAkB,EAClE4mB,EAAU,CAAC7sB,GAAa4sB,EACxB,CAAE,SAAAprC,GAAa2B,KACf,CAAE,uBAAAI,CAAA,EAA2BE,GAAoBjC,CAAQ,EACzDsrC,EAAgC9/B,GAAe,UAAU,EAC3D+S,IAAe,YAEjBa,EAAY,IAAI,eAAgB,KAAK,UAAUpP,CAAmB,CAAC,EAGrE,IAAIu7B,EAAaC,KAEjB,MAAMC,EAAoBl7B,GAAY,CACpC,WAAY,IAAM26B,EAAa,CAAE,YAAA9rB,EAAa,EAC9C,UAAW,MAAO5R,GAAmC,CACnD,KAAM,CAAE,KAAMk+B,GAAgB,MAAMT,EAAe,EACxCD,EAAA,CACT,QAASU,CAAA,CACV,EACYha,EAAAlkB,EAAK,OAAO,SAAS,CACpC,EACA,QAAS,CAACnE,EAAcoH,EAAWk7B,IAAY,CAC7CxgC,EAAS,eAAgB9B,CAAK,EAExB,MAAAw6B,EAAiBgH,EAAY,oBAI/BhH,EAAe,WAAaA,EAAe,UAAU,SACvDA,EAAe,UAAU,QAAQx6B,EAAOoH,EAAWk7B,CAAO,CAE9D,CAAA,CACD,EAEDpsC,EAAAA,UAAU,IAAM,CAEZ,CAACif,GACD,CAACitB,EAAkB,SACnB,CAACA,EAAkB,WAEfltB,IAAe,UACLa,EAAA,IACV,uBACAksB,EAA8B,SAAS,CAAA,EAG3CG,EAAkB,OAAO,GAChBV,GAAkBvsB,IAAcusB,GACzCrZ,EAAaqZ,CAAc,CAC7B,EACC,CACDvsB,EACAitB,EACAV,EACAO,CAAA,CACD,EAE2BC,GAAA,MAAAA,EAAY,KAAK,cAE7C,MAAMK,EAAqB,IACrBrtB,IAAe,kBAEf7a,EAAA,IAACmoC,GAAA,CACC,UAAU,UACV,SAAUC,EAAA,CAAA,EAITpoC,EAAA,IAAC8lB,GAAc,CAAA,UAAW,EAAI,CAAA,EAGvC,OACG9lB,EAAA,IAAAkxB,GAAA,CAAsB,UAAApW,EAAsB,WAAAD,EAC3C,SACG3a,EAAA,KAAAO,WAAA,CAAA,SAAA,CACCknC,EAAAO,EAAA,EAEAhoC,EAAA,KAACmB,EAAK,CAAA,GAAI,CAAE,QAAS,oBAAwB,EAAA,UAAS,GACpD,SAAA,CAACrB,EAAAA,IAAAqoC,GAAA,CAAQ,SAAU,EAAM,CAAA,SACxBrB,GACE,CAAA,SAAA,CAAensB,IAAA,UACb7a,EAAAA,IAAAsoC,GAAA,CAAa,UAAAxtB,CAAsB,CAAA,EAGrCD,IAAe,SAAY7a,EAAAA,IAAAuoC,GAAA,CAAY,UAAAztB,CAAsB,CAAA,EAC7DD,IAAe,YACb7a,EAAAA,IAAA4vB,GAAA,CAAe,UAAA9U,CAAsB,CAAA,EAEvCD,IAAe,SAAY7a,EAAAA,IAAAwoC,GAAA,CAAY,UAAA1tB,CAAsB,CAAA,EAC7DD,IAAe,YACb7a,EAAAA,IAAAyoC,GAAA,CAAa,UAAA3tB,CAAsB,CAAA,EAErCD,IAAe,WACb7a,EAAAA,IAAA0oC,GAAA,CAAc,UAAA5tB,CAAsB,CAAA,EAEtCD,IAAe,WACb7a,EAAAA,IAAA2oC,GAAA,CAAgB,UAAA7tB,CAAsB,CAAA,EAExCD,IAAe,eACd7a,EAAA,IAAC4oC,GAAA,CACC,gBAAAthC,EACA,cAAAs8B,EACA,UAAA9oB,CAAA,CACF,EAEDD,IAAe,eACd7a,EAAA,IAAC6oC,GAAA,CACC,UAAA/tB,EACA,gBAAAxT,EACA,cAAAs8B,CAAA,CACF,EAED/oB,IAAe,YACd7a,EAAA,IAAC8oC,GAAA,CACC,gBAAAxhC,EACA,cAAAs8B,EACA,UAAA9oB,CAAA,CACF,EAEDD,IAAe,YACb7a,EAAAA,IAAA+oC,GAAA,CAAe,UAAAjuB,CAAsB,CAAA,EAEvCD,IAAe,YACb7a,EAAAA,IAAAgpC,GAAA,CAAe,UAAAluB,CAAsB,CAAA,EAEvCD,IAAe,mBACb7a,EAAAA,IAAAipC,GAAA,CAAqB,UAAAnuB,CAAsB,CAAA,EAE7CD,IAAe,aACd7a,EAAA,IAACkpC,GAAA,CACC,gBAAA5hC,EACA,cAAAs8B,EACA,UAAA9oB,CAAA,CACF,CAAA,EAEJ,CAAA,EACF,EAGD,CAACzc,GACA2B,EAAA,IAACinC,GACC,CAAA,SAAAjnC,EAAA,IAACmpC,GAAA,CACC,gBAAA7hC,EACA,cAAAs8B,CAAA,CAAA,EAEJ,CAAA,CAEJ,CAAA,CACF,CAAA,CAEJ,CCvPO,MAAMwF,GAAgB,IAAM,CAE3B,MAAAhO,EADe,IAAI,gBAAgBp9B,KAAc,MAAM,EAClC,IAAI,GAAG,EAElC,OAAKo9B,EAIEp7B,MAACqpC,IAAkB,MAAAjO,CAAc,CAAA,EAH/Bp7B,EAAA,IAAC,MAAG,SAAa,eAAA,CAAA,CAI5B,ECOgB,SAAAspC,GAAmB,CAAE,SAAAC,GAAqC,CAClE,KAAA,CACJ,QAAS,CAAE,QAAA5tC,CAAQ,GACjB6L,GAAW,EACT2/B,EAAcC,KACdoC,EAAiB7tC,GAAA,YAAAA,EAAS,QAAQ,UAAU,aACzBT,EAAAA,WAAWC,EAAS,EAEvC,MAAAJ,EAAgB,IAAIC,GACpB,CAAE,SAAAsB,GAAa2B,KACf,CAAE,8BAAAK,EAA+B,uBAAAD,CAAuB,EAC5DE,GAAoBjC,CAAQ,EAExByB,EAAWC,KACXvC,EAAWC,KAEX+tC,EAAmB,CACvB,mBACA,iBACA,yBACA,wBACA,sBAAA,EAEIC,EAAc,mBAAmB,KAAK3rC,EAAS,QAAQ,EAE7DlC,EAAAA,UAAU,IAAM,CACU8tC,GAAA,EACvB,CAAChuC,CAAO,CAAC,EAEZE,EAAAA,UAAU,IAAM,CACW+tC,GAAA,EACxB,CAACttC,EAAUotC,CAAW,CAAC,EAE1B7tC,EAAAA,UAAU,IAAM,CACV,EAACF,GAAA,MAAAA,EAAS,UAAW8tC,EAAiB,SAAS1rC,EAAS,QAAQ,GAIjE,CAAC,aAAc,SAAS,EAAE,SAAS,YAA+B,CAEnE,EACD,CAACpC,GAAA,YAAAA,EAAS,OAAO,CAAC,EAErB,SAASguC,GAA0B,aAC5BhuC,KACDgB,GAAAX,EAAAL,GAAA,YAAAA,EAAS,UAAT,YAAAK,EAAkB,aAAlB,MAAAW,EAA8B,UAEhCD,EAAAf,GAAA,YAAAA,EAAS,QAAQ,YAAjB,YAAAe,EAA4B,eAAgB,eAC5CM,EAAArB,GAAA,YAAAA,EAAS,QAAQ,YAAjB,YAAAqB,EAA4B,kBAAmB,QAE/C,OAAO,SAAS,KAAO,qCAE3B,CAEA,SAAS4sC,GAA2B,CAC9BF,IACEprC,GAAiCD,IAE/B5C,EADJ4C,EACa,qBACA,qBADoB,CAIvC,CAwBI,GAFJwrC,GAAgB,CAAE,gBAAiB9rC,EAAS,QAAU,CAAA,EAElD,CAAC+rC,KAAkB,CACrB,MAAM/uB,EAAMhd,EAAS,SAAWA,EAAS,OAASA,EAAS,KAYzD,OAVEhD,EAAc,SAAS,UAAU,IACjBgvC,KAClB5C,EAAY,MAAM,EAElB,WAAW,IAAM,CACf,OAAO,SAAS,UACf,GAAG,GAKL,CAAC,YAAY,EAAE,SAAS,YAA+B,GAIxD6C,GAAU,8BAA8B,EACjC,MAHChqC,MAAAiqC,GAAS,CAAA,GAAG,SAAS,MAAO,CAAE,KAAMlvB,CAAI,EAAG,QAAO,EAAC,CAAA,CAK/D,CACA,OAAIyuB,GAAkB,CAACC,EAAiB,SAAS1rC,EAAS,QAAQ,EAE7DiC,EAAA,IAAAiqC,GAAS,CAAA,GAAI,iBAAkB,MAAO,CAAE,KAAMlsC,CAAS,EAAG,QAAO,EAAC,CAAA,EAIhEwrC,CACT,CC/HgB,SAAAW,GAAY,CAAE,SAAAX,GAA8B,CACpD,KAAA,CACJ,QAAS,CAAE,gBAAAY,CAAgB,GACzB3iC,GAAW,EACTzJ,EAAWC,KAEb,OAAAmsC,GAAmBL,KAEnB9pC,EAAA,IAACiqC,GAAA,CACC,GAAIlsC,EAAS,OAAS,aAAaA,EAAS,MAAM,GAAK,aACvD,MAAO,CAAE,KAAMA,CAAS,EACxB,QAAO,EAAA,CAAA,oBAKH,SAAAwrC,CAAS,CAAA,CACrB,CCtB+BnsC,EAAOmD,CAAK,EAAE,CAAC,CAAE,MAAAjD,MAAa,CAC3D,SAAU,QACV,IAAK,GACL,MAAO,OACP,OAAQ,EAER,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,OAAQ,EACR,aAAcA,EAAM,QAAQ,CAAC,EAC7B,OAAQ,QACR,UAAW,QACX,SAAU,QACZ,CACF,EAAE,EAEK,MAAM8sC,GAA8BhtC,EAAOmD,CAAK,EAAE,CAAC,CAAE,MAAAjD,MAAa,CACvE,SAAU,QACV,IAAK,GACL,MAAO,OACP,OAAQ,EACR,KAAM,EAEN,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,IAAK,EACL,WAAY,GACZ,OAAQ,EACR,aAAcA,EAAM,QAAQ,CAAC,EAC7B,OAAQ,QACR,UAAW,QACX,SAAU,SACV,SAAU,QACV,SAAU,OACZ,CACF,EAAE,EAE6BF,EAAO,IAAI,EAAE,CAAC,CAAE,MAAAE,MAAa,CAC1D,UAAW,OACX,QAAS,OACT,OAAQA,EAAM,QAAQ,GAAK,GAAK,GAAG,EACnC,QAAS,EACT,SAAU,WACV,IAAK,OACL,OAAQ,OACR,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,SAAU,QACV,OAAQ,QACR,IAAK,CACP,EACA,eAAgB,CACd,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,IAAKA,EAAM,QAAQ,CAAC,CACtB,CACF,CACF,EAAE,EAEiCF,EAAO,IAAI,EAAE,CAAC,CAAE,MAAAE,MAAa,CAC9D,MAAO,OACP,SAAU,WACV,QAAS,QACT,WAAYA,EAAM,QAAQ,IAAK,EAC/B,kBAAmB,CACjB,OAAQ,UACR,MAAOA,EAAM,QAAQ,QAAQ,KAC7B,gBAAiB,CACf,QAAS,OACX,CACF,EACA,gBAAiB,CACf,QAAS,MACX,CACF,EAAE,EAEK,MAAM+sC,GAAYjtC,EAAO,QAAQ,EAAE,CAAC,CAAE,MAAAE,MAAa,CACxD,gBAAiB,cACjB,MAAOA,EAAM,QAAQ,KAAK,UAC1B,QAASA,EAAM,QAAQ,GAAK,CAAC,EAC7B,aAAc,OACd,OAAQ,aAAaA,EAAM,QAAQ,KAAK,GAAG,CAAC,GAC5C,OAAQ,UACR,8BAA+B,cAC/B,qBAAsB,OACtB,kBAAmB,OACnB,WAAY,OAEZ,SAAU,CACR,gBAAiBA,EAAM,QAAQ,WAAW,OAC5C,EAEA,SAAU,CACR,QAAS,OACT,gBAAiB,aACnB,EAEA,UAAW,CACT,gBAAiB,cACjB,MAAO,UACP,QAAS,CACX,EAEA,WAAY,CACV,OAAQ,aAAaA,EAAM,QAAQ,QAAQ,IAAI,GAC/C,MAAOA,EAAM,QAAQ,QAAQ,KAC7B,mBAAoB,CAClB,gBAAiBA,EAAM,QAAQ,QAAQ,IACzC,CACF,EAEA,aAAc,CACZ,QAAS,GACX,EAEA,mBAAoB,CAClB,MAAOA,EAAM,QAAQ,QAAQ,aAC7B,gBAAiBA,EAAM,QAAQ,QAAQ,KACvC,QAAS,OACT,WAAY,SACZ,IAAKA,EAAM,QAAQ,EAAG,CACxB,CACF,EAAE,EAEWgtC,GAAgBltC,EAAO,KAAK,EAAE,CAAC,CAAE,MAAAE,MAAa,CACzD,OAAQ,OACR,MAAO,OACP,gBAAiBA,EAAM,QAAQ,KAAK,UACpC,aAAc,OACd,QAAS,OACT,eAAgB,SAChB,WAAY,SACZ,MAAOA,EAAM,QAAQ,OAAO,KAC9B,EAAE,EAEWitC,GAAentC,EAAOmD,CAAK,EAAE,CAAC,CAAE,MAAAjD,MAAa,CACxD,SAAU,SACV,IAAK,OACL,OAAQ,EACR,gBAAiBA,EAAM,QAAQ,QAAQ,aACvC,KAAM,EACN,MAAO,EACP,WAAY,OACZ,YAAa,QAEb,CAACA,EAAM,YAAY,QAAQ,KAAM,IAAI,CAAC,EAAG,CACvC,QAAS,WACX,EAEA,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,IAAK,OACL,QAAS,OACT,YAAa,IACb,WAAY,GACd,EAEA,CAACA,EAAM,YAAY,QAAQ,KAAM,IAAI,CAAC,EAAG,CACvC,IAAK,MACP,EAEA,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,IAAK,MACP,CACF,EAAE,EAE8BF,EAAOgF,CAAG,EAAE,CAAC,CAAE,MAAA9E,MAAa,CAC1D,UAAW,OACX,OAAQ,EACR,WAAY,OACZ,MAAO,OAEP,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,MAAO,MACP,UAAW,GACb,CACF,EAAE,EAEK,MAAMktC,GAAyBptC,EAAOiE,CAAI,EAAE,KAAO,CAAA,EAAG,EAEhDopC,GAAmBrtC,EAAOiE,CAAI,EAAE,CAAC,CAAE,MAAA/D,MAAa,CAC3D,WAAY,EACZ,SAAU,WACV,OAAQ,EACR,WAAY,QACZ,WAAY,uBACZ,KAAM,EAEN,CAACA,EAAM,YAAY,KAAK,IAAI,CAAC,EAAG,CAC9B,MAAO,MACT,CACF,EAAE,EAEWotC,GAAoBttC,EAAOiE,CAAI,EAAE,CAAC,CAAE,MAAA/D,MAAa,CAC5D,UAAW,EACX,SAAU,WACV,QAAS,OACT,WAAY,aACZ,cAAe,SACf,QAAS,EACT,SAAU,OACV,MAAO,OACP,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,YAAaA,EAAM,QAAQ,CAAC,EAC5B,aAAcA,EAAM,QAAQ,CAAC,CAC/B,EAEA,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,YAAaA,EAAM,QAAQ,CAAC,EAC5B,aAAcA,EAAM,QAAQ,CAAC,CAC/B,EAEA,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,cAAe,KACjB,EAEA,kBAAmB,CACjB,WAAY,CACd,CACF,EAAE,EAEWqtC,GAA2BvtC,EAAOmD,CAAK,EAClD,CAAC,CAAE,cAAAqqC,CAAA,KAAiD,CAClD,IAAK,GACL,OAAQ,EACR,UAAW,aACX,OAAQ,qBACR,SAAUA,EAAgB,SAAW,QACrC,UAAWA,EAAgB,gBAAkB,mBAC7C,QAASA,EAAgB,EAAI,EAC7B,cAAe,SACf,EAAG,EACH,EAAG,EACH,WAAY,uBACZ,MAAO,MAAA,EAEX,EAEaC,GAA4BztC,EAAOmD,CAAK,EACnD,CAAC,CAAE,cAAAqqC,CAAA,KAA6D,CAC9D,SAAUA,EAAgB,QAAU,IACpC,SAAUA,EAAgB,QAAU,IACpC,OAAQ,OACR,WAAY,EACZ,SAAUA,EAAgB,UAAY,SACtC,WAAY,uBACZ,OAAQA,EAAgB,mBAAqB,IAC7C,QAAS,GAAA,EAEb,ECzO+BxtC,EAAQyI,SACpCilC,GAAU,CAAA,gBAAe,GAAC,eAAc,GAAC,OAAM,GAAE,GAAGjlC,CAAO,CAAA,CAC7D,EAAE,CAAC,CAAE,MAAAvI,EAAO,0BAAAytC,MAAiC,CAC5C,OAAQ,EACR,OAAQ,EACR,MAAOztC,EAAM,QAAQ,KAAK,QAE1B,UAAW,CACT,UAAW,MACb,EAEA,2DAA4D,CAC1D,YAAa,EACb,aAAc,CAChB,EAEA,qDAAsD,CACpD,MAAOA,EAAM,QAAQ,KAAK,QAC1B,WAAYA,EAAM,WAAW,cAC/B,EACA,4DAA6D,CAC3D,MAAOytC,EACH,GAAGztC,EAAM,QAAQ,QAAQ,IAAI,cAC7BA,EAAM,QAAQ,KAAK,OACzB,CACF,EAAE,EAEK,MAAM0tC,GAAe5tC,EAAOkF,EAAM,EAAE,CAAC,CAAE,MAAAhF,MAAa,CACzD,gBAAiBA,EAAM,QAAQ,QAAQ,KACvC,MAAOA,EAAM,QAAQ,OAAO,MAC5B,OAAQ,KAAKA,EAAM,QAAQ,CAAC,CAAC,GAC7B,MAAO,MACP,UAAW,CACT,gBAAiBA,EAAM,QAAQ,QAAQ,IACzC,CACF,EAAE,EAEkCF,EAAOo0B,EAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBlD,MAAMyZ,GAAmB7tC,EAAOgF,CAAG,EAAE,CAAC,CAAE,MAAA9E,MAAa,CAC1D,UAAW,SACX,sBAAuB,CACrB,WAAY,KACd,EAEA,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,sBAAuB,CACrB,WAAY,CACd,CACF,CACF,EAAE,EC7CK,SAAS4tC,GAAc,CAC5B,wBAAAC,EACA,WAAAC,EACA,uBAAAC,EACA,0BAAAC,CACF,EAAsB,CACd,MAAAC,EAAU7/B,SAAwB,IAAI,EACtC,CAAC8/B,EAAoBC,CAAqB,EAAIpwC,WAAS,EAAI,EAC3DwM,EAA6BC,GAAe,WAAW,EACvDxK,EAAQuH,KACRq0B,EAAYwS,GAAcpuC,EAAM,YAAY,GAAG,IAAI,CAAC,EACpDquC,EAAmBD,GAAcpuC,EAAM,YAAY,KAAK,IAAI,CAAC,EAC7D,CAAE,SAAAsuC,EAAU,SAAA1tC,CAAS,EAAIC,GAAc,EACvC,CAAC0U,EAAcsb,CAAe,EAAIC,GAAgB,EAClDyd,EAA6BC,GACjCX,CAAA,EAEIY,EAAYrgC,SAGR,IAAI,EAERsgC,EAAuB,IAAM,CAC7BD,EAAU,SACZA,EAAU,QAAQ,YACpB,EAGIE,EAAsB,IAAM,CAC5BF,EAAU,SACZA,EAAU,QAAQ,aACpB,EAGIG,EAAc,CAClB,YACEb,IAA2B,OACvBA,EACAG,EACN,eACEF,IAA8B,OAC1BA,EACAG,CAAA,EAGFU,EAAqB,IAAM,CAC/B,GAAIjT,EAEA,OAAAh5B,EAAA,KAACkC,EAAA,CACC,GAAI,CACF,gBAAiB,OACjB,QAAS,SACT,aAAc,MAChB,EAEA,SAAA,CAAApC,EAAA,IAACmb,GAAQ,CAAA,GAAI,CAAE,GAAI,GAAK,EACxBjb,EAAA,KAACK,EAAA,CACC,UAAW,MACX,WAAY,SACZ,eAAgB,gBAEf,SAAA,CACCsH,GAAA7H,EAAA,IAACK,GAAA,CACC,QAAS,IAAM4rC,EAAoB,EACnC,UAAQ,0BACR,GAAI,CACF,OAAQ,UACR,OAAQ,SACR,MAAO,KACT,EAEA,SAAAjsC,EAAA,IAACC,EAAA,CACC,QAAQ,KACR,GAAK3C,IAAW,CACd,MAAOA,EAAM,QAAQ,QAAQ,KAC7B,aAAc,IACd,UAAW,QAAA,GAEd,SAAA,WAAA,CAED,CAAA,CACF,EAGF0C,EAAA,IAACgrC,GAAA,CACC,GAAG,iBACH,KAAK,SACL,KAAK,iBACL,QAAQ,YACR,UAAS,GACT,QAASgB,EACT,GAAI,CACF,QAAS9S,EAAY,QAAU,OAC/B,MAAOrxB,EAA6B,MAAQ,MAC9C,EAEC,WAA6B,eAAiB,gBAAA,CACjD,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAGN,EAGIukC,EAAqB,KAClB,CACL,IAAKluC,EAAW,OAAS,MACzB,OAAQ,IACR,eAAgB,gBAChB,WAAY,SACZ,OAAQ,EACR,QAASA,EAAW,qBAAuB,qBAC3C,WAAYA,EAAW,OAAS,OAChC,gBAAiB,QACjB,aAAc,aAAaZ,EAAM,QAAQ,OAAO,GAChD,cAAe,MACf,SAAU,QAAA,GAIZ,OAAA4C,EAAA,KAACkC,EAAA,CACC,GAAI,CACF,OAAQupC,EAAmB,QAAU,YACrC,YAAaA,EAAmB,QAAU,UAC1C,aAAcA,EAAmB,QAAU,OAC3C,WAAY,QACZ,SAAU,WACV,gBAAkBH,EAEd,OADAluC,EAAM,QAAQ,WAAW,MAE7B,OAAQquC,EAAmB,QAAU,OACrC,QAAS,OACT,cAAe,QACjB,EAGA,SAAA,CAAAzrC,EAAA,KAACkC,EAAA,CACC,GAAI,CACF,WAAY,EACZ,SAAU,SACV,IAAK,EACL,OAAQ,KACR,gBAAiB9E,EAAM,QAAQ,WAAW,MAC1C,aAAcquC,EACV,aAAaruC,EAAM,QAAQ,OAAO,GAClC,OACJ,aAAcquC,EAAmB,QAAU,eAC7C,EAEC,SAAA,CACCzS,GAAAh5B,EAAA,KAACK,EAAA,CACC,UAAU,MACV,eAAe,gBACf,WAAW,SACX,GAAI,CACF,MAAO,OACP,WAAY,OACZ,QAAS,sBACT,aAAc,MAChB,EAEA,SAAA,CAAAL,EAAA,KAACK,EAAA,CACC,cAAc,MACd,IAAK,EACL,WAAY,SACZ,GAAI,CAAE,QAAS,CAAE,GAAI,OAAQ,GAAI,OAAS,EAE1C,SAAA,CAAAP,MAACqsC,IAAY,SAAS,SAAS,GAAI,CAAE,WAAY,QAAU,QAC1DpsC,EAAK,CAAA,QAAQ,KAAK,EAAG,EAAG,SAEzB,iBAAA,CAAA,CAAA,CACF,EACC4H,SACElH,GAAW,CAAA,QAASyqC,EAAY,KAAK,QACpC,SAACprC,EAAA,IAAAyzB,GAAA,CAAA,CAAU,CACb,CAAA,CAAA,CAAA,CAEJ,EAEDmY,GAAY,CAACM,EAAY,oBACvB3rC,EAAM,CAAA,GAAI6rC,EACT,EAAA,SAAA,CAAClsC,EAAAA,KAAAD,EAAA,CAAK,QAAQ,KACZ,SAAA,CAACD,EAAAA,IAAAssC,GAAA,CAAK,GAAI,CAAE,EAAG,IAAM,GAAI,IAAA,EAAS,MAAO,SAAW,CAAA,EAAE,gBAAA,EAExD,EACAtsC,EAAA,IAACsC,GAAA,CACC,GAAG,iBACH,KAAK,SACL,KAAK,iBACL,QAAS,IACP4pC,EAAY,eAAe,CAACA,EAAY,WAAW,EAErD,GAAK5uC,IAAW,CACd,UAAW,aACX,MAAO,GAAGA,EAAM,QAAQ,KAAK,SAAS,GACtC,UAAW,CACT,WAAY,aACd,EAEA,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,QAAS,MACX,CAAA,GAGF,eAACqjB,GAAM,EAAA,CAAA,CACT,CAAA,EACF,CAAA,CAAA,CAEJ,EAGA3gB,EAAA,IAACoC,EAAA,CACC,GAAI,CACF,KAAM,EACN,SAAU,OACV,QAAS,OACT,cAAe,QACjB,EAEA,SAAApC,EAAA,IAACirC,GAAA,CACC,GAAI,CACF,aAAc,OACd,WAAY/sC,EAAW,OAAS,QAChC,KAAM,EACN,QAAS,OACT,cAAe,QACjB,EAEA,SAAA8B,EAAA,IAACusC,GAAA,CACC,iBAAkB,GAClB,YAAAL,EACA,qBAAAF,EAEA,SAAAhsC,EAAA,IAACwsC,GAAA,CACC,IAAKT,EACL,QAAAR,EACA,SAAUM,EACV,mBACER,IAA2B,OACvBA,EACAG,EAEN,sBACEF,IAA8B,OAC1BA,EACAG,EAEN,aAAA54B,EACA,gBAAAsb,CAAA,CACF,CAAA,CACF,CAAA,CACF,CAAA,CACF,EAGAnuB,EAAA,IAACoC,EAAA,CACC,GAAI,CACF,WAAY,EACZ,SAAU,SACV,OAAQ,EACR,OAAQ,KACR,gBAAiB9E,EAAM,QAAQ,WAAW,MAC1C,UAAW,OACX,aAAcquC,EAAmB,QAAU,eAC7C,EAEA,eAACQ,EAAmB,EAAA,CAAA,CACtB,CAAA,CAAA,CAAA,CAGN,CC5Sa,MAAAM,GAAgCrvC,EAAOgF,CAAG,EAAE,CAAC,CAAE,MAAA9E,EAAO,IAAAovC,MAAW,CAC5E,QAAS,OACT,WAAY,SACZ,SAAU,SACV,OAAQ,EACR,gBAAiBpvC,EAAM,QAAQ,QAAQ,aACvC,WAAY,OACZ,cAAe,OACf,IAAK,GAAGovC,GAAY,OAAO,GAC3B,SAAU,SACV,CAACpvC,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,IAAK,QACL,QAAS,MACX,CACF,EAAE,EAE+BF,EAAOgF,CAAG,EAAE,CAAC,CAAE,MAAA9E,MAAa,CAC3D,aAAc,MACd,MAAO,OACP,OAAQ,OACR,OAAQ,UACR,QAAS,OACT,eAAgB,SAChB,WAAY,SACZ,MAAOA,EAAM,QAAQ,KAAK,UAC1B,WAAY,CACV,gBAAiBA,EAAM,QAAQ,WAAW,OAC5C,EACA,aAAc,CACZ,gBAAiB,cACjB,MAAOA,EAAM,QAAQ,KAAK,QAC5B,CACF,EAAE,EAEK,MAAMqvC,GAAsBvvC,EAAOkF,EAAM,EAAE,CAAC,CAAE,MAAAhF,MAAa,CAChE,OAAQ,aAAaA,EAAM,QAAQ,OAAO,GAC1C,aAAc,OACd,MAAOA,EAAM,QAAQ,KAAK,QAC1B,WAAY,OACZ,SAAU,EACV,SAAU,EACV,SAAU,QACV,OAAQ,MACV,EAAE,EC7BIsvC,GAAuB,CAAC,CAC5B,QAAAviC,EACA,eAAAwiC,EACA,kBAAAC,EACA,kCAAAC,EACA,0BAAAzB,CACF,IAAiC,CACzB,MAAA0B,EAAqBthC,SAAuB,IAAI,EAChDuhC,EAAavhC,SAAiD,CAAA,CAAE,EAChE,CAACmH,CAAY,EAAIub,KAEvBvyB,EAAAA,UAAU,IAAM,CACd,MAAMqxC,EAAYF,EAAmB,QAC/BG,EAAiBF,EAAW,QAAQJ,CAAc,EAExD,GAAIK,GAAaC,EAAgB,CACzB,MAAAC,EAAgBF,EAAU,wBAC1BG,EAAaF,EAAe,wBAC5BG,EACJD,EAAW,KAAOD,EAAc,MAAQ,EAAIC,EAAW,MAAQ,EAEjEH,EAAU,SAAS,CACjB,KAAMI,EACN,SAAU,QAAA,CACX,CACH,CAAA,EACC,CAACT,CAAc,CAAC,EAEb,MAAAU,EAAmB5iC,GAAuB,CAC1CA,EAAO,QAAUkiC,GACnBC,EAAkBniC,CAAM,CAC1B,EAGI6iC,EAAkB,IAAM,CAC5B,MAAMtoB,EAAS,CACb,SAAUrS,EAAa,IAAI,UAAU,EACrC,MAAOA,EAAa,IAAI,OAAO,EAC/B,GAAIA,EAAa,IAAI,IAAI,EACzB,GAAIA,EAAa,IAAI,IAAI,EACzB,IAAKA,EAAa,IAAI,KAAK,EAC3B,KAAMA,EAAa,IAAI,MAAM,EAC7B,MAAOA,EAAa,IAAI,OAAO,EAC/B,QAASA,EAAa,IAAI,SAAS,EACnC,UAAWA,EAAa,IAAI,WAAW,EACvC,UAAWA,EAAa,IAAI,WAAW,EACvC,WAAYA,EAAa,IAAI,YAAY,EACzC,WAAYA,EAAa,IAAI,YAAY,EACzC,MAAOA,EAAa,IAAI,OAAO,EAC/B,QAASA,EAAa,IAAI,SAAS,EACnC,MAAOA,EAAa,IAAI,OAAO,EAC/B,SAAUA,EAAa,IAAI,UAAU,EACrC,iBAAkBA,EAAa,IAAI,gBAAgB,EACnD,iBAAkBA,EAAa,IAAI,gBAAgB,EACnD,QAASA,EAAa,IAAI,SAAS,CAAA,EAGrC,OAAO,OAAO,OAAOqS,CAAM,EAAE,OAAO,OAAO,EAAE,MAAA,EAI7C,OAAAllB,EAAA,IAACysC,GAAA,CACC,UAAU,SACV,IAAKM,EAAoC,IAAM,QAE/C,SAAA7sC,EAAA,KAACkC,EAAA,CACC,IAAK4qC,EACL,GAAI,CACF,QAAS,OACT,UAAW,OACX,eAAgB,SAChB,sBAAuB,CAAE,QAAS,MAAO,EACzC,SAAU,EACV,WAAY,SACZ,IAAK,MACL,SAAU,UACZ,EAEC,SAAA,CAAA,IACAD,GAAqCzB,GACpCprC,EAAA,KAACmqC,GAAA,CACC,QAAS,IAAM,CACbiB,EAA0B,EAAK,CACjC,EACA,UAAU,iBACV,GAAI,CACF,SAAU,SACV,KAAM,IACN,OAAQ,GACV,EAEA,SAAA,CAAAtrC,EAAA,IAACqsC,GAAY,CAAA,GAAI,CAAE,SAAU,QAAU,SACtCpsC,EAAK,CAAA,QAAQ,QAAQ,EAAG,EAAG,OAAM,GAAC,SAAA,CAAA,IAC/ButC,EAAgB,EAAE,GAAA,EACtB,CAAA,CAAA,CACF,EAEDnjC,EACE,OAAQM,GAAWA,EAAO,OAAO,EACjC,IAAKA,GACJ3K,EAAA,IAACqqC,GAAA,CAEC,IAAM/H,GAAQ2K,EAAW,QAAQtiC,EAAO,KAAK,EAAI23B,EACjD,QAAS,IAAMiL,EAAgB5iC,CAAM,EACrC,UAAWkiC,IAAmBliC,EAAO,MAAQ,SAAW,GACxD,GAAI,CAAE,YAAa,KAAM,EAEzB,gBAACpK,EAAM,CAAA,cAAc,MAAM,GAAI,EAAG,WAAW,SAC3C,SAAA,CAAAP,EAAA,IAACsqC,GAAA,CACC,UAAU,kBACV,GAAI,CACF,MAAO,SAAS3/B,EAAO,MAAM,EAAI,EAAI,OAAS,OAC9C,YAAa,KACf,EAEC,SAAAA,EAAO,OAASA,EAAO,OAAS,GAAA,CACnC,EACA3K,EAAAA,IAACC,GAAK,QAAQ,QAAQ,EAAG,EAAG,OAAM,GAC/B,SAAA0K,EAAO,KACV,CAAA,CAAA,EACF,CAAA,EAnBKA,EAAO,KAAA,CAqBf,CAAA,CAAA,CACL,CAAA,CAAA,CAGN,ECvGa8iC,GAAY,CACvB,MAAO,QACP,KAAM,MACR,EASaC,GAAa,CACxB,OAAQ,SACR,UAAW,aACX,SAAU,WACV,aAAc,eACd,QAAS,SACX,ECkIaC,GAA4B,CACvC,KAAM,OACN,MAAO,OACT,EC/IaC,GAAsB,CAAC,CAClC,QAAAvjC,EACA,eAAAwiC,EACA,kBAAAC,EACA,WAAAxd,EACA,YAAAue,EACA,eAAAC,EACA,kBAAAC,EACA,qBAAAC,EACA,cAAApD,EACA,iBAAAqD,EACA,2BAAAC,EACA,8BAAAC,CACF,IAAyB,CACjB,MAAAC,EAAqBC,GAAmB/e,EAAW,QAAQ,EAC9BxnB,GAAe,WAAW,EACvD,MAAAwmC,EAAuBxmC,GAAe,WAAW,EACjDxK,EAAQuH,KACRq0B,EAAYwS,GAAcpuC,EAAM,YAAY,GAAG,IAAI,CAAC,EACpDixC,EAA8BrV,GAAaoV,EAK3CE,EAAwB,GAExBC,EAAwB,IAAM,CAC9B,GAAA,CACF,IAAA9kC,EACA,MAAAN,EACA,KAAAD,EACA,QAAAoE,EACA,MAAA/D,EACA,QAAAC,EACA,SAAAglC,EACA,MAAAC,EACA,UAAAC,EACA,WAAAC,EACA,UAAAC,EACA,WAAAC,EACA,SAAAC,EACA,iBAAAC,EACA,iBAAAC,CACE,EAAA5f,EACE,OAAA3lB,EAAAA,IAAQ,IAAMA,EAAM,GACPslC,EAAAA,IAAqB,IAAMA,EAAmB,GAC9CC,EAAAA,IAAqB,IAAMA,EAAmB,GAEjD,CACdvlC,EACAN,EACAD,EACAoE,EACA/D,EACAC,EACAglC,EACA,GAAIC,GAAS,CAAC,EACdC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,CAAA,EAEa,OACZC,GAAQA,GAAOA,EAAI,SAAW,EAAA,KAAW,IAAA,IAAMA,IAAQ,IACxD,EAAA,MAAA,EAGEC,EAAyB,IACzB,CAACrB,GAAqB,CAAC7U,EAClB,KAIPh5B,EAAA,KAACysC,GAAA,CACC,UAAY3sC,EAAA,IAAAqvC,GAAA,CAAW,GAAI,CAAE,SAAU,IAAM,EAC7C,QAAS,IAAMrB,EAAqB,EAAK,EACzC,GAAI,CAAE,GAAI,CAAE,EACZ,QAAQ,WACT,SAAA,CAAA,mBACkBS,EAAsB,EAAE,GAAA,CAAA,CAAA,EAW7C,OAAAvuC,EAAA,KAACqqC,GAAA,CACC,cAAc,SACd,WAAW,OACX,GAAI,IACJ,GAAI,IACJ,QAAS,OAET,SAAA,CAAArqC,EAAA,KAACK,EAAM,CAAA,cAAc,MAAM,MAAO,EAChC,SAAA,CAACL,EAAAA,KAAAK,EAAA,CAAM,cAAc,MAAM,SAAS,OAAO,GAAI,KAAM,IAAK,EACxD,SAAA,CAAAP,EAAA,IAACovC,EAAuB,EAAA,EACvB/kC,EACE,OAAQM,GAAWA,EAAO,OAAO,EACjC,IAAKA,GACJ3K,EAAA,IAACqqC,GAAA,CAEC,QAAS,IAAMyC,EAAkBniC,CAAM,EACvC,UAAWkiC,IAAmBliC,EAAO,MAAQ,SAAW,GAExD,gBAACpK,EAAM,CAAA,cAAc,MAAM,GAAI,EAAG,WAAW,SAC3C,SAAA,CAAAP,EAAA,IAACsqC,GAAA,CACC,UAAU,kBACV,GAAI,CACF,MAAO,SAAS3/B,EAAO,MAAM,EAAI,EAAI,OAAS,OAC9C,YAAa,KACf,EAEC,SAAAA,EAAO,OAASA,EAAO,OAAS,GAAA,CACnC,QACC1K,EAAK,CAAA,QAAQ,QAAQ,EAAG,EACtB,WAAO,MACV,CAAA,EACF,CAAA,EAjBK0K,EAAO,KAAA,CAmBf,CAAA,EACL,EAEC6jC,CAWC,EAEJ,EAEEtuC,EAAA,KAACK,EAAA,CACC,UAAU,cACV,cAAc,MACd,GAAI,KACJ,GAAI,CACF,MAAO,EACP,GAAI,EACJ,GAAI,CACN,EACA,WAAW,SACX,eAAe,gBAEf,SAAA,CAAAL,EAAA,KAACK,EAAM,CAAA,UAAU,MAAM,WAAW,SAChC,SAAA,CAAAP,EAAA,IAACC,EAAA,CACC,QAAQ,KACR,GAAI,CACF,WAAY,SACZ,YAAa,MACb,aAAc,GAChB,EACD,SAAA,cAAA,CAED,QACCA,EAAK,CAAA,QAAQ,KAAK,EAAG,EACnB,SACHmuC,EAAA,CAAA,EACF,EACCG,GAEGruC,EAAA,KAAAO,WAAA,CAAA,SAAA,CAAAP,EAAA,KAACoC,GAAA,CACC,QAAS,WACT,KAAK,QACL,QAAS,IAAM,CACTsoC,EACFqD,EAAiBN,GAA0B,KAAK,GAEhDM,EAAiBN,GAA0B,IAAI,EAC/CQ,EAA8B,EAAK,EAEvC,EACA,GAAI,CACF,GAAI,EACJ,GAAI,GACJ,IAAK,EACP,EAEC,SAAA,CACCvD,EAAA5qC,EAAAA,IAACsvC,IAAO,GAAI,CAAE,MAAOhyC,EAAM,QAAQ,QAAQ,IAAK,CAAA,CAAG,EAElD0C,MAAAuvC,GAAA,CAAY,GAAI,CAAE,MAAOjyC,EAAM,QAAQ,QAAQ,MAAQ,EACvD,IACH4C,EAAA,KAACD,EAAA,CACC,MAAO3C,EAAM,QAAQ,QAAQ,aAC7B,QAAQ,QAEP,SAAA,CAAA,IACAstC,EAAgB,QAAU,kBAAA,CAAA,CAC7B,CAAA,CAAA,CACF,EACA5qC,EAAA,IAACwvC,GAAA,CACC,2BAAAtB,EACA,8BAAAC,EACA,mBAAAC,EACA,iBAAAH,CAAA,CACF,CAAA,EACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CAAA,CAIR,EClQMwB,GAAgB,IAChBC,GAAkB,GACXC,GAAiB,EAGjBC,GAAwBC,GAC5B,MAAM,KAAK,IAAI,IAAIA,CAAK,CAAC,EAIrBC,GAA0B,CACrCD,EACA5mC,IACQ,CACF,MAAA8mC,MAAW,IACV,OAAAF,EAAM,OAAQxxB,GAAS,CACtB,MAAAna,EAAQma,EAAKpV,CAAG,EAClB,OAAA8mC,EAAK,IAAI7rC,CAAK,EAAU,IAC5B6rC,EAAK,IAAI7rC,CAAK,EACP,GAAA,CACR,CACH,EAEa8rC,GAAcvnC,GAClBwnC,GAASxnC,GAAQ,EAAE,EAAE,eAAiB,GAGlCynC,GAAqB,CAACznC,EAAckB,IAC1CA,GAEDlB,EAAK,SAAS,KAAKkB,CAAG,EAAE,EACnBlB,EAAK,QAAQ,KAAKkB,CAAG,GAAI,EAAE,EAAE,MAAM,EAAG+lC,EAAe,EAH7CjnC,EASN0nC,GAAgBnR,GAAqB,CAE1C,MAAAoR,EAAWpR,EAAQ,wBACnBqR,EAAiB,OAAO,YAAcD,EAAS,IAAMX,GAC3D,OAAO,SAAS,CACd,IAAKY,EACL,SAAU,QAAA,CACX,CACH,EAEaC,GAAsB,CACjCC,EACAC,IACG,CACH,GAAKD,GAIDA,EAAK,OAAQ,CACT,KAAA,CAAE,OAAAE,CAAW,EAAAF,EACf,GAAAE,EAAO,MAAQA,EAAO,MACxB,OAAO,IAAI,KACTA,EAAO,KACPA,EAAO,MAAQ,EACfA,EAAO,KAAO,CAAA,EACd,mBAAmB,QAAS,CAC5B,KAAM,UACN,MAAOD,EAAa,UAAY,OAChC,IAAKA,EAAa,UAAY,MAAA,CAC/B,CAEL,CACF,EAEaE,GAAqB,CAChCC,EAAsB,GACtBC,EAAwC,CAAA,IACrC,CAEH,MAAMC,EAA4B,CAAA,EAC5BC,EAAiC,CAAA,EAGjCC,MAAkB,IACxB,OAACJ,GAAa,CAAC,GAAG,QAAQ,CAACK,EAAU50C,IAAU,OACvC,MAAA60C,EAAe,MAAM,QAAQL,CAAc,GAC7C50C,EAAA40C,EAAex0C,CAAK,IAApB,YAAAJ,EAAuB,KACvB40C,EAAe,KACnBG,EAAY,IAAIC,EAAS,YAAY,EAAGC,GAAgB,EAAE,CAAA,CAC3D,EAGWF,EAAA,QAAQ,CAACG,EAAMzoC,IAAS,CAClCooC,EAAgB,KAAKpoC,CAAI,EACzBqoC,EAAqB,KAAKI,CAAI,CAAA,CAC/B,EAEM,CAAE,gBAAAL,EAAiB,qBAAAC,EAC5B,EC3EaK,GAAgB/zC,EAAOgF,CAAG,EAAE,CAAC,CAAE,MAAA9E,MAAa,CACvD,gBAAiBA,EAAM,QAAQ,OAAO,MACtC,aAAc,GAAGA,EAAM,QAAQ,GAAG,CAAC,GACnC,OAAQ,iBACR,QAASA,EAAM,QAAQ,CAAC,EACxB,aAAcA,EAAM,QAAQ,GAAG,EAC/B,SAAU,WACV,MAAOA,EAAM,QAAQ,KAAK,OAC5B,EAAE,EAEW8zC,GAAch0C,EAAOmD,CAAK,EAAE,CAAC,CAAE,MAAAjD,MAAa,CACvD,QAAS,OACT,cAAe,MACf,WAAY,YACd,EAAE,EAEW+zC,GAAcj0C,EAAOgF,CAAG,EAAE,CAAC,CAAE,MAAA9E,MAAa,CACrD,gBAAiBA,EAAM,QAAQ,QAAQ,MACvC,aAAc,MACd,QAASA,EAAM,QAAQ,CAAC,EACxB,MAAO,OACP,OAAQ,OACR,QAAS,OACT,eAAgB,SAChB,WAAY,QACd,EAAE,EAEWg0C,GAAoBl0C,EAAOi0C,EAAW,EAAE,CAAC,CAAE,MAAA/zC,MAAa,CACnE,qBAAsB,CACpB,MAAOA,EAAM,QAAQ,QAAQ,IAC/B,CACF,EAAE,EAEWi0C,GAAcn0C,EAAOgF,CAAG,EAAE,CAAC,CAAE,MAAA9E,MAAa,CACrD,QAASA,EAAM,QAAQ,EAAG,EAAG,EAAG,CAAC,EACjC,MAAOA,EAAM,QAAQ,KAAK,SAC5B,EAAE,EAEWk0C,GAAep0C,EAAOgF,CAAG,EACpC,CAAC,CAAE,MAAA9E,EAAO,GAAAm0C,EAAK,MAAS,CACtB,QAAS,OACT,eAAgB,SAChB,WAAY,SACZ,UAAWn0C,EAAM,QAAQm0C,CAAE,EAC3B,MAAOn0C,EAAM,QAAQ,KAAK,UAE1B,wBAAyB,CACvB,WAAY,MACd,CAAA,EAEJ,EAEao0C,GAAuBt0C,EAAOgF,CAAG,EAAE,CAAC,CAAE,MAAA9E,MAAa,CAC9D,gBAAiBA,EAAM,QAAQ,QAAQ,MACvC,QAASA,EAAM,QAAQ,GAAG,EAC1B,aAAcA,EAAM,MAAM,aAC1B,UAAWA,EAAM,QAAQ,CAAC,EAC1B,OAAQ,SACV,EAAE,EAEWq0C,GAAgBv0C,EAAOoiB,EAAY,EAAE,CAAC,CAAE,MAAAliB,MAAa,CAChE,MAAOA,EAAM,QAAQ,KAAK,GAAG,EAC7B,OAAQ,UACR,SAAU,EACZ,EAAE,EAEWs0C,GAAiBx0C,EAAO6C,CAAI,EACvC,CAAC,CAAE,MAAA3C,CAAA,KAAa,CACd,cAAe,aACf,QAAS,OACT,WAAY,QAAA,EAEhB,EAEau0C,GAA0Bz0C,EAAO6C,CAAI,EAAE,CAAC,CAAE,MAAA3C,MAAa,CAClE,MAAOA,EAAM,QAAQ,KAAK,UAC1B,OAAQA,EAAM,QAAQ,GAAK,CAAC,CAC9B,EAAE,EAEWw0C,GAAkC10C,EAAO6C,CAAI,EAAE,CAAC,CAAE,MAAA3C,MAAa,CAC1E,uBAAwB,CACtB,MAAOA,EAAM,QAAQ,KAAK,UAC1B,WAAY,OACZ,UAAWA,EAAM,QAAQ,CAAC,CAC5B,CACF,EAAE,EAE4BF,EAAO20C,EAAU,EAAE,CAAC,CAAE,MAAAz0C,KAAa,OAAA,OAC/D,OAAQ,OACR,MAAO,OACP,OAAQ,OACR,OAAOtB,EAAAsB,EAAM,QAAQ,oBAAd,YAAAtB,EAAiC,KACxC,WAAYsB,EAAM,QAAQ,CAAC,EAC3B,YAAaA,EAAM,QAAQ,CAAC,CAC9B,EAAE,EAEK,MAAM00C,GAAa50C,EAAOgF,CAAG,EAAE,CAAC,CAAE,MAAA9E,MAAa,CACpD,QAAS,OACT,eAAgB,gBAChB,MAAO,OACP,WAAY,aACZ,SAAU,UACZ,EAAE,EAEW20C,GAAkB70C,EAAOgF,CAAG,EAAE,CAAC,CAAE,MAAA9E,MAAa,CACzD,QAAS,OACT,eAAgB,gBAChB,WAAY,SACZ,QAASA,EAAM,QAAQ,EAAG,CAAC,EAC3B,OAAQ,SACV,EAAE,EAEW40C,GAAqB,CAAC,CACjC,MAAA9zB,EAAQ,CAAC,EACT,UAAA+zB,EAAYxC,EACd,IAGM,CACJ,MAAMn7B,EAAQ4J,EAAM,OAEhB,OAAA5J,IAAU,GAAKA,GAAS29B,EAAkB,KAG5CjyC,EAAA,KAAC2xC,IAAwB,QAAQ,QAAQ,GAAI,CAAE,GAAI,CAAK,EAAA,SAAA,CAAA,KACnDr9B,EAAQ29B,EAAU,OACvB,CAAA,CAAA,CAEJ,EAEaC,GAAa,CAAC,CACzB,MAAAh0B,EACA,SAAAi0B,EAAW1C,EACb,IAAuB,CAErB,MAAM2C,EAAcl0B,EAAQwxB,GAAiBxxB,CAAK,EAAI,CAAA,EAGpD,OAAAle,EAAA,KAACqyC,GAAK,CAAA,MAAK,GACR,SAAA,CAAAD,EAAY,MAAM,EAAGD,CAAQ,EAAE,IAAI,CAACh0B,EAAMjiB,IACzC8D,EAAA,KAACsyC,GAAA,CAEC,GAAI,CACF,cAAe,aACf,YAAa,MACb,WAAY,OACd,EAEA,SAAA,CAACxyC,EAAAA,IAAAoC,EAAA,CAAI,UAAU,OAAO,GAAI,CAAE,YAAa,KAAA,EAAS,SAElD,GAAA,CAAA,EACC6tC,GAAS5xB,CAAI,EAAE,YAAY,CAAA,CAAA,EAVvBjiB,CAAA,CAYR,EACC4D,EAAA,IAAAkyC,GAAA,CAAmB,MAAOI,EAAa,UAAWD,EAAU,CAChE,CAAA,CAAA,CAEJ,EAEaI,GAAiB,CAAC,CAC7B,KAAAp0B,EACA,UAAAq0B,EAAY,GACZ,eAAAvuB,EACA,MAAA/nB,EAAQ,EACR,cAAAu2C,EAAgB,EAClB,IAQIzyC,EAAA,KAAAO,WAAA,CAAA,SAAA,CAAAP,EAAA,KAAC+xC,GAAA,CACC,QACES,GAAavuB,EAAiB,IAAMA,EAAe/nB,CAAK,EAAI,OAG9D,SAAA,CAAA4D,EAAA,IAAC6xC,GAAA,CACC,QAAQ,QACR,GAAI,CACF,cAAec,EAAgB,aAAe,OAC9C,WAAY,SACZ,SAAU,SACV,aAAc,UAChB,EAEC,SAAgBA,EAAA1C,GAAS5xB,CAAI,EAAE,YAAgB,EAAAA,CAAA,CAClD,EACCq0B,SAAcf,GAAc,EAAA,CAAA,CAAA,CAC/B,QACCx2B,GAAQ,EAAA,CAAA,CACX,CAAA,EAGWy3B,GAAgB,CAAC,CAC5B,gBAAA/B,EACA,qBAAAC,EACA,eAAA3sB,EACA,SAAAkuB,EAAW1C,EACb,WAEKvtC,EACE,CAAA,SAAA,CAAAyuC,EACE,MAAM,EAAGwB,CAAQ,EACjB,IAAI,CAACrB,EAAkB50C,IACtB4D,EAAA,IAACyyC,GAAA,CAEC,KAAMzB,EACN,UAAW,CAAC,EAACF,GAAA,MAAAA,EAAuB10C,IACpC,eAAA+nB,EACA,MAAA/nB,EACA,cAAe,EAAA,EALVA,CAAA,CAOR,EACD4D,EAAA,IAAAkyC,GAAA,CAAmB,MAAOrB,EAAiB,UAAWwB,EAAU,CACpE,CAAA,CAAA,EAISQ,GAAgB,CAAC,CAC5B,UAAAC,EACA,eAAA3uB,EACA,SAAAkuB,EAAW1C,EACb,IAA0B,CAExB,MAAMoD,EAAiB,MAAM,QAAQD,CAAS,EAAIA,EAAY,CAACA,CAAS,EAEpE,IAAAE,EAEJ,OAAI,OAAOD,EAAe,CAAC,GAAM,SAE/BC,EAAkBpD,GAAiBmD,CAA0B,EAG3CC,EAAAlD,GAChBiD,EACA,MAAA,SAKD3wC,EACE,CAAA,SAAA,CAAA4wC,EAAgB,MAAM,EAAGX,CAAQ,EAAE,IAAI,CAAC3oC,EAAStN,IAChD4D,EAAA,IAACyyC,GAAA,CAEC,KAAM,OAAO/oC,GAAY,SAAWA,EAAUA,EAAQ,KACtD,UAAW,GACX,eAAAya,EACA,MAAA/nB,EACA,cAAe,EAAA,EALVA,CAAA,CAOR,EACC4D,EAAA,IAAAkyC,GAAA,CAAmB,MAAOc,EAAiB,UAAWX,EAAU,CACpE,CAAA,CAAA,CAEJ,EAEaY,GAAa,CAAC,CACzB,OAAAC,EACA,SAAAb,EAAW1C,EACb,IAAuB,CAErB,MAAMwD,EAAeD,EAAStD,GAAiBsD,CAAM,EAAI,CAAA,EAGvD,OAAAhzC,EAAA,KAACqyC,GAAK,CAAA,MAAK,GACR,SAAA,CAAAY,EAAa,MAAM,EAAGd,CAAQ,EAAE,IAAI,CAACxjC,EAAOzS,IAC3C4D,EAAA,IAACyyC,GAAA,CAEC,KAAM5jC,EACN,MAAAzS,EACA,cAAe,EAAA,EAHVA,CAAA,CAKR,EACC4D,EAAA,IAAAkyC,GAAA,CAAmB,MAAOiB,EAAc,UAAWd,EAAU,CACjE,CAAA,CAAA,CAEJ,EChRae,GAAoC,CAAC,CAChD,KAAA3qC,EAAO,GACP,aAAA4qC,EAAe,GACf,eAAAC,EACA,WAAAC,EACA,aAAAC,EACA,sBAAAC,EACA,WAAAC,CACF,IAAM,CACJ,MAAMp2C,EAAQuH,KACR,CAAE,cAAA6C,CAAA,EAAkBxM,EAAA,WAAWC,EAAS,EACxC,CAACw4C,EAAYC,CAAa,EAAIv4C,WAAS,EAAK,EAE5Cw4C,EAAsBjoB,GAA4C,CACtE,GAAI+nB,EAAY,CAER,MAAAG,EADSloB,EAAM,OACM,QAAQ,sBAAsB,EACrDkoB,GACF3D,GAAa2D,CAAW,CAE5B,CAEcpsC,EAAA,CACZ,WAAY,6BACZ,KAAM,aACN,OAAQisC,EAAa,WAAa,QAAA,CACnC,EAEDC,EAAc,CAACD,CAAU,CAAA,EAIzB,OAAAzzC,EAAA,KAACixC,GAAc,CAAA,UAAU,sBACvB,SAAA,CAAAjxC,EAAA,KAACkxC,GAAY,CAAA,QAASkC,GAAkC,OACrD,SAAA,CAAWC,EAAA,EACXvzC,EAAAA,IAAAoC,EAAA,CAAI,GAAI,CAAE,KAAM,CAAK,EAAA,GAAG,MAAM,GAAG,OAC/B,SAAAoxC,EACH,CAAA,CAAA,EACCF,GAAkBtzC,EAAAA,IAAC2xC,GAAc,CAAA,QAAS2B,CAAgB,CAAA,CAAA,EAC7D,EAECD,GAAgB,CAACM,EAEdzzC,EAAA,KAAAO,EAAA,SAAA,CAAA,SAAA,CAAAT,EAAA,IAACmb,GAAA,CACC,GAAI,CAAE,OAAQ,aAAc,YAAa7d,EAAM,QAAQ,OAAQ,CAAA,CACjE,EACA4C,EAAAA,KAACsxC,GAAa,CAAA,QAASqC,EACrB,SAAA,CAAC7zC,EAAA,IAAA6xC,GAAA,CAAwB,QAAQ,QAAQ,SAEzC,iBAAA,EACA7xC,MAAC+zC,IAAkB,SAAS,QAAQ,GAAI,CAAE,WAAY,OAAS,CAAA,EACjE,CAAA,CACF,CAAA,EACEV,GAAgBI,EAEhBvzC,EAAAA,KAAAO,EAAAA,SAAA,CAAA,SAAA,CAAAT,EAAA,IAACmb,GAAA,CACC,GAAI,CAAE,OAAQ,SAAU,YAAa7d,EAAM,QAAQ,OAAQ,CAAA,CAC7D,EACCm2C,EAAsB,EAEtBC,GAAcJ,GACbtzC,MAAC0xC,IAAqB,QAAS4B,EAC7B,gBAACtB,GACC,CAAA,SAAA,CAAA9xC,OAACkC,GAAI,GAAI,CAAE,cAAe,SAAU,QAAS,MAC3C,EAAA,SAAA,CAAApC,MAAC6xC,GAAwB,CAAA,QAAQ,QAAQ,GAAI,GAAK,SAElD,8BAAA,EACA7xC,EAAA,IAACC,EAAA,CACC,QAAQ,QACR,WAAW,OACX,MAAM,UACN,GAAI,CAAE,cAAe,YAAa,EAEjC,SAAAyzC,CAAA,CACH,CAAA,EACF,EACA1zC,EAAA,IAACg0C,GAAA,CACC,MAAM,UACN,SAAS,QACT,GAAI,CAAE,SAAU,WAAY,MAAO,EAAG,IAAK,CAAE,CAAA,CAC/C,CAAA,CAAA,CACF,CACF,CAAA,EAGDX,GACEnzC,EAAAA,KAAAsxC,GAAA,CAAa,QAASqC,EAAoB,GAAI,EAC7C,SAAA,CAAC7zC,EAAA,IAAA6xC,GAAA,CAAwB,QAAQ,QAAQ,SAEzC,gBAAA,EACA7xC,EAAAA,IAACi0C,GAAgB,CAAA,SAAS,OAAQ,CAAA,CAAA,EACpC,CAAA,CAAA,CAEJ,EACE,IACN,CAAA,CAAA,CAEJ,EC1GO,SAASC,GAAiB,CAC/B,KAAAhD,EACA,KAAAzoC,EACA,YAAA0rC,EACA,UAAAC,EACA,UAAAC,EACA,QAAAC,EACA,UAAA3D,EACA,UAAA4D,EACA,IAAA5qC,EACA,uBAAA6qC,CACF,EAAmB,CACjB,MAAMl3C,EAAQuH,KACR,CAAE,gBAAAgsC,EAAiB,qBAAAC,CAAA,EAAyBJ,GAChDC,EACA6D,CAAA,EAGIC,EAAcvD,GAAiB,CAChBwD,GAAA,CAAE,KAAAxD,EAAM,WAAY,UAAY3vC,EAAU,MAAM,OAAO,CAAA,EAGtEozC,EAAuBv4C,GAAkB,CACvC,MAAA60C,EAAeH,EAAqB10C,CAAK,EAC3C60C,GACFwD,EAAWxD,CAAY,CACzB,EAGI2D,EAA6B,IAAM,CAC3BL,GAAA,MAAAA,IACZE,EAAWvD,CAAI,CAAA,EAGX2D,EAAeR,GAAA,YAAAA,EAAY,GAC3BS,EAAgB9E,GAAWvnC,GAAQ,EAAE,EACrCssC,EAAWtsC,GAAQ,GAGvB,OAAAzI,EAAA,IAACozC,GAAA,CACC,KAAM2B,EACN,aAAc,GACd,eAAgBH,EAChB,WAAY,IACV50C,EAAA,IAACsxC,GACC,CAAA,SAAAtxC,EAAA,IAACg1C,IAAO,MAAM,UAAU,SAAS,OAAA,CAAQ,CAC3C,CAAA,EAEF,aAAc,IAEV90C,OAAAA,OAAAA,EAAAA,KAAAO,EAAA,SAAA,CAAA,SAAA,CAAAP,EAAA,KAAC0xC,GAAe,CAAA,QAAQ,YAAY,WAAW,OAC5C,SAAA,CAAAkD,EACA90C,EAAA,IAAAO,EAAA,CAAM,cAAc,MAClB,SACC4zC,GAAAn0C,EAAA,IAACi1C,GAAA,CACC,gBAAiB,EACjB,gBAAiB,IACjB,MAAM,eAEN,SAAAj1C,EAAA,IAAC+xC,GAAA,CACC,UAAU,aACV,GAAI,CACF,OAAQ,OACR,MAAO,OACP,OAAQ,OACR,OAAO/1C,EAAAsB,EAAM,QAAQ,oBAAd,YAAAtB,EAAiC,KACxC,GAAI,EACJ,GAAI,CACN,CAAA,CACF,CAAA,CAAA,EAGN,CAAA,EACF,EACAkE,EAAAA,KAAC2xC,GAAwB,CAAA,QAAQ,QAAQ,SAAA,CAAA,SAChCuC,GAAa,GAAA,EACtB,EACCS,GACC70C,EAAA,IAAC6xC,GAAwB,CAAA,QAAQ,QAC9B,SACHgD,EAAA,CAAA,EAEJ,GAEF,sBAAuB,IACrB30C,EAAAA,KAACqxC,GACC,CAAA,SAAA,CAACvxC,EAAA,IAAA8xC,GAAA,CAAgC,QAAQ,YAAY,SAErD,UAAA,EACCwC,GAAWA,EAAQ,OAAS,EAC1Bt0C,EAAAA,IAAAoyC,GAAA,CAAW,MAAOkC,CAAS,CAAA,EAE5Bt0C,EAAAA,IAAC6xC,GAAwB,CAAA,QAAQ,QAAQ,SAAC,IAAA,EAG3C7xC,EAAA,IAAA8xC,GAAA,CAAgC,QAAQ,YAAY,SAErD,YAAA,EACCuC,GAAaA,EAAU,OAAS,EAC9Br0C,EAAAA,IAAAoyC,GAAA,CAAW,MAAOiC,CAAuB,CAAA,EAE1Cr0C,EAAAA,IAAC6xC,GAAwB,CAAA,QAAQ,QAAQ,SAAC,IAAA,EAG3C7xC,EAAA,IAAA8xC,GAAA,CAAgC,QAAQ,YAAY,SAErD,YAAA,EACCnB,GAAaA,EAAU,OAAS,EAC/B3wC,EAAA,IAAC4yC,GAAA,CACC,gBAAA/B,EACA,qBAAAC,EACA,eAAgB6D,CAAA,CAAA,EAGlB30C,EAAAA,IAAC6xC,GAAwB,CAAA,QAAQ,QAAQ,SAAC,IAAA,CAAA,EAE9C,EAEF,WAAY3B,GAAmB4E,EAAenrC,CAAG,CAAA,CAAA,CAGvD,CCpIO,MAAMurC,GAAc,CAAC,CAAE,mBAAAC,KAA0C,CAChE,KAAA,CAAE,SAAAj3C,GAAaC,KACf0J,EAA6BC,GAAe,WAAW,EACvDstC,EACJl3C,GAAY2J,EAEd,MAAI,CAACstC,GAAsBA,EAAmB,SAAW,QAC/CE,GAAsB,CAAA,CAAA,EAK3Br1C,EAAA,IAAAS,EAAA,SAAA,CAAA,SAAA00C,EAAmB,IAAI,CAACG,EAAgBl5C,IAAkB,CACzD,MAAMm5C,EAAW,MAAM,QAAQD,EAAO,sBAAsB,EACxDA,EAAO,uBACJ,IAAKtE,GAAaA,EAAS,IAAI,EAC/B,KAAK,IAAI,EACZ,GAEJ,OAAIoE,EAEAp1C,MAAC+D,GAAM,SAAN,CACC,eAACyxC,GAA4B,CAAA,GAAGF,CAAQ,CAAA,CAAA,EADrBl5C,CAErB,EAKF4D,EAAA,IAAC+D,GAAM,SAAN,CACC,SAAA/D,EAAA,IAACy1C,GAAA,CACE,GAAGH,EACJ,qBAAsB,GACtB,aAAcC,CAAA,CAAA,GAJGn5C,CAMrB,CAEH,CAAA,CACH,CAAA,CAEJ,EC/CM+0C,GAAgB/zC,EAAOgF,CAAG,EAAE,CAAC,CAAE,MAAA9E,MAAa,CAChD,SAAU,WACV,gBAAiBA,EAAM,QAAQ,WAAW,MAC1C,QAAS,GAAGA,EAAM,QAAQ,CAAC,CAAC,GAC5B,aAAc,GAAGA,EAAM,QAAQ,CAAC,CAAC,GACjC,aAAc,GAAGA,EAAM,QAAQ,EAAG,CAAC,EACrC,EAAE,EAQWo4C,GAAoB,IAAM,CACrC,MAAMC,EAAW,CAAC,EAAG,EAAG,CAAC,EAEzB,aACGp1C,EACC,CAAA,SAAAP,EAAAA,IAACqB,EAAK,CAAA,UAAS,GAAC,QAAS,EAAG,GAAI,CAAE,GAAI,CAAE,EACtC,SAACrB,MAAAqB,EAAA,CAAK,KAAI,GAAC,GAAI,GAAI,GAAI,EACpB,SAASs0C,EAAA,IAAKC,SACZzE,GACC,CAAA,SAAAjxC,EAAAA,KAACK,EAAM,CAAA,QAAS,EAAG,UAAW,CAAE,GAAI,SAAU,GAAI,KAChD,EAAA,SAAA,CAAAL,OAACkC,GAAI,MAAO,CAAE,GAAI,OAAQ,GAAI,KAC5B,EAAA,SAAA,CAAClC,EAAAA,KAAAmB,EAAA,CAAK,UAAS,GAAC,QAAS,EAAG,GAAI,CAAE,GAAI,CAAA,EACpC,SAAA,CAACrB,EAAAA,IAAAqB,EAAA,CAAK,KAAI,GAAC,GAAI,GAAI,GAAI,CAAE,GAAI,EAAG,GAAI,GAClC,SAAArB,EAAA,IAAC61C,IAAS,MAAM,MAAM,OAAQ,GAAI,QAAQ,cAAc,CAC1D,CAAA,EACC71C,EAAA,IAAAqB,EAAA,CAAK,KAAI,GAAC,GAAI,GACb,SAAArB,EAAA,IAAC61C,GAAA,CACC,GAAI,CACF,MAAO,MACP,OAAQ,GACR,GAAI,CACN,EACA,QAAQ,aAAA,CAAA,EAEZ,CAAA,EACF,SAECzzC,EACC,CAAA,SAAA,CAAApC,EAAA,IAAC61C,GAAA,CACC,GAAI,CACF,MAAO,MACP,OAAQ,GACR,GAAI,EACJ,QAAS,eACT,GAAI,CACN,EACA,QAAQ,aAAA,CACV,EACA71C,EAAA,IAAC61C,GAAA,CACC,GAAI,CACF,MAAO,MACP,OAAQ,GACR,GAAI,EACJ,QAAS,cACX,EACA,QAAQ,aAAA,CACV,CAAA,EACF,SACCzzC,EACC,CAAA,SAAA,CAAApC,EAAA,IAAC61C,GAAA,CACC,GAAI,CACF,MAAO,MACP,OAAQ,GACR,GAAI,EACJ,QAAS,eACT,GAAI,CACN,EACA,QAAQ,aAAA,CACV,EACA71C,EAAA,IAAC61C,GAAA,CACC,GAAI,CACF,MAAO,MACP,OAAQ,GACR,GAAI,EACJ,QAAS,cACX,EACA,QAAQ,aAAA,CACV,CAAA,EACF,SACCzzC,EACC,CAAA,SAAA,CAAApC,EAAA,IAAC61C,GAAA,CACC,GAAI,CACF,MAAO,MACP,OAAQ,GACR,GAAI,EACJ,QAAS,eACT,GAAI,CACN,EACA,QAAQ,aAAA,CACV,EACA71C,EAAA,IAAC61C,GAAA,CACC,GAAI,CACF,MAAO,MACP,OAAQ,GACR,GAAI,EACJ,QAAS,cACX,EACA,QAAQ,aAAA,CACV,CAAA,EACF,CAAA,EACF,EACA71C,MAACoC,GAAI,MAAO,CAAE,GAAI,OAAQ,GAAI,OAC5B,SAAApC,EAAA,IAAC61C,GAAA,CACC,GAAI,CACF,MAAO,OACP,OAAQ,EACV,EACA,QAAQ,aAAA,CAAA,EAEZ,CAAA,CACF,CAAA,CA5FkB,EAAAD,CA6FpB,CACD,CAAA,CACH,EACF,CACF,CAAA,CAEJ,ECzHaE,GAAgB14C,EAAOgF,CAAG,EAAE,CAAC,CAAE,MAAA9E,MAAa,CACvD,gBAAiBA,EAAM,QAAQ,QAAQ,MACvC,aAAc,MACd,MAAO,OACP,OAAQ,OACR,QAAS,OACT,WAAY,EACZ,eAAgB,SAChB,WAAY,SACZ,WAAY,eACd,EAAE,EAEWy4C,GAAyB34C,EAAOmD,CAAK,EAAE,CAAC,CAAE,MAAAjD,MAAa,CAClE,SAAU,SACV,IAAK,EACL,gBAAiBA,EAAM,QAAQ,WAAW,QAC1C,OAAQ,CACV,EAAE,EAEW04C,GAAwB54C,EAAOmD,CAAK,EAAE,CAAC,CAAE,MAAAjD,MAAa,CACjE,QAAS,MACT,cAAe,MACf,eAAgB,gBAChB,WAAY,6BACZ,OAAQ,aAAaA,EAAM,QAAQ,OAAO,GAC1C,SAAU,CACR,gBAAiBA,EAAM,QAAQ,WAAW,OAC5C,EACA,0BAA2B,CACzB,MAAO,OACP,OAAQ,MACV,EACA,6BAA8B,CAC5B,eAAgB,aAChB,IAAK,CACP,CACF,EAAE,EAEW24C,GAAyB74C,EAAOmD,CAAK,EAAE,KAAO,CACzD,MAAO,MACP,QAAS,YACT,iBAAkB,CAChB,QAAS,WACT,WAAY,IACZ,OAAQ,OACR,WAAY,MACZ,QAAS,OACT,eAAgB,QAClB,EACA,6BAA8B,CAC5B,MAAO,MACP,QAAS,cACT,YAAa,IACb,WAAY,GACd,CACF,EAAE,EAEW21C,GAA8B94C,EAAOmD,CAAK,EAAE,CAAC,CAAA,KAAQ,CAChE,SAAU,WACV,MAAO,IACP,aAAc,MACd,QAAS,aACT,YAAa,MACb,UAAW,SACX,UAAW,SACX,sBAAuB,CACrB,MAAO,MACP,SAAU,UACZ,EACA,4BAA6B,CAC3B,gBAAiB,WACjB,aAAc,MAChB,EACA,6BAA8B,CAC5B,WAAY,GACZ,SAAU,QACV,QAAS,YACT,YAAa,GACf,CACF,EAAE,EAEW41C,GAAyB/4C,EAAO6C,CAAI,EAAE,CAAC,CAAE,MAAA3C,MAAa,CACjE,MAAOA,EAAM,QAAQ,KAAK,QAC1B,WAAY,SACZ,SAAU,SACV,aAAc,WACd,SAAU,CACR,eAAgB,YAChB,wBAAyB,MACzB,OAAQ,SACV,CACF,EAAE,EAEW84C,GAA+Bh5C,EAAOmD,CAAK,EAAE,KAAO,CAC/D,cAAe,MACf,WAAY,SACZ,UAAW,OACX,IAAK,EACL,6BAA8B,CAC5B,IAAK,CACP,CACF,EAAE,ECvGW81C,GAAgB,CAC3B,CAAE,GAAI,OAAQ,MAAO,MAAO,EAC5B,CAAE,GAAI,MAAO,MAAO,KAAM,EAC1B,CAAE,GAAI,UAAW,MAAO,SAAU,EAClC,CAAE,GAAI,YAAa,MAAO,UAAW,EACrC,CAAE,GAAI,YAAa,MAAO,WAAY,CACxC,EAEaC,GAAsB,CACjC,CAAE,GAAI,OAAQ,MAAO,MAAO,EAC5B,CAAE,GAAI,MAAO,MAAO,eAAgB,EACpC,CAAE,GAAI,YAAa,MAAO,UAAW,EACrC,CAAE,GAAI,YAAa,MAAO,WAAY,CACxC,EAEaC,GAAkB,CAC7B,CAAE,GAAI,OAAQ,MAAO,MAAO,EAC5B,CAAE,GAAI,YAAa,MAAO,UAAW,EACrC,CAAE,GAAI,OAAQ,MAAO,MAAO,EAC5B,CAAE,GAAI,QAAS,MAAO,OAAQ,CAChC,EAEaC,GAAiB,CAC5B,CAAE,GAAI,OAAQ,MAAO,MAAO,EAC5B,CAAE,GAAI,MAAO,MAAO,WAAY,EAChC,CAAE,GAAI,YAAa,MAAO,SAAU,EACpC,CAAE,GAAI,YAAa,MAAO,UAAW,CACvC,EAEaC,GAAkB,CAC7B,CAAE,GAAI,OAAQ,MAAO,MAAO,EAC5B,CAAE,GAAI,MAAO,MAAO,KAAM,EAC1B,CAAE,GAAI,UAAW,MAAO,SAAU,EAClC,CAAE,GAAI,SAAU,MAAO,OAAQ,EAC/B,CAAE,GAAI,WAAY,MAAO,WAAY,CACvC,EAEaC,GAAmB,ECvBnBC,GAAmB,CAC9BC,EACAC,IAEID,IAAU,QAAaA,EAAM,OAAS,EACdA,EAAM,IAAI,CAACE,EAAM16C,KAC5B,CACX,SAAU06C,EACV,KAAMD,EAAS,MAAM,QAAQA,CAAK,EAAIA,EAAMz6C,CAAK,EAAIy6C,EAAS,MAAA,EAGjE,EAGI,GAGIE,GAAclxC,GAA2B,CAC9C,KAAA,CAAE,KAAAu/B,EAAM,WAAA4R,CAAe,EAAAnxC,EACvBoxC,EACJ7R,EAAK,OAASsR,GAAmBtR,EAAK,OAASsR,GAAmB,EACpE,cACGn2C,EAAM,CAAA,QAAQ,OAAO,cAAc,SAAS,IAAK,MAC/C,SAAA,CAAK6kC,EAAA,IAAI,CAAC/mB,EAAMjiB,IAAU,CACzB,GAAI,EAAAA,EAAQs6C,IAEV,OAAA12C,EAAA,IAACm2C,GAAA,CACC,UAAW93B,GAAA,MAAAA,EAAM,KAAO,OAAS,GAEjC,GAAI,CACF,WAAY,MACd,EACA,QAAS,IAAM,EACTA,GAAA,YAAAA,EAAM,QAAS,QAAa24B,GAAYA,EAAW34B,EAAK,IAAI,CAClE,EAEC,oBAAM,SACH4xB,GAAU5xB,EAAK,SAAoB,YAAa,CAAA,EAChD,EAAA,EAVCjiB,CAAA,CAWP,CAEH,EACA66C,IAAe,GACd/2C,EAAA,KAACi2C,GAAA,CACC,GAAI,CACF,WAAY,MACd,EACD,SAAA,CAAA,KACIc,EAAW,OAAA,CAAA,CAChB,CAEJ,CAAA,CAAA,CAEJ,EC9DaC,GAAarxC,GAAuC,CACzD,KAAA,CAAE,IAAA8D,EAAK,UAAAyqC,CAAc,EAAAvuC,EAC3B,OAEI3F,EAAA,KAAAO,WAAA,CAAA,SAAA,CAAAT,EAAA,IAACC,EAAA,CACC,QAAQ,YACR,GAAK3C,IAAW,CACd,MAAOA,EAAM,QAAQ,KAAK,SAAA,GAG3B,SAAAqM,GAAOA,IAAQ,IAAMA,EAAM,EAAA,CAC9B,EACA3J,EAAA,IAACC,EAAA,CACC,QAAQ,UACR,GAAK3C,IAAW,CACd,MAAOA,EAAM,QAAQ,KAAK,SAAA,GAG3B,YAAa82C,EAAU,SAAW,GAAK,QAAQA,CAAS,GAAK,EAAA,CAChE,CACF,CAAA,CAAA,CAEJ,EClBa+C,GAAuBL,GAC3BA,EAAK,QAAQ,UAAW,EAAE,EAGtBM,GAAoBvnB,GAC1BA,EACEA,GAAA,YAAAA,EAAa,MAAM,KAAK,IAAKxR,GAASA,EAAK,KAAA,GADzB,GAIdg5B,GAAoC,CAC/CC,EACAC,EACAC,IAEOF,EAAiB,SAAS,QAAQ,OAAO,IAC7ChC,GAA2C,iCACnC,MAAA,CACL,KAAKt5C,EAAAs5C,EAAO,SAAS,OAAhB,MAAAt5C,EAAuB,GAAK,OAAOs5C,EAAO,SAAS,KAAK,CAAC,CAAC,EAAI,GACnE,KAAM,GAAGA,EAAO,SAAS,MAAM,CAAC,EAAE,IAAI,KACpC34C,EAAA24C,EAAO,SAAS,OAAhB,MAAA34C,EAAuB,GAAK,IAAI24C,EAAO,SAAS,KAAK,CAAC,CAAC,GAAK,EAC9D,GACA,UAAW,GAAGmC,KACZr3C,GAAArD,GAAAC,GAAAN,EAAA44C,EAAO,SAAS,OAAhB,YAAA54C,EAAuB,KAAvB,YAAAM,EAA2B,OAA3B,YAAAD,EAAiC,SAAjC,YAAAqD,EAAyC,QAAS,EACnD,CAAA,MAAIusB,GAAAF,GAAA1C,GAAAC,EAAAsrB,EAAO,SAAS,OAAhB,YAAAtrB,EAAuB,KAAvB,YAAAD,EAA2B,OAA3B,YAAA0C,EAAiC,SAAjC,YAAAE,EAAyC,OAAQ,EAAE,GACxD,UAAW+qB,KAAgBhrB,EAAA4oB,EAAO,cAAP,YAAA5oB,EAAoB,YAAa,CAAE,CAAA,EAAE,OAC7DskB,GAAiCA,IAAa,IACjD,EACA,UAAWoG,GACTO,KAAgB9qB,EAAAyoB,EAAO,UAAP,YAAAzoB,EAAgB,YAAa,CAAE,CAAA,EAAE,CAAC,CACpD,EACA,cACED,EAAA0oB,EAAO,SAAS,MAAM,CAAC,EAAE,OAAzB,YAAA1oB,EACI,cACD,SAAS2qB,EAAM,YAAA,OAClBxqB,EAAAuoB,EAAO,SAAS,MAAM,CAAC,EAAE,OAAzB,YAAAvoB,EACI,cACD,SAASyqB,EAAM,gBACpB,eAAgBlC,EAAO,SAAS,OAAO,CAAC,EACxC,KAAM,EAAA,CAEV,CAAA,EAKShF,GAAsB,CACjCC,EACAC,IACG,CACH,GAAKD,GAIDA,EAAK,OAAQ,CACT,KAAA,CAAE,OAAAE,CAAW,EAAAF,EACf,GAAAE,EAAO,MAAQA,EAAO,MACxB,OAAO,IAAI,KACTA,EAAO,KACPA,EAAO,MAAQ,EACfA,EAAO,KAAO,CAAA,EACd,mBAAmB,QAAS,CAC5B,KAAM,UACN,MAAOD,EAAa,UAAY,OAChC,IAAKA,EAAa,UAAY,MAAA,CAC/B,CAEL,CACF,ECrDaoH,GAAc/xC,GAA2B,CACpD,KAAM,CAAE,KAAA4C,EAAM,YAAA0rC,EAAa,GAAA0D,EAAI,WAAAb,GAAenxC,EACxCvI,EAAQuH,KACd,cACGuxC,GACC,CAAA,SAAA,CAAAp2C,EAAA,IAAC81C,GAAc,CAAA,UAAU,iBACvB,SAAA91C,EAAAA,IAACg1C,IAAO,MAAM,UAAU,GAAI,CAAE,SAAU,OAAQ,OAAQ,MAAA,CAAU,CAAA,EACpE,EACAh1C,EAAA,IAACm2C,GAAA,CACC,UAAW0B,EAAK,OAAS,GACzB,QAAS,IAAMA,GAAMb,EAAWa,CAAE,EAEjC,YAAQV,GAAoBlH,GAAUxnC,EAAgB,YAAA,CAAa,CAAC,CAAA,CACvE,EACCzI,EAAA,IAAAO,EAAA,CAAM,cAAc,MAClB,SACC4zC,GAAAn0C,EAAA,IAACi1C,GAAA,CACC,MAAM,eACN,gBAAiB,EACjB,gBAAiB,IAEjB,eAAC7yC,EACC,CAAA,SAAApC,EAAA,IAAC3C,GAAY,WAAZ,CACC,GAAI,KAAO,CACT,OAAQ,OACR,MAAO,OACP,MAAOC,EAAM,QAAQ,QAAQ,IAAA,EAC/B,CAAA,EAEJ,CAAA,CAAA,EAGN,CACF,CAAA,CAAA,CAEJ,ECzBaw6C,GAAiB,CAAC,CAC7B,UAAAC,EACA,QAAAlvC,EACA,QAAAmvC,EACA,QAAAC,EACA,WAAAjB,CACF,KACwB74C,GAAc,EAEjC6B,EAAA,IAAAk2C,GAAA,CAA4B,GAAG,iBAC9B,gBAAC31C,EACC,CAAA,SAAA,CAACP,EAAAA,IAAA+1C,GAAA,CAAuB,UAAU,gBAChC,SAAA/1C,EAAAA,IAACg2C,IAAsB,UAAU,eAC9B,0BAAS,IAAKkC,GACZl4C,EAAA,IAAAi2C,GAAA,CAAuB,UAAU,eAC/B,SAAAiC,EAAO,OAD4CA,EAAO,EAE7D,EACD,CACH,CACF,CAAA,EACAl4C,EAAAA,IAACO,GACE,SAAWsI,GAAAA,EAAQ,OAAS,EAC3BA,EAAQ,IAAKsvC,GAAQ,CACb,MAAAC,EAAWH,EAAQE,CAAG,EACtBN,GAAKO,GAAA,YAAAA,EAAU,KAAM,OAAO,WAAW,EAC7C,OACGp4C,EAAAA,IAAAg2C,GAAA,CACE,SAAQgC,EAAA,IAAKE,GAAW,CACjB,MAAAh0C,EAAQk0C,EAASF,EAAO,EAA2B,EACnDG,EACHH,EAAO,KAAO,aACbH,IAAcrK,GAAW,QAC1BwK,EAAO,KAAO,aACbH,IAAcrK,GAAW,cAC3BwK,EAAO,KAAO,OAEd,OAAAl4C,EAAA,IAACi2C,GAAA,CAEC,GAAI,CAAE,OAASoC,EAAqB,GAAZ,SAAe,EACvC,QAAS,IAAM,CACTrB,GAAc,CAACqB,GACNrB,GAAAoB,GAAA,YAAAA,EAAU,KAAM,EAAE,CACjC,EAEC,SAAAl0C,CAAA,EAPI,GAAG2zC,CAAE,IAAIK,EAAO,EAAE,EAAA,CAQzB,CAEH,GArByBL,CAsB5B,CAEH,CAAA,EAEA73C,EAAA,IAAAoc,GAAA,CAAA,CAAe,CAEpB,CAAA,CAAA,CACF,CAAA,CACF,CAAA,GC9CSk8B,GAAc,CAAC,CAAE,QAAAzvC,KAAgC,CACtD,KAAA,CACJ,MAAO,CAAE,QAAAkoB,CAAQ,EACjB,aAAc,CAAE,6BAAAwnB,CAA6B,GAC3ChsC,GAAuB,EACrBq7B,EAAgC9/B,GAAe,UAAU,EACzDrM,EAAWC,KACXs7C,EAAc9F,GAAiB,CACnC,MAAMsH,EAAU,CACd,KAAMtH,GAAQ,GACd,WAAY,SACZ,qBAAsBtJ,CAAA,EAExB,GAAIA,EAA+B,CACjCnsC,EACE,UAAU+8C,EAAQ,UAAU,SAC1BtH,GAAQ,EACV,yBAAyBtJ,CAA6B,EAAA,EAExD,MACF,CACI2Q,EACFE,GAAwBD,EAASznB,CAAO,EAExC2jB,GAAmB8D,EAASznB,CAAO,CACrC,EAGIjnB,EAA2BjB,EAAQ,IAAKysC,IACzB,CACjB,MAAMA,GAAA,YAAAA,EAAQ,OAAQ,GACtB,YAAa,GAAQA,GAAA,MAAAA,EAAQ,aAC7B,MAAMA,GAAA,YAAAA,EAAQ,OAAQ,GACtB,KAAKA,GAAA,YAAAA,EAAQ,MAAO,GACpB,WAAWA,GAAA,YAAAA,EAAQ,YAAa,GAChC,SAASA,GAAA,YAAAA,EAAQ,UAAW,CAAC,EAC7B,YAAYA,GAAA,YAAAA,EAAQ,YAAa,CAAI,GAAA,OAClCv3C,GAAiCA,IAAa,MACjD,EACA,WAAWu3C,GAAA,YAAAA,EAAQ,YAAa,CAAC,EACjC,wBAAwBA,GAAA,YAAAA,EAAQ,yBAA0B,CAAC,EAC3D,kBAAmB,MAAM,QAAQA,EAAO,sBAAsB,EAC1DA,EAAO,uBACJ,IAAKtE,GAAaA,EAAS,IAAI,EAC/B,OAAQE,GAAyBA,IAAS,MAAS,EACtD,CAAC,CAAA,EAIR,EAEK+G,EAAW3C,GAA6C,CAC5D,MAAMoD,EACJ14C,EAAA,IAAC43C,GAAA,CACC,KAAMtC,EAAO,KACb,YAAaA,EAAO,YACpB,GAAIA,EAAO,KACX,WAAA0B,CAAA,CAAA,EAGE2B,QACHzB,GAAU,CAAA,IAAK5B,EAAO,IAAK,UAAWA,EAAO,SAAW,CAAA,EAErDsD,EACH54C,MAAA+2C,GAAA,CAAW,KAAMJ,GAAiBrB,EAAO,OAAO,CAAG,CAAA,EAEhDuD,EACH74C,MAAA+2C,GAAA,CAAW,KAAMJ,GAAiBrB,EAAO,SAAS,CAAG,CAAA,EAElDwD,EACJ94C,EAAA,IAAC+2C,GAAA,CACC,KAAMJ,GAAiBrB,EAAO,UAAWA,EAAO,iBAAiB,EACjE,WAAA0B,CAAA,CAAA,EAYG,MARU,CACf,GAAI1B,EAAO,KACX,KAAMoD,EACN,IAAKC,EACL,QAASC,EACT,UAAWC,EACX,UAAWC,CAAA,CAEN,EAGP,OAAA94C,EAAA,IAAC83C,GAAA,CACC,UAAWpK,GAAW,OACtB,QAAS5jC,EACT,QAAAmuC,EACA,QAAS5B,GACT,WAAAW,CAAA,CAAA,CAGN,EChIO,SAAS+B,GAAuB,CACrC,QAAAlwC,EACA,cAAAmwC,CACF,EAAgC,CAC9B,OAAQnwC,EAEJA,EAAQ,QAAU,EACpB7I,EAAA,IAACq1C,KAAsB,EACrB2D,QACDV,GAAY,CAAA,QAAAzvC,CAAkB,CAAA,EAE9B7I,EAAA,IAAAk1C,GAAA,CAAY,mBAAoBrsC,CAAS,CAAA,EAN1C7I,MAAC01C,IAAkB,CAAA,CAQvB,CCVO,SAASuD,GAAmB,CACjC,GAAApB,EACA,KAAApvC,EACA,IAAAywC,EACA,IAAAC,EACA,KAAA/vC,EACA,MAAAC,CACF,EAAqB,CACnB,MAAMqS,EAAcwD,KACdk6B,EAA2B,SAAY,OAC/B19B,EAAA,IAAI,KAAMm8B,GAAM,EAAE,EAC9B,MAAMxc,EAAW,MAAMlM,GAAc,SAAS,CAAE,YAAAzT,CAAa,CAAA,EACvDZ,GAAY9e,EAAAq/B,GAAA,YAAAA,EAAU,SAAV,YAAAr/B,EAAkB,UAC9Bq9C,EAAwB,OAAO,OAErC,GAAI,CAACv+B,EAAW,CACVu+B,GACFA,EAAsB,MAAM,EAG9B,MACF,CAIA,MAAMC,EAAeD,GAAyB,OAC9CC,EAAa,SAAS,KAAO,GAAG/3C,EAAU,MAAM,OAAO,8BAA8BuZ,CAAS,EAAA,EAG1Fg6B,EAAgB9E,GAAWvnC,GAAQ,EAAE,EAGzC,OAAAzI,EAAA,IAACozC,GAAA,CACC,KAAA3qC,EACA,aAAc,GACd,eAAgB2wC,EAChB,WAAY,IACVp5C,EAAA,IAACsxC,GACC,CAAA,SAAAtxC,EAAA,IAACg1C,IAAO,MAAM,UAAU,SAAS,OAAA,CAAQ,CAC3C,CAAA,EAEF,aAAc,IAEV90C,EAAAA,KAAAO,EAAA,SAAA,CAAA,SAAA,CAAAT,MAAC4xC,GAAe,CAAA,QAAQ,YAAY,WAAW,OAC5C,SACHkD,EAAA,EACA50C,EAAAA,KAAC2xC,GAAwB,CAAA,QAAQ,QAAQ,SAAA,CAAA,SAChCvB,GAAoB4I,CAAG,GAAK,GAAA,EACrC,EACAh5C,EAAAA,KAAC2xC,GAAwB,CAAA,QAAQ,QAAQ,SAAA,CAAA,UAC/BvB,GAAoB6I,EAAK,EAAI,GAAK,GAAA,EAC5C,EACC/vC,GAAQC,GACNnJ,OAAA2xC,GAAA,CAAwB,QAAQ,QAC9B,SAAA,CAAAzoC,EAAK,KAAGC,CAAA,EACX,CAAA,EAEJ,EAEF,WAAYyrC,CAAA,CAAA,CAGlB,CC/DO,MAAMyE,GAAgB,CAAC,CAC5B,qBAAAC,EACA,oBAAAC,CACF,IAAgC,CACxB,KAAA,CAAE,SAAAv7C,GAAaC,KACf0J,EAA6BC,GAAe,WAAW,EACvDstC,EACJl3C,GAAY2J,EAER6xC,EAAcC,GAClBH,EACAC,CAAA,EAGF,OAEKz5C,EAAA,IAAAS,EAAA,SAAA,CAAA,SAAAi5C,EAAY,IAAI,CAACE,EAAex9C,IAC3Bg5C,EAEAp1C,MAAC+D,GAAM,SAAN,CACC,eAAC81C,GAA8B,CAAA,GAAGD,CAAU,CAAA,CAAA,EADzBx9C,CAErB,EAKF4D,EAAA,IAAC+D,GAAM,SAAN,CACC,eAAC+1C,GAAsB,CAAA,aAAcF,CAAU,CAAA,CAAA,EAD5Bx9C,CAErB,CAEH,CACH,CAAA,CAEJ,EClBa29C,GAAgB,CAAC,CAC5B,oBAAAN,EACA,qBAAAD,CACF,IAA0B,CACxB,MAAME,EAAcC,GAClBH,EACAC,CAAA,EAGI/9B,EAAcwD,KACd86B,EAAqB,MAAOnC,GAAe,OACnCn8B,EAAA,IAAI,KAAMm8B,GAAM,EAAE,EAC9B,MAAMxc,EAAW,MAAMlM,GAAc,SAAS,CAAE,YAAAzT,CAAa,CAAA,EACvDZ,GAAY9e,EAAAq/B,GAAA,YAAAA,EAAU,SAAV,YAAAr/B,EAAkB,UAC9Bq9C,EAAwB,OAAO,OAErC,GAAI,CAACv+B,EAAW,CACVu+B,GACFA,EAAsB,MAAM,EAG9B,MACF,CACA,MAAMC,EAAeD,GAAyB,OAC9CC,EAAa,SAAS,KAAO,GAAG/3C,EAAU,MAAM,OAAO,8BAA8BuZ,CAAS,EAAA,EAG1FhR,EAA6B4vC,EAAY,IAAKpE,GAAW,CAC7D,KAAM,CAAE,KAAA7sC,EAAM,IAAAywC,EAAK,IAAAC,EAAK,GAAAtB,GAAOvC,EAaxB,MAZc,CACnB,KAAM7sC,GAAQ,GACd,GAAIovC,GAAM,GACV,UAAW,IACRvC,EAAO,MAAQ,KACfA,EAAO,MAAQA,EAAO,MAAQ,KAAO,MACrCA,GAAA,YAAAA,EAAQ,QAAS,GACpB,GACA,YAAa4D,EAAM5I,GAAoB4I,CAAG,GAAK,GAAK,GACpD,YAAaC,EAAM7I,GAAoB6I,EAAK,EAAI,GAAK,GAAK,EAAA,CAGrD,CACR,EAEKlB,EAAW3C,GAAiD,CAChE,MAAMoD,EACJ14C,EAAA,IAAC43C,GAAA,CACC,KAAM3H,GAAUqF,EAAO,KAAgB,aAAa,EACpD,YAAa,GACb,GAAIA,EAAO,IAAM,GACjB,WAAY0E,CAAA,CAAA,EAGVnB,QACH9B,GAAW,CAAA,KAAMJ,GAAiB,CAACrB,EAAO,SAAS,CAAC,CAAG,CAAA,EASnD,MAPU,CACf,GAAIA,EAAO,GACX,KAAMoD,EACN,UAAWG,EACX,KAAMvD,EAAO,YACb,MAAOA,EAAO,aAAe,EAAA,CAExB,EAGP,OAAAt1C,EAAA,IAAC83C,GAAA,CACC,UAAWpK,GAAW,SACtB,QAAS5jC,EACT,QAAAmuC,EACA,QAAS1B,GACT,WAAYyD,CAAA,CAAA,CAGlB,ECnFO,SAASC,GAAyB,CACvC,WAAA3qB,EACA,QAAAzmB,EACA,cAAAmwC,CACF,EAAkC,CACzB,OAACnwC,EAEJA,EAAQ,SAAW,EACrB7I,EAAAA,IAACq1C,GAAsB,CAAA,CAAA,EACrB2D,EACFh5C,EAAA,IAAC+5C,GAAA,CACC,qBAAsBlxC,EACtB,oBAAqBqxC,GAAwB5qB,CAAU,CAAA,CAAA,EAGzDtvB,EAAA,IAACu5C,GAAA,CACC,qBAAsB1wC,EACtB,oBAAqBqxC,GAAwB5qB,CAAU,CAAA,CAAA,EAXzDtvB,EAAAA,IAAC01C,GAAkB,CAAA,CAAA,CAcvB,CC5BA,MAAMyE,GAAa,UAAsB,CACjC,MAAAC,EAAa74C,EAAU,OAAO,WAEpC,aACG,UAAQ,CAAA,MAAO,CAAE,QAAS,cACzB,EAAA,SAAAvB,EAAAA,IAAC,MAAI,CAAA,IAAKo6C,EAAY,IAAI,cAAc,MAAO,GAAI,OAAQ,GAAI,CACjE,CAAA,CAEJ,EAEO,SAASC,IAAoB,CAC5B,KAAA,CAACxnC,CAAY,EAAIub,KACjB,CAAE,4BAAAzmB,GAAgCC,KAClC0nB,EACJgrB,GAAqBznC,CAAY,EAE7B0nC,EAAwB3uC,GAAmC,CAC/D,KAAM,CAAE,KAAAxC,EAAM,MAAAC,EAAO,QAAAyC,EAAS,YAAAD,GAAgBD,EACxC9B,EAAO,CACX,GAAGwlB,EACH,KAAM,GACN,MAAO,GACP,QAAS,EAAA,EAEX,IAAIkrB,EAAgB,GAChB1uC,GAAWzC,GAASD,GAAQyC,GAC9B2uC,EAAgB,GAAG3uC,CAAW,IAAIzC,CAAI,KAAKC,CAAK,IAAIyC,CAAO,GACtDhC,EAAA,SACLA,EAAK,QAAU0wC,EACf1wC,EAAK,MAAQT,EACbS,EAAK,KAAOV,IAEZU,EAAK,MAAQT,EACbS,EAAK,KAAOV,GAGdzB,EAA4BmC,CAAI,CAAA,EAIhC,OAAA5J,EAAA,KAACK,EAAA,CACC,QAAS,EACT,eAAe,SACf,WAAW,SACX,UAAU,SAEV,SAAA,CAAAP,EAAA,IAACm6C,GAAW,EAAA,EAEZn6C,EAAAA,IAACC,GAAK,QAAQ,KAAK,WAAY,IAAK,QAAQ,eAAe,SAE3D,8DAAA,CAAA,EACAD,EAAAA,IAACoC,EAAI,CAAA,MAAO,MACV,SAAApC,EAAA,IAACmM,GAAA,CACC,wBAAyBouC,EACzB,gBAAe,GACf,mBAAkB,GAClB,aAAc,CACZ,YAAa,yBACb,iBAAkB,GAClB,eAAgB,GAChB,aAAc,CACZ,MAAO,OACP,gBAAiB,CAAE,MAAO,MAAO,EACjC,iBAAkB,CAAE,QAAS,MAAO,CACtC,CACF,CAAA,CAAA,EAEJ,CAAA,CAAA,CAAA,CAGN,CC9DO,SAASE,GAAmB,CACjC,GAAA5C,EACA,UAAA6C,EACA,MAAAC,EACA,OAAAzH,CACF,EAAqB,SACnB,MAAM0H,EAA0B,IAAM,CACpClG,GACE,CAAE,KAAMmD,GAAM,GAAI,WAAY,QAAS,EACvCt2C,EAAU,MAAM,OAAA,CAClB,EAEIytC,EAAW6L,IAAQ7+C,EAAA2+C,EAAM,CAAC,IAAP,YAAA3+C,EAAU,IAAI,GAAK,GACtC84C,EAAgB9E,GAAWhB,GAAY,EAAE,EACzC8L,EAAYC,GAAaL,GAAA,YAAAA,EAAY,EAAE,GAAK,IAC5C7rC,IAAQlS,EAAAu2C,GAAA,YAAAA,EAAS,KAAT,YAAAv2C,EAAa,SAAU,GAC/Bq+C,EAAiBC,GAAYpsC,CAAK,GAAK,GACvCqsC,GACJhI,GAAA,YAAAA,EAAQ,MAAM,GAAG,IAAKrkC,GAAUosC,GAAYpsC,EAAM,QAAU,GAAG,KAAM,CAAA,EACjEylC,EAAUqG,EAAM,MAAM,CAAC,EAAE,IAAKlyC,GAASoyC,GAAQpyC,EAAK,IAAI,CAAC,GAAK,CAAA,EAGlE,OAAAzI,EAAA,IAACozC,GAAA,CACC,KAAMpE,EACN,aAAc,GACd,eAAgB4L,EAChB,WAAY,IACV56C,EAAA,IAACsxC,GACC,CAAA,SAAAtxC,EAAA,IAACg1C,IAAO,MAAM,UAAU,SAAS,OAAA,CAAQ,CAC3C,CAAA,EAEF,aAAc,IAEV90C,EAAAA,KAAAO,EAAA,SAAA,CAAA,SAAA,CAAAT,MAAC4xC,GAAe,CAAA,QAAQ,YAAY,WAAW,OAC5C,SACHkD,EAAA,EACCgG,GACC56C,EAAA,KAAC2xC,GAAwB,CAAA,QAAQ,QAAQ,SAAA,CAAA,cAC3BiJ,CAAA,EACd,EAEDE,GACCh7C,EAAA,IAAC6xC,GAAwB,CAAA,QAAQ,QAC9B,SACHmJ,EAAA,CAAA,EAEJ,EAEF,sBAAuB,IACrB96C,EAAAA,KAACqxC,GACC,CAAA,SAAA,CAACvxC,EAAA,IAAA8xC,GAAA,CAAgC,QAAQ,YAAY,SAErD,UAAA,EACCwC,EAAQ,OAAS,EAChBt0C,EAAA,IAACoyC,GAAW,CAAA,MAAOkC,CAAS,CAAA,EAE3Bt0C,EAAA,IAAAC,EAAA,CAAK,QAAQ,QAAQ,SAAC,IAAA,EAGxBD,EAAA,IAAA8xC,GAAA,CAAgC,QAAQ,YAAY,SAErD,QAAA,EACCoB,EAAO,OAAS,EACflzC,EAAA,IAACizC,GAAW,CAAA,OAAQiI,CAAiB,CAAA,EAEpCl7C,EAAA,IAAAC,EAAA,CAAK,QAAQ,QAAQ,SAAC,IAAA,CAAA,EAE3B,EAEF,WAAY60C,CAAA,CAAA,CAGlB,CC3EO,MAAMqG,GAAgB,CAAC,CAAE,qBAAAC,KAA8C,SACtE,KAAA,CAAE,SAAAl9C,GAAaC,KACf0J,EAA6BC,GAAe,WAAW,EACvDstC,EACJl3C,GAAY2J,EAEd,GAAI,CAACuzC,EACH,aAAQ/F,GAAsB,CAAA,CAAA,EAGhC,MAAMgG,IAAY1+C,GAAAX,EAAAo/C,GAAA,YAAAA,EAAsB,aAAtB,YAAAp/C,EAAmC,KAAnC,YAAAW,EAAuC,YAAa,GAEtE,OAAIy4C,QAEC70C,EAAM,CAAA,QAAS,EACb,SAAU86C,EAAA,IAAKC,GAEZt7C,EAAA,IAAC+D,GAAM,SAAN,CACC,SAAA/D,EAAA,IAACu7C,IAA8B,GAAGD,CAAU,CAAA,CADzB,EAAAA,EAAS,EAE9B,CAEH,CACH,CAAA,EAIGt7C,MAACw7C,IAAe,UAAAH,CAAsB,CAAA,CAC/C,ECXaI,GAAgB,CAAC,CAAE,QAAA5yC,KAAkC,SAC1D,MAAA++B,EAAgC9/B,GAAe,UAAU,EACzD4zC,IAAgB/+C,GAAAX,EAAA6M,GAAA,YAAAA,EAAS,aAAT,YAAA7M,EAAsB,KAAtB,YAAAW,EAA0B,YAAa,GACvDg/C,EAAeC,GACnBF,EACA9T,CAAA,EAEI,CACJ,MAAO,CAAE,QAAA7W,CAAQ,EACjB,aAAc,CAAE,6BAAAwnB,CAA6B,GAC3ChsC,GAAuB,EAErByqC,EAAc9F,GAAiB,CACnC,MAAMsH,EAAU,CACd,KAAMtH,GAAQ,GACd,WAAY,SACZ,qBAAsBtJ,CAAA,EAEpB2Q,EACFE,GAAwBD,EAASznB,CAAO,EAExC2jB,GAAmB8D,EAASznB,CAAO,CACrC,EAGIjnB,EAA6B6xC,EAAa,IAAI,CAACL,EAAUl/C,IAAU,SACjE,MAAAy/C,EAAkBH,EAAct/C,CAAK,EACrC82C,GAAS2I,GAAA,YAAAA,EAAiB,SAAU,GAmBnC,MAlBkC,CACvC,MAAMP,GAAA,YAAAA,EAAU,OAAQ,GACxB,MAAMA,GAAA,YAAAA,EAAU,WAAY,GAC5B,MAAKt/C,EAAAs/C,GAAA,YAAAA,EAAU,eAAV,YAAAt/C,EAAwB,MAAO,GACpC,QAAS6/C,GAAA,YAAAA,EAAiB,MACvB,MAAM,GACN,IAAKpzC,GAASoyC,GAAQpyC,EAAK,IAAI,GAClC,OACEyqC,EAAO,OAAS,EACZA,EAAO,IAAKrkC,GACVA,GAAA,MAAAA,EAAO,OAASosC,GAAYpsC,EAAM,MAAM,EAAI,EAAA,EAE9C,CAAC,EACP,SAAUgtC,GAAA,MAAAA,EAAiB,UACvBd,IAAap+C,EAAAk/C,EAAgB,YAAhB,YAAAl/C,EAA4B,EAAE,EAC3C,IACJ,qBAAsB2+C,CAAA,CAEjB,CACR,EAEKrD,EAAWqD,GAAmD,CAClE,MAAMQ,EACJ97C,EAAA,IAAC43C,GAAA,CACC,KAAM0D,EAAS,KACf,YAAa,GACb,GAAIA,EAAS,KACb,WAAAtE,CAAA,CAAA,EAGE2B,EAAe34C,EAAAA,IAACk3C,GAAU,CAAA,IAAKoE,EAAS,GAAK,CAAA,EAC7C1C,EACH54C,MAAA+2C,GAAA,CAAW,KAAMJ,GAAiB2E,EAAS,OAAO,CAAG,CAAA,EAElDS,EACH/7C,MAAA+2C,GAAA,CAAW,KAAMJ,GAAiB2E,EAAS,MAAM,CAAG,CAAA,EAEjDU,QACHjF,GAAW,CAAA,KAAMJ,GAAiB,CAAC2E,EAAS,QAAQ,CAAC,CAAG,CAAA,EAWpD,MARU,CACf,GAAIA,EAAS,qBAAqB,KAClC,KAAMQ,EACN,IAAKnD,EACL,QAASC,EACT,OAAQmD,EACR,SAAUC,CAAA,CAEL,EAGP,OAAAh8C,EAAA,IAAC83C,GAAA,CACC,UAAWpK,GAAW,QACtB,QAAS5jC,EACT,QAAS2sC,GACT,QAAAwB,EACA,WAAAjB,CAAA,CAAA,CAGN,EC5GO,SAASiF,GAAyB,CACvC,QAAApzC,EACA,cAAAmwC,CACF,EAAkC,WAChC,MAAMkD,IAAQx/C,GAAAC,GAAAX,EAAA6M,GAAA,YAAAA,EAAS,aAAT,YAAA7M,EAAsB,KAAtB,YAAAW,EAA0B,YAA1B,YAAAD,EAAqC,SAAU,EAE7D,OAAQmM,EAEJqzC,IAAU,EACXl8C,MAAAq6C,GAAA,CAAkB,CAAA,EACjBrB,QACDyC,GAAc,CAAA,QAAA5yC,EAAkB,EAEhC7I,MAAAm7C,GAAA,CAAc,qBAAsBtyC,CAAS,CAAA,EAN9C7I,EAAA,IAAC01C,KAAkB,CAQvB,CCZO,SAASyG,GAAuB,CACrC,GAAAtE,EACA,KAAApvC,EACA,MAAAgB,EACA,UAAAqpC,EACA,QAAAtlC,EACA,eAAA4uC,EACA,aAAAC,CACF,EAAyB,CACvB,MAAMC,EAA+B,IAAM,CACzCD,EAAaxE,CAAE,CAAA,EAGX0E,EAAsBngD,GAAkB,CACtC,MAAAogD,EACJ,OAAOC,EAAmBrgD,CAAK,GAAM,SACjCqgD,EAAmBrgD,CAAK,EACxBqgD,EAAmBrgD,CAAK,EAAE,KAChCggD,GAAA,MAAAA,EAAiBI,EAAW,EAGxB1H,EAAgB9E,GAAWvnC,GAAQ,EAAE,EAE3C,IAAIg0C,EAAqB3J,EAErB,MAAM,QAAQ2J,CAAkB,IAClCA,EAAqBA,EAAmB,OAAQ/yC,GAAYA,EAAQ,IAAI,GAI1E,MAAMgzC,EACJD,GAAsBA,EAAmB,OAAS,EAC9C,OAAOA,EAAmB,CAAC,GAAM,SAC/BA,EAAmB,CAAC,EACpBA,EAAmB,CAAC,EAAE,KACxB,KAGJ,OAAAz8C,EAAA,IAACozC,GAAA,CACC,KAAA3qC,EACA,aAAc,GACd,eAAgB6zC,EAChB,WAAY,IACVt8C,EAAA,IAACsxC,GACC,CAAA,SAAAtxC,EAAA,IAACg1C,IAAO,MAAM,UAAU,SAAS,OAAA,CAAQ,CAC3C,CAAA,EAEF,aAAc,IAEV90C,EAAAA,KAAAO,EAAA,SAAA,CAAA,SAAA,CAAAT,MAAC4xC,GAAe,CAAA,QAAQ,YAAY,WAAW,OAC5C,SACHkD,EAAA,EACCrrC,GACCzJ,EAAA,IAAC6xC,GAAwB,CAAA,QAAQ,QAC9B,SACHpoC,EAAA,EAEDizC,GACC18C,EAAA,IAAC6xC,GAAwB,CAAA,QAAQ,QAC9B,SACH6K,EAAA,EAEDlvC,GACCxN,EAAA,IAAC6xC,GAAwB,CAAA,QAAQ,QAC9B,SACHrkC,EAAA,CAAA,EAEJ,EAEF,sBAAuB,IACrBtN,EAAAA,KAACqxC,GACC,CAAA,SAAA,CAACvxC,EAAA,IAAA8xC,GAAA,CAAgC,QAAQ,YAAY,SAErD,YAAA,EACCgB,GAAaA,EAAU,OAAS,EAC/B9yC,EAAA,IAAC6yC,GAAA,CACC,UAAW4J,EACX,eAAgBF,CAAA,CAAA,EAGlBv8C,EAAAA,IAACC,EAAK,CAAA,QAAQ,QAAQ,SAAC,IAAA,CAAA,EAE3B,EAEF,WAAY60C,CAAA,CAAA,CAGlB,CC7EO,MAAM6H,GAAe,CAAC,CAC3B,oBAAAC,EACA,SAAA5N,EACA,QAAAtlC,CACF,IAAwB,CACtB,KAAM,CAAE,SAAAmzC,EAAW,EAAO,EAAAD,EACpB,CAAE,aAAA3hD,CAAA,EAAiBC,EAAA,WAAWC,EAAS,EACvC,CAAE,2BAAA2hD,EAA4B,iCAAAC,CAAiC,EACnEn1C,GAAkB,EACd,CAAE,SAAA1J,GAAaC,KACf0J,EAA6BC,GAAe,WAAW,EACvDstC,EACJl3C,GAAY2J,EAERm1C,EAAiBtzC,GACrBzO,EAAa,iBAAiB,CAAE,QAASyO,EAAS,EAE9C6yC,EAAqB,CACzB7yC,EACAuzC,IACG,CACH,IAAIT,EAAc,OAAO9yC,GAAY,SAAWA,EAAUA,EAAQ,KAE9DuzC,EAC+BF,EAAA,CAAE,QAASP,CAAA,CAAa,EAE9BM,EAAA,CAAE,QAASN,CAAA,CAAa,CACrD,EAGIU,EAAoBC,GAAsB,CAC9CzI,GACE,CACE,WAAYyI,EACZ,WAAY,SACd,EACA57C,EAAU,MAAM,OAAA,CAClB,EAGF,OAAKs7C,QAKFt8C,EAAM,CAAA,QAAS,EACb,SAASs8C,EAAA,IAAKO,GACThI,EAEAp1C,EAAA,IAAC+D,GAAM,SAAN,CACC,SAAA/D,EAAA,IAACq9C,GAAA,CACE,GAAGD,EACJ,eAAiB1zC,GAAY6yC,EAAmB7yC,EAAS,EAAI,EAC7D,aAAcwzC,CAAA,CAAA,GAJGE,EAAO,EAM5B,EAKFp9C,EAAA,IAACs9C,GAAA,CAEE,GAAGF,EACJ,UACEA,EAAO,KAAK,YAAmB,KAAApO,GAAY,IAAI,YAAY,EAE7D,eAAgBtlC,GAAW,GAC3B,eAAiBA,GAAY6yC,EAAmB7yC,EAAS,EAAK,EAC9D,cAAAszC,EACA,aAAcE,EACd,WAAW,EAAA,EATNE,EAAO,EAAA,CAYjB,CACH,CAAA,QAjCQG,GAAiB,CAAA,CAAA,CAmC7B,EC5EaC,GAAe,CAAC,CAAE,QAAA30C,KAAiC,CAC9D,KAAM,CAAE,SAAAg0C,EAAW,EAAO,EAAAh0C,EACpB,CAAE,2BAAAi0C,GAA+Bl1C,KAEjC20C,EAAsB7yC,GAAqC,CAC3D,GAAA,OAAOA,GAAY,SAAU,CACJozC,EAAA,CAAE,QAAApzC,EAAS,EAEtC,MACF,CAEAozC,EAA2B,CAAE,QAASpzC,EAAQ,IAAM,CAAA,CAAA,EAEhDwzC,EAAoBC,GAAsB,CAC9CzI,GACE,CACE,WAAYyI,EACZ,WAAY,SACd,EACA57C,EAAU,MAAM,OAAA,CAClB,EAGIuI,EAA4B+yC,EAAS,IAAKY,GAAY,SAWnD,MAVa,CAClB,MAAMA,GAAA,YAAAA,EAAS,OAAQ,GACvB,KAAKA,GAAA,YAAAA,EAAS,QAAS,GACvB,WAAWA,GAAA,YAAAA,EAAS,KAAM,GAC1B,YACE9gD,GAAAX,EAAAyhD,GAAA,YAAAA,EAAS,YAAT,YAAAzhD,EACI,OAAQ0N,GAAYA,EAAQ,QADhC,YAAA/M,EAEI,IAAK+M,GAAYA,EAAQ,QAAS,CAAC,EACzC,UAAW,EAAC+zC,GAAA,YAAAA,EAAS,UAAW,EAAE,CAAA,CAE7B,CACR,EAEKxF,EAAW3C,GAA+C,CAC9D,MAAMoD,EACJ14C,EAAA,IAAC43C,GAAA,CACC,KAAMtC,EAAO,KACb,GAAIA,EAAO,UACX,WAAY4H,EACZ,YAAa,EAAA,CAAA,EAGXQ,EACJ19C,EAAA,IAAC+2C,GAAA,CACC,KAAMJ,GAAiBrB,EAAO,UAAWA,EAAO,SAAS,EACzD,WAAYiH,CAAA,CAAA,EAGV1D,EACH74C,MAAA+2C,GAAA,CAAW,KAAMJ,GAAiBrB,EAAO,SAAS,CAAG,CAAA,EAUjD,MAPU,CACf,GAAIA,EAAO,UACX,KAAMoD,EACN,IAAKpD,EAAO,IACZ,UAAWoI,EACX,UAAW7E,CAAA,CAEN,EAIP,OAAA74C,EAAA,IAAC83C,GAAA,CACC,QAAShuC,EACT,QAAAmuC,EACA,QAASzB,GACT,UAAW9I,GAAW,aACtB,WAAYwP,CAAA,CAAA,CAGlB,ECtFO,SAASS,GAAwB,CACtC,QAAA90C,EACA,cAAAmwC,CACF,EAAiC,CAC/B,OAAQnwC,EAEJA,EAAQ,OAAS,EACnB7I,EAAA,IAACu9C,KAAiB,EAChBvE,QACDwE,GAAa,CAAA,QAAA30C,CAAkB,CAAA,EAE/B7I,EAAA,IAAA28C,GAAA,CAAa,oBAAqB9zC,CAAS,CAAA,EAN5C7I,MAAC49C,IAAsB,CAAA,CAQ3B,CCPO,SAASC,GAAoB,CAClC,KAAAp1C,EACA,UAAA2rC,EACA,UAAAC,EACA,UAAA1D,EACA,UAAA4D,EACA,IAAA5qC,EACA,eAAAm0C,CACF,EAAsB,CACpB,KAAM,CAAE,gBAAAjN,CAAgB,EAAIH,GAAmBC,EAAW,CAAE,CAAA,EAEtDoN,EAAgC,IAAM,CAG1C,GAFYxJ,GAAA,MAAAA,IAERuJ,EAAgB,CAIlB,MAAMxE,EAHwB,OAAO,QAGS,OAE9CA,EAAa,SAAS,KAAO,GAAG/3C,EAAU,MAAM,OAAO,qCAAqCu8C,CAAc,EAC5G,CAAA,EAGIjJ,EAAeR,GAAA,YAAAA,EAAY,GAC3BS,EAAgB9E,GAAWvnC,GAAQ,EAAE,EAGzC,OAAAzI,EAAA,IAACozC,GAAA,CACC,KAAA3qC,EACA,aAAc,GACd,eAAgBs1C,EAChB,WAAY,IACV/9C,EAAA,IAACsxC,GACC,CAAA,SAAAtxC,EAAA,IAACg1C,IAAO,MAAM,UAAU,SAAS,OAAA,CAAQ,CAC3C,CAAA,EAEF,aAAc,IAEV90C,EAAAA,KAAAO,EAAA,SAAA,CAAA,SAAA,CAAAT,MAAC4xC,GAAe,CAAA,QAAQ,YAAY,WAAW,OAC5C,SACHkD,EAAA,EACA50C,EAAAA,KAAC2xC,GAAwB,CAAA,QAAQ,QAAQ,SAAA,CAAA,UAChCuC,GAAA,YAAAA,EAAW,SAAU,GAAA,EAC9B,EACCS,GACC70C,EAAA,IAAC6xC,GAAwB,CAAA,QAAQ,QAC9B,SACHgD,EAAA,CAAA,EAEJ,EAEF,sBAAuB,IACrB30C,EAAAA,KAACqxC,GACC,CAAA,SAAA,CAACvxC,EAAA,IAAA8xC,GAAA,CAAgC,QAAQ,YAAY,SAErD,YAAA,EACCuC,GAAaA,EAAU,OAAS,EAC9Br0C,EAAAA,IAAAoyC,GAAA,CAAW,MAAOiC,CAAuB,CAAA,EAE1Cr0C,EAAAA,IAAC6xC,GAAwB,CAAA,QAAQ,QAAQ,SAAC,IAAA,EAG3C7xC,EAAA,IAAA8xC,GAAA,CAAgC,QAAQ,YAAY,SAErD,YAAA,EACCnB,GAAaA,EAAU,OAAS,EAC9B3wC,EAAA,IAAA4yC,GAAA,CAAc,gBAAA/B,CAAkC,CAAA,EAEhD7wC,EAAA,IAAA6xC,GAAA,CAAwB,QAAQ,QAAQ,SAAC,IAAA,CAAA,EAE9C,EAEF,WAAY3B,GAAmB4E,EAAenrC,CAAG,CAAA,CAAA,CAGvD,CCxEO,MAAMq0C,GAAsB,CAAC,CAClC,iBAAAC,EACA,iBAAA3G,CACF,IAAgC,CAC9B,KAAM,CAAC4G,EAAIC,CAAK,EAAI9iD,WAAiB,EAAE,EACjC,CAACwX,CAAY,EAAIub,KACjB,CAAE,SAAAlwB,GAAaC,KACf0J,EAA6BC,GAAe,WAAW,EACvDstC,EACJl3C,GAAY2J,EAEdhM,EAAAA,UAAU,IAAM,CACd,SAAS,MAAQ,uBACnB,EAAG,CAAE,CAAA,EAELA,EAAAA,UAAU,IAAM,CACT0F,EAAU,aAAa,sBAC3B,SAAY,CAEL,MAAAuI,EAAO,MADI,MAAM,MAAM,mCAAmC,GACpC,OAE5Bq0C,EAAMr0C,EAAK,EAAE,CAAA,IAEjB,EAAG,CAAE,CAAA,EAEL,IAAIs0C,EAA0B,CAAA,EAE1BC,EAAuB,CAAA,EAEvB/G,IACgB+G,EAAAC,GAChBhH,EACA2G,EAAiB,MACjBA,EAAiB,KAAA,GAELG,EAAAC,EAGhB,MAAME,EAAc,IAAM,CACxB,KAAM,CAAE,MAAAhH,EAAO,MAAAiH,EAAO,MAAAhH,CAAA,EAAUyG,EAG1BjP,EADW,CAACuI,EAAOiH,EAAOhH,CAAK,EAAE,OAAO,OAAO,EAC3B,KAAK,GAAG,EAE3B,OAAAvH,GAASjB,EAAS,YAAA,CAAa,CAAA,EAGxC,IAAIyP,EAAqC,KAErC5rC,EAAa,IAAI,sBAAsB,IACnB4rC,EAAA,qDAAqDF,EAAa,CAAA,yDAG1F,SAAS90C,GAAQ,CACf,GAAIg1C,EACF,aACGx+C,EAAK,CAAA,QAAQ,KAAK,QAAS,SACzB,SACHw+C,CAAA,CAAA,CAGN,CAEA,OAAIrJ,EAGGp1C,EAAA,IAAAS,EAAA,SAAA,CAAA,SAAA29C,EAAc,IAAI,CAAC9I,EAAgBl5C,IAEhC4D,MAAC+D,GAAM,SAAN,CACC,eAAC26C,GAA+B,CAAA,GAAGpJ,CAAQ,CAAA,CAAA,EADxBl5C,CAErB,CAEH,CACH,CAAA,EAKD4D,EAAAA,IAAAO,EAAA,CAAM,GAAI,CAAE,UAAW,IAAK,SAAU,UAAW,EAChD,SAACP,EAAA,IAAAqB,EAAA,CAAK,UAAS,GAAC,QAAS,EACvB,SAAAnB,EAAAA,KAACmB,EAAK,CAAA,KAAI,GAAC,GAAI,GAAI,GAAI,GAAI,GAAI,CAAE,GAAI,CAAE,GAAI,KAAM,GAAI,CAAA,CACnD,EAAA,SAAA,CAAArB,EAAA,IAACqB,EAAK,CAAA,KAAI,GAAC,GAAI,GACb,SAAArB,EAAA,IAACoC,EAAA,CACC,GAAI,CAAE,GAAI,EAAG,GAAI,CAAE,EACnB,GAAI,CAAE,GAAI,EAAG,GAAI,CAAE,EACnB,MAAO,OACP,SAAU,OACV,gBAAiB,OAEhB,SAAMqH,EAAA,CAAA,CAAA,EAEX,EACC20C,EAAc,IAAI,CAAC9I,EAAgBl5C,IAEhC4D,EAAA,IAAC+D,GAAM,SAAN,CACC,SAAA/D,EAAA,IAACy1C,GAAA,CACE,GAAGH,EACJ,GAAA4I,EACA,eAAgB,EAAA5I,EAAO,eACvB,eAAgBA,EAAO,eAAiB,OAAS,EAAA,CAAA,GALhCl5C,CAOrB,CAEH,CAAA,EACH,EACF,CACF,CAAA,CAEJ,ECpGauiD,GAAoB,CAAC,CAChC,iBAAArH,EACA,iBAAA2G,CACF,IAA8B,CAC5B,KAAM,CAACp1C,EAAS+1C,CAAU,EAAIvjD,EAAA,SAAmB,CAAE,CAAA,EAC7C,CACJ,MAAO,CAAE,QAAA01B,CAAQ,GACfxkB,GAAuB,EAErBsyC,EAA0Bf,GAAiC,CAE/D,MAAMxE,EADwB,OAAO,QACS,OAC9CA,EAAa,SAAS,KAAO,GAAGvoB,CAAO,qCAAqC+sB,CAAc,EAAA,EAGtFh0C,EAAiCjB,EAAQ,IAAKysC,IACzB,CACvB,MAAMA,GAAA,YAAAA,EAAQ,OAAQ,GACtB,YAAa,GAAQA,GAAA,MAAAA,EAAQ,aAC7B,gBAAgBA,GAAA,YAAAA,EAAQ,iBAAkB,GAC1C,MAAMA,GAAA,YAAAA,EAAQ,OAAQ,GACtB,KAAKA,GAAA,YAAAA,EAAQ,MAAO,GACpB,WAAWA,GAAA,YAAAA,EAAQ,YAAa,GAChC,YAAYA,GAAA,YAAAA,EAAQ,YAAa,CAAI,GAAA,OAClCv3C,GAAiCA,IAAa,MACjD,EACA,WAAWu3C,GAAA,YAAAA,EAAQ,YAAa,CAAC,CAAA,EAIpC,EAEK2C,EAAW3C,GAAyD,CACxE,MAAMoD,EACJ14C,EAAA,IAAC43C,GAAA,CACC,KAAMtC,EAAO,KACb,YAAaA,EAAO,YACpB,GAAIA,EAAO,eACX,WAAYuJ,CAAA,CAAA,EAGVlG,QACHzB,GAAU,CAAA,IAAK5B,EAAO,IAAK,UAAWA,EAAO,SAAW,CAAA,EAErDuD,EACH74C,MAAA+2C,GAAA,CAAW,KAAMJ,GAAiBrB,EAAO,SAAS,CAAG,CAAA,EAElDwD,EACJ94C,EAAA,IAAC+2C,GAAA,CACC,KAAMJ,GAAiBrB,GAAA,YAAAA,EAAQ,SAAS,EACxC,WAAYuJ,CAAA,CAAA,EAWT,MAPU,CACf,GAAIvJ,EAAO,eACX,KAAMoD,EACN,IAAKC,EACL,UAAWE,EACX,UAAWC,CAAA,CAEN,EAGTj9C,OAAAA,EAAAA,UAAU,IAAM,CACd,GAAIy7C,EAAkB,CACpB,MAAM+G,EAAkBhH,GACtBC,EACA2G,EAAiB,MACjBA,EAAiB,KAAA,EAEnBW,EAAWP,CAAe,CAC5B,CAAA,EACC,CAAC/G,EAAkB2G,CAAgB,CAAC,EAErCj+C,EAAA,IAAC83C,GAAA,CACC,QAAShuC,EACT,QAAAmuC,EACA,QAAS3B,GACT,UAAW5I,GAAW,UACtB,WAAYmR,CAAA,CAAA,CAGlB,ECrGO,SAASC,GAA6B,CAC3C,WAAAxvB,EACA,QAAAzmB,EACA,eAAAk2C,CACF,EAAsC,CACpC,MAAMC,GAASn2C,GAAA,YAAAA,EAAS,KAAK,OAAO,QAAQ,SAAU,EAE/C,OAACA,EAEJm2C,IAAW,EACbh/C,EAAA,IAACq1C,GAAsB,EAAA,EACrB0J,EACF/+C,EAAA,IAAC2+C,GAAA,CACC,iBAAkBrvB,EAClB,iBAAkBzmB,CAAA,CAAA,EAGpB7I,EAAA,IAACg+C,GAAA,CACC,iBAAkB1uB,EAClB,iBAAkBzmB,CAAA,CAAA,EAXpB7I,EAAAA,IAAC01C,GAAkB,CAAA,CAAA,CAcvB,CCvBO,SAASuJ,GAAc,CAC5B,WAAA3vB,EACA,iBAAA4vB,CACF,EAAuB,CACf,MAAAtX,EAAgC9/B,GAAe,UAAU,EACzDq3C,EAA6C,CACjD,GAAG7vB,EACH,GAAIsY,GAAiC,CAAE,qBAAsB,EAAK,CAAA,EAG9D,CAAE,KAAA99B,EAAM,UAAAs1C,EAAW,QAAAC,CAAA,EAAYC,GAAgB,CACnD,eAAgB,OAChB,QAAS,CACP,mBAAoBC,GAAsBJ,CAAiB,EAC3D,SAAU,EACZ,CAAA,CACD,EAIG,OACFD,EADEE,GAAa,CAACC,EAFHv1C,EAKI,MAFM,EAKlB9J,MAAC+D,GAAM,SAAN,CAAe,CAAA,CACzB,CCxBO,SAASy7C,GAAgB,CAC9B,WAAAlwB,EACA,mBAAAmwB,CACF,EAAyB,CACvB,KAAM,CAAE,KAAA31C,EAAM,QAAAu1C,EAAS,UAAAD,CAAA,EAAcM,GAAkB,CACrD,qBAAsBxF,GAAwB5qB,CAAU,CAAA,CACzD,EAIG,OACFmwB,EADEL,GAAa,CAACC,EAFHv1C,EAKM,MAFM,EAIpB9J,MAAC+D,GAAM,SAAN,CAAe,CAAA,CACzB,CCjBO,SAAS47C,GAAoB,CAClC,WAAArwB,EACA,uBAAAswB,CACF,EAA6B,CAC3B,KAAM,CAAC1B,EAAIC,CAAK,EAAI9iD,WAAiB,EAAE,EAEvCQ,EAAAA,UAAU,IAAM,EACb,SAAY,CAELiO,MAAAA,EAAO,MADI,MAAM,MAAM,mCAAmC,GACpC,OAE5Bq0C,EAAMr0C,EAAK,EAAE,CAAA,IAEjB,EAAG,CAAE,CAAA,EAEL,KAAM,CAAE,KAAAA,EAAM,UAAAya,EAAW,QAAA86B,CAAY,EAAAQ,GACnC3B,EACA4B,GAAwBxwB,CAAU,EAClC,CAAC,CAAC4uB,CAAA,EAKA,OACF0B,EADE,CAACr7B,GAAa,CAAC86B,EAFJv1C,EAKU,MAFM,EAKxB9J,MAAC+D,GAAM,SAAN,CAAe,CAAA,CACzB,CC3BA,MAAMg8C,GAAsB,CAC1BC,EACAC,EACAC,EACAC,IACkB,CACZ,MAAAvR,EAAY,SAASoR,CAAY,EACjCnR,EAAa,SAASoR,CAAa,EACnCnR,EAAY,SAASoR,CAAY,EACjCnR,EAAa,SAASoR,CAAa,EAGvC,GAAA,MAAMvR,CAAS,GACf,MAAMC,CAAU,GAChB,MAAMC,CAAS,GACf,MAAMC,CAAU,EAET,OAAA,KAGT,IAAIplC,EAAMmlC,EAAYF,EAEtB,OAAIG,EAAaF,IACRllC,GAAA,GAGFA,CACT,EAEMy2C,GAAY,CAACtR,EAA0BC,IACtCD,EACAC,EAOE,CACL,KAAM,SAASD,CAAS,EACxB,MAAO,SAASC,CAAU,CAAA,EARnB,CACL,KAAM,SAASD,CAAS,EACxB,MAAO,IAAA,EAJY,KAcZuR,GACX/wB,GACG,CACG,KAAA,CAAE,MAAAioB,EAAO,MAAAC,EAAO,MAAAgH,EAAO,UAAA1P,EAAW,WAAAC,EAAY,WAAAF,EAAY,UAAAD,CAC9D,EAAAtf,EAEIgxB,EAAYF,GAAUtR,EAAWC,CAAU,EAE3CwR,EAAYH,GAAUxR,EAAWC,CAAU,EAE1C,MAAA,CACL,WAAY0I,EACZ,UAAWC,EACX,YAAagH,EACb,UAAW,IACX,YAAa,EACb,aAAcuB,GACZnR,EACAC,EACAC,EACAC,CACF,EACA,MAAO,CACL,KAAMuR,CACR,EACA,MAAO,CACL,KAAMC,CACR,CAAA,CAEJ,EAMMC,GAAoB,KACpBC,GAAoB,KACpBC,GAAoB,KACpBC,GAAoB,KAEnB,SAASC,GAAoB,CAClC,WAAAtxB,EACA,qBAAAuxB,CACF,EAA6B,CAC3B,KAAM,CAACC,EAAiBC,CAAkB,EAAI1lD,WAAS,EAAK,EACtD,CAAC2lD,EAAiBC,CAAkB,EAAI5lD,WAAS,EAAK,EAEtD,CACJ,KAAM6lD,EACN,QAASC,EACT,WAAYC,CAAA,EACVC,GACFP,EACAT,GAA0B/wB,CAAU,CAAA,EAGhC,CACJ,KAAMgyB,EACN,QAASC,EACT,WAAYC,CAAA,EACVC,GACFT,EACAX,GAA0B/wB,CAAU,CAAA,EAItCzzB,EAAAA,UAAU,IAAM,CACdklD,EAAmB,EAAK,EACxBE,EAAmB,EAAK,CAAA,EACvB,CAAC3xB,CAAU,CAAC,EAET,MAAAoyB,EAAqB,CACzBzuC,EACA0uC,IACY,CACN,MAAAz9C,EAAQ,SAAS+O,CAAI,EAC3B,GAAI,MAAM/O,CAAK,EAAU,MAAA,GAEzB,OAAQy9C,EAAW,CACjB,IAAK,WACI,OAAAz9C,GAASs8C,IAAqBt8C,GAASu8C,GAChD,IAAK,aACI,OAAAv8C,GAASw8C,IAAqBx8C,GAASy8C,GAChD,QACS,MAAA,EACX,CAAA,EAGIiB,EAAuB93C,GAA2C,CAChE,KAAA,CAAE,UAAAglC,EAAW,MAAAzlC,CAAU,EAAAS,EAG7B,MADI,EAAAT,GAAS,CAAC,CAAC,KAAM,MAAO,EAAE,EAAE,SAASA,CAAK,GAC1CylC,GAAa,CAAC4S,EAAmB5S,EAAW,UAAuB,EAGhE,EAGH+S,EAAuB/3C,GAA2C,CAChE,KAAA,CAAE,UAAAglC,EAAW,MAAAzlC,CAAU,EAAAS,EAG7B,MADI,EAAAT,GAAS,CAAC,CAAC,KAAM,MAAO,EAAE,EAAE,SAASA,CAAK,GAC1CylC,GAAa,CAAC4S,EAAmB5S,EAAW,YAAyB,EAGlE,EAGTjzC,OAAAA,EAAAA,UAAU,IAAM,CACV+lD,EAAoBtyB,CAAU,GAChCyxB,EAAmB,EAAI,EAErBc,EAAoBvyB,CAAU,GAChC2xB,EAAmB,EAAI,CACzB,EACC,CAAC3xB,CAAU,CAAC,EAEfzzB,EAAAA,UAAU,IAAM,CACd,MAAMgN,EAAkC,CAAA,EAClCi5C,EAAkB,CACtB,CAAE,QAAShB,EAAiB,KAAMI,CAAO,EACzC,CAAE,QAASF,EAAiB,KAAMM,CAAO,CAEzC,EAAA,OAAQS,GAAYA,EAAQ,OAAO,EAEjC,GAAAD,EAAgB,OAAS,EAAG,CAE9B,MAAME,EAAmB,KAAK,MAAM,IAAMF,EAAgB,MAAM,EAG1DG,EAA2C,CAAA,EAE3CC,EAA2C,CAAA,EAejD,GAbgBJ,EAAA,QAASC,GAAY,CAC/BA,EAAQ,OAEVE,EAAiB,KAAK,GAAGF,EAAQ,KAAK,MAAM,EAAGC,CAAgB,CAAC,EAEhEE,EAAiB,KAAK,GAAGH,EAAQ,KAAK,MAAMC,CAAgB,CAAC,EAC/D,CACD,EAGOn5C,EAAA,KAAK,GAAGo5C,CAAgB,EAG5Bp5C,EAAQ,OAAS,KAAOq5C,EAAiB,OAAS,EAAG,CACjD,MAAAC,EAAiB,IAAMt5C,EAAQ,OACrCA,EAAQ,KAAK,GAAGq5C,EAAiB,MAAM,EAAGC,CAAc,CAAC,CAC3D,CACF,CAEIt5C,EAAQ,OAAS,EACnBg4C,EAAqBh4C,CAAO,EAE5Bg4C,EADSM,GAAWI,GAAWH,GAAcI,EACxB,OACZ,CAACV,GAAmB,CAACE,EACT,CAAE,EAEF,CAAE,CAJO,CAKhC,EACC,CACDE,EACAI,EACAH,EACAI,EACAV,EACAC,EACAE,CAAA,CACD,EAEMhhD,MAAC+D,GAAM,SAAN,CAAe,CAAA,CACzB,CC3NO,SAASq+C,GAAe,CAC7B,WAAA9yB,EACA,kBAAA+yB,CACF,EAAwB,CACtB,KAAM,CAAE,KAAAv4C,EAAM,QAAAu1C,EAAS,UAAAD,CAAA,EAAckD,GAAiB,CACpD,oBAAqBC,GAAuBjzB,CAAU,CAAA,CACvD,EAIG,OACF+yB,EADEjD,GAAa,CAACC,EAFHv1C,EAKK,MAFM,EAKnB9J,MAAC+D,GAAM,SAAN,CAAe,CAAA,CACzB,CClBO,SAASy+C,GAAgB,CAC9B,WAAAlzB,EACA,mBAAAmzB,CACF,EAAyB,CACvB,KAAM,CAAE,KAAA34C,EAAM,UAAAs1C,EAAW,QAAAC,CAAA,EAAYC,GAAgB,CACnD,eAAgB,UAChB,QAAS,CACP,mBAAoBoD,GAAwBpzB,CAAU,CACxD,CAAA,CACD,EAIG,OACFmzB,EADErD,GAAa,CAACC,EAFHv1C,EAKM,MAFM,EAIpB9J,MAAC+D,GAAM,SAAN,CAAe,CAAA,CACzB,CCbO,SAAS4+C,GAAqB,CACnC,iBAAAC,EACA,eAAAC,CACF,EAGG,CACD,MAAMC,EAAc,yBACd,CACJ,OAAQ,CAAE,iBAAAC,CAAiB,EAC3B,MAAO,CAAE,QAAAhyB,CAAQ,GACfxkB,GAAuB,EACrB9Q,EAAWC,KAEXsnD,EAAYJ,EAAiB,gCAC7BK,EAAaL,EAAiB,iCAC9BM,EAAWN,EAAiB,6BAC5BzJ,EAAMyJ,EAAiB,qBACvBO,EAAUP,EAAiB,2BAC3Bv5C,EAAQu5C,EAAiB,2BACzBQ,EAASR,EAAiB,2BAC1Bx5C,EAAOw5C,EAAiB,2BACxBS,EAAqBT,EAAiB,mBACtCU,EAAqBV,EAAiB,uBACtCW,EAAWX,EAAiB,SAC5B5T,EAAW,CAACgU,EAAWC,EAAYC,CAAQ,EAAE,OAAO,OAAO,EAAE,KAAK,GAAG,EACrE7O,EAAY,CAAC8O,EAAS95C,EAAO+5C,EAAQh6C,CAAI,EAAE,OAAO,OAAO,EACzDo6C,EAAYH,GAAsBC,EAClCG,EAAeC,GAAsBd,EAAiB,oBAAoB,EAE1E,CAACe,EAAwBC,CAAyB,EAAIvoD,WAAiB,EAAE,EACzE,CAAE,gBAAAylB,GAAoBC,KAGtB,CAAE,KAAM8iC,CAAe,EAAIC,GAAgB,CAC/C,UAAWH,EACX,eAAgB,GAChB,wBAAyB,EAAA,CAC1B,EAGKI,EAA2CJ,EAE7CE,GAAA,MAAAA,EAAgB,MAChBA,EAAe,MAAM,KAAMG,GACrBA,EAAO,YAAoB,GACxBC,GAAqBrB,EAAkBoB,CAAM,CACrD,EACD,OANA,GAQJnoD,EAAAA,UAAU,IAAM,CACd,GAAIilB,EAAiB,CACb,MAAAZ,EAAiBgkC,GAAkBpjC,EAAiBgiC,CAAW,EAEjE5iC,EAAe,OAAS,GACA0jC,EAAA1jC,EAAe,CAAC,EAAG,SAAS,CAE1D,CAAA,EACC,CAACY,CAAe,CAAC,EAEpB,MAAMqjC,EAA2B,IAAM,CACrC,MAAMC,EAAgBC,GACpBzB,EACAa,CAAA,EAGW,aAAA,QACX,0BACA,KAAK,UAAUW,CAAa,CAAA,EAG9B3oD,EAAS,cAAc,CAAA,EAGnB6oD,EAAiC,IAAM,CACrCb,MAAAA,EAAeC,GAAsBd,EAAiB,oBAAoB,EAEhF,GAAIW,GAAYE,EAAc,CAI5B,MAAMnK,EAHwB,OAAO,QAGS,OAE9CA,EAAa,SAAS,KAAO,GAAGvoB,CAAO,eAAe0yB,CAAY,WAAWF,CAAQ,EACvF,CAAA,EAGIgB,EAAwBC,GAA4B,CACxD,KAAM,CAACvxC,EAAMwxC,EAAOC,CAAG,EAAIF,EAAQ,MAAM,GAAG,EAC5C,MAAI,CAACvxC,GAAQ,CAACwxC,GAAS,CAACC,EAAY,IAE7B,GAAGD,EAAM,SAAS,EAAG,GAAG,CAAC,IAAIC,EAAI,SAAS,EAAG,GAAG,CAAC,IAAIzxC,CAAI,EAAA,EAG5D6hC,EAAgB9E,GAAWhB,GAAY,EAAE,EAG7C,OAAAhvC,EAAA,IAACozC,GAAA,CACC,KAAMpE,EACN,aAAc,GACd,eAAgBsV,EAChB,WAAY,IACVtkD,EAAA,IAACqxC,GACC,CAAA,SAAArxC,EAAA,IAAC,MAAA,CACC,IAAK+iD,GAAA,YAAAA,EAAkB,4BACvB,IAAI,cACJ,MAAO,GACP,OAAQ,EAAA,CAAA,EAEZ,EAEF,aAAc,IAEV7iD,EAAAA,KAAAO,EAAA,SAAA,CAAA,SAAA,CAAAT,MAAC4xC,GAAe,CAAA,QAAQ,YAAY,WAAW,OAC5C,SACHkD,EAAA,EACC+N,GACC7iD,EAAA,IAAC6xC,GAAwB,CAAA,QAAQ,QAC9B,SACHgR,EAAA,EAEF3iD,EAAAA,KAAC2xC,GAAwB,CAAA,QAAQ,QAAQ,SAAA,CAAA,SAChC2R,GAAa,GAAA,EACtB,EACAtjD,EAAAA,KAAC2xC,GAAwB,CAAA,QAAQ,QAAQ,SAAA,CAAA,kBACvBsH,EAAMoL,EAAqBpL,CAAG,EAAI,GAAA,EACpD,CAAA,EACF,EAEF,sBAAuB,IACrBj5C,EAAAA,KAACqxC,GACC,CAAA,SAAA,CAACvxC,EAAA,IAAA8xC,GAAA,CAAgC,QAAQ,YAAY,SAErD,YAAA,EACCuC,GAAaA,EAAU,OAAS,EAC9Br0C,EAAAA,IAAAoyC,GAAA,CAAW,MAAOiC,CAAuB,CAAA,EAE1Cr0C,EAAAA,IAAC6xC,GAAwB,CAAA,QAAQ,QAAQ,SAAC,IAAA,EAE5C7xC,EAAA,IAACsC,GAAA,CACC,UAAS,GACT,QAAQ,WACR,QAAS6hD,EACT,MAAM,UACN,cAAUQ,GAAa,EAAA,EACvB,SAAUZ,EACV,GAAI,CAAE,UAAW,CAAE,EAElB,WAAqB,uBAAyB,oBAAA,CACjD,CAAA,EACF,EAEF,WAAYjP,CAAA,CAAA,CAGlB,CCpKO,MAAM8P,GAAkB,CAAC,CAAE,QAAAC,KAA0C,CACpE,KAAA,CAAE,SAAA3mD,GAAaC,KACf0J,EAA6BC,GAAe,WAAW,EACvDstC,EACJl3C,GAAY2J,EAEd,OAEK7H,EAAA,IAAAS,EAAA,SAAA,CAAA,SAAAokD,EAAQ,IAAI,CAACC,EAA8B1oD,IAAkB,CAC5D,IAAIymD,EAAiB,GAErB,OAAQiC,EAAO,qBAAsB,CACnC,IAAK,eACcjC,EAAA,iCACjB,MACF,IAAK,eACcA,EAAA,mCACjB,KACJ,CAEA,OAAIzN,EAEAp1C,EAAA,IAAC+D,GAAM,SAAN,CACC,SAAA/D,EAAA,IAAC+kD,GAAA,CACC,iBAAkBD,EAClB,eAAAjC,CAAA,CAAA,GAHiBzmD,CAKrB,EAKF4D,EAAA,IAAC+D,GAAM,SAAN,CACC,SAAA/D,EAAA,IAACglD,GAAA,CACC,iBAAkBF,EAClB,eAAAjC,CAAA,CAAA,GAHiBzmD,CAKrB,CAEH,CAAA,CACH,CAAA,CAEJ,EC5CO,SAAS6oD,GAA2B,CACzC,QAAAp8C,CACF,EAAoC,CAClC,OAAQA,EAEJA,EAAQ,SAAW,EACrB7I,EAAA,IAACq1C,GAAsB,CAAA,CAAA,EAEtBr1C,EAAA,IAAA4kD,GAAA,CAAgB,QAAS/7C,CAAS,CAAA,EAJlC7I,MAAA01C,GAAA,CAAA,CAAkB,CAMvB,CC2JgB,SAAAwP,GAA6BC,EAAeC,EAAa,CACvE,MAAMC,EAAKD,EAAMD,EACXG,EAAUD,EAAK,IACfE,EAAUD,EAAU,GACnB,MAAA,CAAE,GAAAD,EAAI,QAAAC,EAAS,QAAAC,EACxB,CC9HO,SAASC,IAAwB,cACtC,MAAMloD,EAAQuH,KACR,CAAE,cAAA6C,CAAA,EAAkBxM,EAAA,WAAWC,EAAS,EACxC+9B,EAAYwS,GAAcpuC,EAAM,YAAY,GAAG,IAAI,CAAC,EAEpD,CAAE,SAAAY,EAAU,SAAA0tC,CAAS,EAAIztC,GAAc,EACvC,CAAC0U,CAAY,EAAIub,KACjB,CAACye,EAAgBC,CAAiB,EAAIzxC,EAAA,SAC1CoqD,GAAe,cAAA,EAEX,CAACC,EAAcC,CAAe,EAAItqD,WAAkB,EAAK,EACzD,CAAC0yC,EAAmBC,CAAoB,EAAI3yC,WAAkB,EAAK,EACnE,CAACgwC,EAAwBC,CAAyB,EACtDjwC,WAAkB,EAAI,EAClB,CAACuvC,EAAeqD,CAAgB,EAAI5yC,WAAS,EAAK,EAClD,CAAC6yC,EAA4BC,CAA6B,EAC9D9yC,WAAkB,EAAK,EACnB,CAAC+iD,EAAec,CAAgB,EAAI7jD,EAAA,SACxC,MAAA,EAEI,CAACuqD,EAAiBnG,CAAkB,EAAIpkD,EAAAA,SAE5C,MAAS,EACL,CAACwqD,EAAmBhF,CAAoB,EAAIxlD,EAAAA,SAEhD,MAAS,EACL,CAACyqD,EAAgBzD,CAAiB,EAAIhnD,EAAAA,SAE1C,MAAS,EACL,CAAC0qD,EAAiBtD,CAAkB,EAAIpnD,EAAAA,SAE5C,MAAS,EACL,CAAC2qD,EAAqBpG,CAAsB,EAAIvkD,EAAAA,SAEpD,MAAS,EACL,CAACwyC,EAAaC,CAAc,EAAIzyC,EAAAA,SAAoBoyC,GAAU,IAAI,EAClE,CAACwY,EAAoBC,CAAqB,EAAI7qD,EAAA,SAClD,IAAA,EAGI0xC,EACJjlC,GAAe,WAAW,GAAK5J,EAI3B86C,EAF6BlxC,GAAe,WAAW,GAG7BoxB,GAAa2U,IAAgBJ,GAAU,MACjEa,EAAuBxmC,GAAe,WAAW,EACjDymC,EAA8BrV,GAAaoV,EAC3C6X,IACHjoD,GAAY0tC,IAAa0C,EACtBhf,EACJgrB,GAAqBznC,CAAY,EAC7B,CAAE,eAAAuzC,EAAgB,OAAAC,EAAQ,MAAA9O,GAAO,MAAAC,IAAUloB,EAE3Cg3B,IAA6BlI,GAAA,YAAAA,EAAe,SAAU,EACtDmI,IAA+BX,GAAA,YAAAA,EAAiB,SAAU,EAC1DY,IAAiCX,GAAA,YAAAA,EAAmB,SAAU,EAC9DY,GAA8BX,GAAA,YAAAA,EAAgB,QAAS,EACvDY,KACJhqD,IAAAC,IAAAX,GAAA+pD,GAAA,YAAAA,EAAiB,aAAjB,YAAA/pD,GAA8B,KAA9B,YAAAW,GAAkC,YAAlC,YAAAD,GAA6C,SAAU,EACnDiqD,GAAmCX,EACrC1H,GAA0B0H,EAAqBzO,GAAOC,EAAK,EAAE,OAC7D,EAECloB,EAAW,WACdA,EAAW,SAAW,GAAGA,EAAW,KAAK,IAAIA,EAAW,KAAK,IAGzD,MAAAs3B,EAAgB19B,IAEQA,IAAW,KAC9B,GAEFA,GAAS,GAAY,MAAQA,GAAO,SAAS,EAEtDrtB,EAAAA,UAAU,IAAM,CACd,SAAS,MAAQ,uBACnB,EAAG,CAAE,CAAA,EAEL,MAAMgrD,EACJ,CAACT,GAAkBC,EAAO,SAASZ,GAAe,cAAc,EAC5DqB,GACJ,CAACV,GAAkBC,EAAO,SAASZ,GAAe,UAAU,EACxDsB,GACJ,CAACX,GAAkBC,EAAO,SAASZ,GAAe,aAAa,EAC3DuB,GACJ,CAACZ,GAAkBC,EAAO,SAASZ,GAAe,QAAQ,EACtDwB,GACJ,CAACb,GAAkBC,EAAO,SAASZ,GAAe,SAAS,EACvDyB,GACJ,CAACd,GAAkBC,EAAO,SAASZ,GAAe,aAAa,EAE3Dp7C,GAAwB,CAC5B,CACE,MAAO,iBACP,MAAOo7C,GAAe,eACtB,OAAQmB,EAAaN,EAAkB,EACvC,QAASO,CACX,EACA,CACE,MAAO,eACP,MAAOpB,GAAe,cACtB,OAAQmB,EAAaD,EAAwB,EAC7C,QAASI,EACX,EACA,CACE,MAAO,WACP,MAAOtB,GAAe,WACtB,OAAQmB,EAAaL,EAAoB,EACzC,QAASO,EACX,EACA,CACE,MAAO,gBACP,MAAOrB,GAAe,cACtB,OAAQmB,EAAaJ,EAAsB,EAC3C,QAASU,EACX,EACA,CACE,MAAO,UACP,MAAOzB,GAAe,SACtB,OAAQmB,EAAaH,CAAmB,EACxC,QAASO,EACX,EACA,CACE,MAAO,WACP,MAAOvB,GAAe,UACtB,OAAQmB,EAAaF,EAAoB,EACzC,QAASO,EACX,CAAA,EAGIE,GAAiCjiC,IAAsC,CAC7Dxd,EAAA,CACZ,WAAY,6BACZ,GAAGwd,EAAA,CACJ,CAAA,EAGGkiC,GAAmBz8C,IAAuB,CAChBw8C,GAAA,CAC5B,KAAM,YACN,aAAcx8C,GAAO,KAAA,CACtB,EACDmiC,EAAkBniC,GAAO,KAAK,EAC9Bg7C,EAAgB,EAAI,CAAA,EAGhB0B,GAA4Bv8B,IAAiB,CACnCpjB,EAAA,CACZ,WAAY,6BACZ,KAAM,GAAGojB,EAAI,SAAA,CACd,EACGA,KAAS6iB,GAA0B,MACfuY,EAAA,KAAK,KAAK,EAChCjY,EAAiB,EAAI,EACrBD,EAAqB,EAAI,IAEzBC,EAAiB,EAAK,EAElBgY,IACYv+C,EAAA,CACZ,WAAY,6BACZ,KAAM,kBACN,MAAOw9C,GACLe,EACA,KAAK,IAAI,CAAA,EACT,GAAG,SAAS,CAAA,CACf,EACDC,EAAsB,IAAI,GAE9B,EAEFrqD,EAAAA,UAAU,IAAM,QACV,GAAA,CAAC6pD,GAAgB,CAAC3Y,EAAmC,CACvD,MAAMua,GACJh4B,EAAW,QAAU,IACrBA,EAAW,UAAY,IACvBA,EAAW,WAAa,MACxBtzB,GAAAszB,EAAW,QAAX,YAAAtzB,GAAkB,KAAM2yC,IAAUA,KAAU,KACxC4Y,GACJj4B,EAAW,YAAc,IACzBA,EAAW,aAAe,IAC1BA,EAAW,YAAc,IACzBA,EAAW,aAAe,GACtBk4B,GAAkBl4B,EAAW,UAAY,GAG7C,GAAAg4B,KACCjB,EAAO,SAAW,GAAKA,EAAO,SAASZ,GAAe,QAAQ,GAC/D,CACA3Y,EAAkB2Y,GAAe,QAAQ,EACzC,MAAA,SAEA8B,KACClB,EAAO,SAAW,GAAKA,EAAO,SAASZ,GAAe,UAAU,GACjE,CACA3Y,EAAkB2Y,GAAe,UAAU,EAC3C,MAAA,SAEA+B,KACCnB,EAAO,SAAW,GAAKA,EAAO,SAASZ,GAAe,SAAS,GAChE,CACA3Y,EAAkB2Y,GAAe,SAAS,EAC1C,MACF,CACF,CACC,EAAA,CAACn2B,EAAYo2B,EAAc7Y,CAAc,CAAC,EAE7ChxC,EAAAA,UAAU,IAAM,CACVuqD,GACgBtZ,EAAAuZ,EAAO,CAAC,CAAmB,GAE9C,CAACxzC,EAAa,IAAI,QAAQ,CAAC,CAAC,EAE/B,MAAM40C,GAAW,IAGVvnD,EAAA,KAAAO,WAAA,CAAA,SAAA,CACComD,GAAA7mD,EAAA,IAACi/C,GAAA,CACC,iBAAAC,EACA,WAAA5vB,CAAA,CACF,EAEDw3B,IACC9mD,EAAA,IAACw/C,GAAA,CACC,mBAAAC,EACA,WAAAnwB,CAAA,CACF,EAED43B,IACClnD,EAAA,IAAC4gD,GAAA,CACC,qBAAAC,EACA,WAAAvxB,CAAA,CACF,EAEDy3B,IACC/mD,EAAA,IAAC2/C,GAAA,CACC,uBAAAC,EACA,WAAAtwB,CAAA,CACF,EAED03B,IACChnD,EAAA,IAACoiD,GAAA,CACC,kBAAAC,EACA,WAAA/yB,CAAA,CACF,EAED23B,IACCjnD,EAAA,IAACwiD,GAAA,CACC,mBAAAC,EACA,WAAAnzB,CAAA,CACF,CAEJ,CAAA,CAAA,EAIEo4B,GAAgB,IAAM,CAC1B,OAAQ7a,EAAgB,CACtB,KAAK4Y,GAAe,cAEhB,OAAAzlD,EAAA,IAAC8+C,GAAA,CACC,QAASkH,EACT,WAAA12B,EACA,eAAgB0pB,CAAA,CAAA,EAGtB,KAAKyM,GAAe,SAEhB,OAAAzlD,EAAA,IAAC29C,GAAA,CACC,QAASmI,EACT,cAAA9M,CAAA,CAAA,EAGN,KAAKyM,GAAe,WAEhB,OAAAzlD,EAAA,IAACi6C,GAAA,CACC,QAAS2L,EACT,WAAAt2B,EACA,cAAA0pB,CAAA,CAAA,EAGN,KAAKyM,GAAe,UAEhB,OAAAzlD,EAAA,IAACi8C,GAAA,CACC,QAAS8J,EACT,cAAA/M,CAAA,CAAA,EAGN,KAAKyM,GAAe,eAEhB,OAAAzlD,EAAA,IAAC+4C,GAAA,CACC,QAASqF,EACT,cAAApF,CAAA,CAAA,EAGN,KAAKyM,GAAe,cACX,OAAAzlD,EAAA,IAACilD,GAA2B,CAAA,QAASY,CAAmB,CAAA,EACjE,QACS,OAAA,IACX,CAAA,EAGI8B,GAAqBC,IAAuB,CAChD,MAAMC,GACJD,KAAYna,GAAU,MAAQ,aAAe,YAC/C0Z,GAA8B,CAAE,KAAM,eAAgB,aAAAU,EAAc,CAAA,EACpE/Z,EAAe8Z,EAAO,CAAA,EAGlBxZ,GAAqBC,GAAmB/e,EAAW,QAAQ,EAC3Dw4B,GAAiB,IACjB5uB,EAEAl5B,EAAA,IAAC4tC,GAAA,CACC,QAAAvjC,GACA,eAAAwiC,EACA,kBAAmBua,GACnB,WAAA93B,EACA,YAAAue,EACA,eAAgB8Z,GAChB,kBAAA5Z,EACA,qBAAsBga,GACtB,cAAAnd,EACA,iBAAkByc,GAClB,2BAAAnZ,EACA,8BAAAC,CAAA,CAAA,EAKJnuC,EAAA,IAAC4sC,GAAA,CACC,QAAAviC,GACA,eAAAwiC,EACA,kBAAmBua,GACnB,kCAAAra,EACA,0BACEA,EACIzB,EACA,MAAA,CAAA,EAMN0c,EAA+B,KAC5B,CACL,SAAU,SACV,OAAQ,EACR,SAAUja,EAAoB,IAAM,QACpC,SAAUA,EAAoB,IAAM,QACpC,MAAOA,EAAoB,IAAM,MACjC,WAAY,uBACZ,YAAaA,EAAoB,IAAM,OACvC,SAAU7U,EAAY,SAAW,WACjC,IAAKA,EAAY,GAAK,CAAA,GAIpB+uB,GAAwB,IAAM,CAClC,IAAIC,GAAS,CAAE,MAAO,OAAQ,SAAU,OAAQ,IAAK,IACrD,OAAIhvB,EACE6U,EACK,CACL,GAAGma,GACH,KAAM,EACN,UAAW,oBACX,WAAY,uBACZ,cAAe,OACf,OAAQ,EACR,QAAS,CAAA,EAIN,CACL,GAAGA,GACH,UAAW,gBACX,QAAS,EACT,SAAU,SACV,WAAY,uBACZ,cAAe,OACf,OAAQ,CAAA,EAGLA,EAAA,EAGHH,GAA2BI,IAA4B,CAE3DhB,GAA8B,CAAE,KAAM,kBAAmB,OAD1CgB,GAAiB,WAAa,QACoB,CAAA,EACjEna,EAAqBma,EAAc,CAAA,EAGrCtsD,OAAAA,EAAAA,UAAU,IAAM,CACV,GAAA+uC,GAAiB,CAAC1R,EACX,SAAA,KAAK,MAAM,SAAW,aAEtB,iBAAA,KAAK,MAAM,SAAW,GACxB,IAAM,CACF,SAAA,KAAK,MAAM,SAAW,EAAA,CAEnC,EACC,CAAC0R,EAAe1R,CAAS,CAAC,EAE7Br9B,EAAAA,UAAU,IAAM,EACV,CAACwvC,GAA2B,CAAC0C,GAAqBnD,IACpDqD,EAAiB,EAAK,CAEvB,EAAA,CAAC5C,EAAwB0C,EAAmBnD,CAAa,CAAC,EAG3D1qC,EAAA,KAACK,EAAA,CACC,GAAI,CACF,UAAW,IACX,SAAU,WACV,gBAAiBjD,EAAM,QAAQ,WAAW,MAC1C,cAAe,KACjB,EAEA,SAAA,CAAA4C,OAACwqC,GACC,CAAA,SAAA,CAAC1qC,EAAAA,IAAAwqC,GAAA,CAAuB,GAAIwd,EAA6B,EACvD,eAAC5d,GAA4B,CAAA,GAAI6d,GAC/B,EAAA,SAAAjoD,EAAA,IAACkrC,GAAA,CACC,wBAAyB5b,EACzB,WAAY,IAAMy4B,GAAwB,EAAI,EAC9C,uBACEhb,EACI1B,EACA,OAEN,0BACE0B,EACIzB,EACA,MAAA,GAGV,CACF,CAAA,EACAprC,EAAA,KAACuqC,GAAA,CACC,KAAI,GACJ,GAAI,GACJ,GAAI,CACF,GAAI,CAAE,GAAIsC,EAAoC,EAAI,KAAM,GAAI,CAAE,EAC9D,MAAO,wBACT,EAEA,SAAA,CAAA/sC,EAAA,IAAC8nD,GAAe,EAAA,EACf,CAAC5uB,GACAh5B,EAAA,KAACK,EAAA,CACC,cAAc,MACd,WAAW,SACX,GAAI,KACJ,GAAI,IACJ,GAAI,IAEJ,SAAA,CAAAP,EAAA,IAACC,EAAA,CACC,QAAQ,KACR,GAAI,CACF,WAAY,SACZ,YAAa,MACb,aAAc,GAChB,EACD,SAAA,cAAA,CAED,QACCA,EAAK,CAAA,QAAQ,KAAK,EAAG,EACnB,SACHmuC,GAAA,CAAA,CAAA,CACF,EAEDqZ,GAAS,EACTC,GAAc,CAAA,CAAA,CACjB,EACCnZ,GACCvuC,EAAA,IAAC6qC,GAAA,CACC,cAAAD,EACA,MAAAttC,EAEA,SAAA0C,EAAAA,IAAC2qC,IAAyB,cAAAC,EACxB,SAAA5qC,EAAA,IAACooD,GAAA,CACC,aAAc9B,GACd,OAAQ1b,EACR,8BAAAuD,EACA,eAAgBkZ,GAChB,SAAU,EAAA,CAAA,EAEd,CAAA,CACF,CAAA,EAEJ,EACClB,IACEnmD,EAAAA,IAAAqoD,GAAA,CAA+B,cAAAzd,EAC9B,SAAA5qC,EAAA,IAACooD,GAAA,CACC,aAAc9B,GACd,OAAQ1b,EACR,eAAgByc,GAChB,8BAAAlZ,CAAA,CAAA,EAEJ,EAED,CAACvD,GACAS,GACA8a,IACEnmD,EAAA,IAACsoD,GAAA,CACC,2BAAApa,EACA,8BAAAC,EACA,mBAAAC,GACA,iBAAkBiZ,EAAA,CACpB,CAAA,CAAA,CAAA,CAIV,CCpjBO,SAASkB,IAAiC,CAC/C,aAAQ/C,GAAsB,CAAA,CAAA,CAChC,CCFa,MAAAgD,GAAqB,CAChCnpC,EACAtgB,IACG,CACH,GAAI,CAACsgB,EAAW,OAEhB,MAAMopC,EAA+C,CACnD,iBAAkB,mBAClB,SAAU,gBAAA,EAGNC,EAAMrpC,EAAU,KAChBjW,EAAOiW,EAAU,KACjBhW,EAAQgW,EAAU,MAClBspC,EAAMtpC,EAAU,IAChBupC,EAAOvpC,EAAU,KAEvB,OAAIqpC,IAEOt/C,GAAQC,EACV,GAAGD,CAAI,KAAKC,CAAK,GACfs/C,GAAOC,EACT,mBAEAH,EACL1pD,CACF,EAEJ,EAEa8pD,GAA6B,CACxCC,EACAC,EACAC,IACG,CAEG,MAAA7D,IADO2D,EAAc,OAAOA,CAAW,EAAI,GAC3B,GAAKC,EAAU,EAC/B3D,EAAMD,EAAQ,EAAI4D,EACxB,MAAO,GAAG5D,CAAK,MAAMC,EAAM4D,EAAeA,EAAe5D,CAAG,EAC9D,ECvCa6D,GAAO7rD,EAAO,OAAQ,CACjC,kBAAoB8rD,GAASA,IAAS,MACxC,CAAC,EAEE,CAAC,CAAE,MAAA5rD,EAAO,KAAA+iB,MAAY,CACvB,SAAU,EACV,QAAS/iB,EAAM,QAAQ,EAAG,CAAC,EAC3B,SAAU,SACV,WAAYA,EAAM,YAAY,OAAO,SAAU,CAC7C,OAAQA,EAAM,YAAY,OAAO,MACjC,SAAUA,EAAM,YAAY,SAAS,aAAA,CACtC,EACD,YAAa,qBACb,GAAI,CAAC+iB,GAAQ,CACX,WAAY/iB,EAAM,YAAY,OAAO,SAAU,CAC7C,OAAQA,EAAM,YAAY,OAAO,QACjC,SAAUA,EAAM,YAAY,SAAS,cAAA,CACtC,EACD,YAAa,CACf,CACF,EAAE,EAEW6rD,GAAe/rD,EAAOmD,CAAK,EAAE,CAAC,CAAE,MAAAjD,MAAa,CACxD,SAAU,SACV,OAAQ,EACR,OAAQ,OACR,QAASA,EAAM,QAAQ,KAAM,EAAG,CAAC,EACjC,WAAYA,EAAM,QAAQ,WAAW,MACrC,OAAQ,gCACR,UACE,wGACJ,EAAE,EAEW8rD,GAAehsD,EAAOisD,EAAM,EAAE,KAAO,CAChD,MAAO,qBACP,WAAY,EACZ,UAAW,SACX,OAAQ,EAER,qBAAsB,CACpB,MAAO,qBACP,SAAU,UACZ,CACF,EAAE,EAEWC,GAAkBlsD,EAAOkF,EAAM,EAAE,CAAC,CAAE,MAAAhF,MAAa,CAC5D,OAAQ,IACR,SAAU,QACV,OAAQ,QACR,KAAM,MACN,UAAW,mBACX,gBAAiBA,EAAM,QAAQ,WAAW,MAE1C,UAAW,CACT,gBAAiBA,EAAM,QAAQ,WAAW,KAC5C,CACF,EAAE,ECbK,SAASisD,IAAuB,iBACrC,KAAM,CAAE,SAAArrD,EAAU,UAAAg7B,CAAU,EAAI/6B,GAAc,EACxC,CAAE,KAAMmmB,EAAQ,CAAA,GAAOE,GAAgB,EACvC,CAAC3R,EAAcsb,CAAe,EAAIC,GAAgB,EAClD,CAAC/N,EAAMmpC,CAAO,EAAInuD,WAAS69B,CAAS,EACpC,CAACuwB,EAAeC,CAAgB,EAAIruD,WAAS69B,CAAS,EACtD,CAACywB,EAAaC,CAAc,EAAIvuD,WAAS,EAAK,EAE9CwuD,EAAmBj+B,GAA+C,CACtE49B,EAAQ,CAACnpC,CAAI,EACbqpC,EAAiBrpC,CAAI,CAAA,EAGjBypC,EAEF,IAAM,CACR,OAAO,sBAAsB,IAAM,CAC1B,OAAA,SAAS,EAAG,CAAC,CAAA,CACrB,EACDN,EAAQ,CAACnpC,CAAI,EACbqpC,EAAiBrpC,CAAI,CAAA,EAGjB0pC,EAAWN,EAAgB,GAAK,GAChCO,EAAe,OAAOD,CAAQ,EAG9BE,EAAa,QACblrD,EAAa8T,EAAa,IAAI,aAAa,GAAK,mBAChDq3C,EAAWr3C,EAAa,IAAI,WAAW,GAAK,GAC5Cs3C,EAAWt3C,EAAa,IAAI,WAAW,GAAK,GAC5Cu3C,EAAWv3C,EAAa,IAAI,UAAU,GAAK,GAC3Cw3C,EAAYx3C,EAAa,IAAI,WAAW,GAAK,GAC7Cy3C,EAAkBz3C,EAAa,IAAI,mBAAmB,GAAK,GAC3D03C,EAAkB13C,EAAa,IAAI,mBAAmB,GAAK,GAC3D23C,EAAkB33C,EAAa,IAAI,kBAAkB,GAAK,GAC1D43C,EAAmB53C,EAAa,IAAI,mBAAmB,GAAK,GAC5D63C,EAAe73C,EAAa,IAAI,eAAe,GAAK,GACpDiY,EAAOjY,EAAa,IAAI,MAAM,GAAK,GACnC83C,EAAuB5rD,IAAe,mBACtC6rD,EAAqB7rD,IAAe,mBAE1C,IAAIuwB,EAAa,CACf,QAAS26B,EACT,cAAelrD,IAAe,UAAYirD,EAAe,IACzD,UAAWjrD,IAAe,mBAAqBirD,EAAe,IAC9D,eACEjrD,IAAe,WAAaA,IAAe,mBACvCirD,EACA,IACN,UAAAK,EACA,SAAAD,EACA,UAAWF,EACX,UAAWC,EACX,kBAAmBG,EACnB,kBAAmBC,EACnB,iBAAkBC,EAClB,kBAAmBC,EACnB,MAAO53C,EAAa,IAAI,OAAO,GAAK,GACpC,KAAMA,EAAa,IAAI,MAAM,GAAK,GAClC,IAAKA,EAAa,IAAI,KAAK,GAAK,GAChC,kBAAmBA,EAAa,IAAI,mBAAmB,GAAK,GAC5D,cAAeA,EAAa,IAAI,eAAe,GAAK,GACpD,KAAMA,EAAa,IAAI,MAAM,GAAK,GAClC,SAAUA,EAAa,IAAI,UAAU,GAAK,GAC1C,QAASA,EAAa,IAAI,SAAS,GAAK,GACxC,SAAUA,EAAa,IAAI,UAAU,GAAK,GAC1C,QAASA,EAAa,IAAI,SAAS,GAAK,GACxC,SAAUA,EAAa,IAAI,UAAU,GAAK,GAC1C,KAAMA,EAAa,IAAI,MAAM,GAAK,GAClC,aAAcA,EAAa,IAAI,cAAc,GAAK,GAClD,SAAUA,EAAa,IAAI,UAAU,GAAK,GAC1C,aAAcA,EAAa,IAAI,cAAc,GAAK,GAClD,YAAa9T,EACb,cAAe2rD,EACf,MAAO73C,EAAa,IAAI,OAAO,GAAK,GACpC,KAAMA,EAAa,IAAI,MAAM,GAAK,GAClC,KAAMA,EAAa,IAAI,MAAM,GAAK,EAAA,EAGhC,CAAE,KAAM0c,EAAuB,CAAA,EAAI,UAAA6vB,GACrC5vB,GAAkBF,CAAU,EAE9B,MAAMu7B,EAAsE,CAC1E,SAAU,WACV,iBAAkB,kBAClB,QAAS,SAAA,EAGLC,EAAqD,CACzD,SAAU,gBACV,iBAAkB,WAClB,QAAS,cAAA,EAGLC,EAAcz7B,EAAW,KAC3BA,EAAW,KACX,GAAGA,EAAW,IAAI,KAAKA,EAAW,KAAK,GAErC07B,EACJH,EAA6B9rD,GAA8B,UAAU,EACjEiqD,IACHhsD,IAAAN,IAAAC,IAAAX,GAAAuzB,EAAgD,iBAAhD,YAAAvzB,GAAgE,OAAhE,YAAAW,GACG,YADH,YAAAD,GACc,SADd,YAAAM,GACuBguD,KAAoC,EACxDC,EAAyB,KAAK,KAAKjC,EAAee,CAAQ,EAE1DmB,EAAsB,SAASrC,GACnCv5B,EAAW,KACXy6B,EACAf,CAAA,CACD,OAAOA,CAAY,GAEdl9B,GAAoBq/B,GAAoB,CACtC,MAAAC,GACJN,EAAuB/rD,GAA8B,UAAU,EAEjEovB,EAAiBtb,KACfA,GAAa,IAAI,OAAQs4C,CAAO,EAChCt4C,GAAa,IAAIu4C,GAAuBD,CAAO,EACxCt4C,GACR,CAAA,EAkBGw4C,GAfuB,CAC3BvhD,EACA/K,KACG,YACH,OAAIA,KAAe,WACV/C,GAAA8N,GAAA,YAAAA,EAAM,iBAAN,YAAA9N,GAAsB,QAG3B+C,KAAe,oBACVpC,EAAAmN,GAAA,YAAAA,EAAM,iBAAN,YAAAnN,EAAsB,iBAGxBD,EAAAoN,GAAA,YAAAA,EAAM,iBAAN,YAAApN,EAAsB,QAAA,GAI7B6yB,EACAxwB,CAAA,EAGIusD,EAAkB,IACfD,GAAA,YAAAA,EAAa,IAClB,CAACvhD,EAAoD1N,KAAkB,SACrE,MAAMmvD,GAAYzhD,EAEhB,OAAA9J,EAAA,IAACqB,EAAA,CACC,KAAI,GACJ,GAAI,GACJ,GAAI,EACJ,GAAIgf,EAAO,EAAI,EACf,GAAIA,EAAO,EAAI,EAGd,WAAK,iBACJrgB,EAAA,IAACwrD,GAAA,CACC,MAAAlnC,EACA,YAAavlB,EACb,WAAY+K,CAAA,CAAA,EAGd9J,EAAA,IAACyrD,GAAA,CACC,aAAY9uD,GAAAX,EAAAuvD,IAAA,YAAAA,GAAW,WAAX,YAAAvvD,EAAqB,iBAArB,YAAAW,EAAqC,MAAO,GAExD,SAAAqD,EAAA,IAACwrD,GAAA,CACC,MAAAlnC,EACA,YAAavlB,GAAc,WAC3B,WAAY+K,CAAA,CACd,CAAA,CACF,CAAA,EAjBG1N,EAAA,CAqBX,GAIEsvD,GAA0B,IAAM,CAC9B,MAAAC,EAAWtrC,EAAO,OAAS,MAC3BurC,GAAOvrC,EAAOkyB,GAAOsZ,GAE3B,OAEI3rD,EAAA,KAAAO,WAAA,CAAA,SAAA,CAACT,EAAAA,IAAA4rD,GAAA,CAAK,GAAKtuD,KAAW,CAAE,YAAaA,GAAM,QAAQ,EAAG,CAAA,EAAM,CAAA,EAC3DquD,CACH,CAAA,CAAA,CAAA,EAIJ,OAEIzrD,EAAA,KAAAO,WAAA,CAAA,SAAA,CAAAP,EAAA,KAACK,EAAA,CACC,GAAKjD,IAAW,CAAE,gBAAiBA,EAAM,QAAQ,WAAW,QAE3D,SAAA,CAAA47B,GAEGh5B,EAAA,KAAAO,WAAA,CAAA,SAAA,CAAAP,EAAA,KAACipD,GAAA,CACC,GAAI,CAAE,IAAK,MAAO,EAClB,eAAe,gBACf,UAAU,MAEV,SAAA,CAACjpD,EAAAA,KAAAK,EAAA,CAAM,UAAU,MACf,SAAA,CAAAP,MAAC8rD,IAAqB,WAAA/sD,EAAwB,EAC7C4rD,GACC3qD,EAAA,IAAC+rD,GAAA,CACC,WAAAhtD,EACA,SAAU,CAACqrD,EACX,UAAW,CAACC,EACZ,SAAAF,EACA,SAAAD,EACA,gBAAiB,CAACM,EAClB,iBAAkB,CAACC,EACnB,gBAAAH,EACA,gBAAAC,EACA,KAAAz/B,EACA,gBAAAqD,CAAA,CACF,CAAA,EAEJ,EACCjuB,EAAA,KAAAK,EAAA,CAAM,WAAW,SAAS,UAAU,MACnC,SAAA,CAAAP,EAAAA,IAACC,GAAK,SAAG,KAAA,CAAA,EACRD,EAAA,IAAAgsD,GAAA,CAAa,QAAS3rC,EAAM,SAAUwpC,EAAiB,CAAA,EAC1D,CAAA,CAAA,CACF,EACA3pD,EAAA,KAACK,EAAA,CACC,GAAI,CACF,SAAU8f,EAAO,WAAa,GAC9B,OAAQA,EAAO,sBAAwB,EACzC,EAEA,SAAA,CAACrgB,EAAAA,IAAAipD,GAAA,CAAK,KAAA5oC,EACH,SACC++B,GAAAp/C,EAAA,IAACO,EAAA,CACC,GAAKjD,IAAW,CACd,OAAQ,OACR,SAAU+iB,EAAO,SAAW,GAC5B,IAAK/iB,EAAM,QAAQ,GAAG,CAAA,GAGvB,SAAA0rD,EAAe,EAEZ9oD,EAAA,KAAAO,EAAA,SAAA,CAAA,SAAA,CAAAP,EAAA,KAACK,EAAM,CAAA,UAAU,MAAM,eAAe,gBACpC,SAAA,CAAAL,OAACK,EACC,CAAA,SAAA,CAACL,EAAAA,KAAAK,EAAA,CAAM,UAAU,MACf,SAAA,CAAAP,MAACC,EAAK,CAAA,WAAY,IAAK,QAAQ,KAAK,SAEpC,cAAA,EACAC,EAAA,KAACD,EAAA,CACC,QAAQ,KACR,GAAI,CAAE,QAAS,cAAe,EAC/B,SAAA,CAAA,IAEEuoD,GAAmBl5B,EAAYvwB,CAAU,CAAA,CAAA,CAC5C,CAAA,EACF,SACCwB,EAAM,CAAA,UAAU,MAAM,WAAW,SAAS,IAAK,EAC9C,SAAA,CAACP,EAAA,IAAAC,EAAA,CAAK,SAAS,OAAQ,SAAoBirD,EAAA,EAC1CN,GACEnqD,EAAAA,KAAAA,WAAA,CACC,SAAA,CAAAT,EAAA,IAACmb,GAAA,CACC,YAAY,WACZ,GAAI,CAAE,OAAQ,MAAO,CAAA,CACvB,EACAnb,EAAA,IAACisD,GAAA,CACC,gBAAiBvB,EACjB,gBAAAv8B,CAAA,CACF,CAAA,EACF,CAAA,EAEJ,CAAA,EACF,EACAnuB,EAAA,IAACksD,GAAA,CACC,YAAAvC,EACA,aAAcC,CAAA,CAChB,CAAA,EACF,EACCD,EACC3pD,EAAA,IAACmsD,GAAA,CACC,YAAaptD,EACb,YAAAssD,CAAA,CAAA,EAGFrrD,EAAA,IAACqB,EAAA,CACC,UAAS,GACT,WAAY,GACZ,cAAe,EACf,GAAIgf,EAAO,MAAQ,IAElB,SAAgBirC,EAAA,CAAA,CACnB,EAEFtrD,EAAA,IAACO,EAAA,CACC,QAAS,EACT,UAAW,MACX,GAAI,CAAE,eAAgB,QAAS,EAE9B,WAAyB,GACxBP,EAAA,IAACosB,GAAA,CACC,KACEkD,EAAW,KAAO,OAAOA,EAAW,IAAI,EAAI,EAE9C,MAAO27B,EACP,SAAU,CAAC5+B,EAAQN,KACjBD,GAAiB,OAAOC,EAAI,CAAC,EAE/B,QAAQ,WACR,MAAM,UACN,GAAKzuB,IAAW,CACd,uCAAwC,CACtC,MAAO,GAAGA,EAAM,QAAQ,QAAQ,YAAY,GAC5C,gBAAiB,GAAGA,EAAM,QAAQ,QAAQ,IAAI,EAChD,CAAA,EACF,CACF,CAAA,CAEJ,CAAA,CAAA,CACF,EAEA0C,EAAA,IAACosD,GAAA,CACC,gBAAiBrB,EACjB,WAAAhsD,CAAA,CACF,CAAA,CAAA,EAIR,EACCshB,GACErgB,EAAAA,IAAAopD,GAAA,CAAa,QAAQ,aAAa,OAAO,QAAQ,KAAA/oC,EAChD,SAAArgB,EAAA,IAACqsD,GAAA,CACC,OAAO,sBACP,UAAW,GACX,WAAY,GAEX,SAACC,GAEEpsD,EAAA,KAAAO,EAAA,SAAA,CAAA,SAAA,CAAAT,EAAA,IAACusD,GAAA,CACC,IAAAD,EACA,QAASjB,GAAe,CAAC,EACzB,WAAY,GACZ,WAAAtsD,CAAA,CACF,EACAiB,EAAA,IAACwsD,GAAA,CACC,IAAAF,EACA,gBAAAn+B,CAAA,CACF,EACAnuB,EAAA,IAACysD,GAAA,CACC,IAAAH,EACA,gBAAAn+B,CAAA,CACF,EACCnuB,EAAAA,IAAA0sD,GAAA,CAAiB,IAAAJ,EAAU,OAAQ,EAAM,CAAA,EACzCtsD,EAAAA,IAAA2sD,GAAA,CAAgB,IAAAL,EAAU,WAAY,EAAM,CAAA,CAAA,EAC/C,CAAA,CAAA,EAGN,CAAA,CAAA,CAEJ,CAAA,EACF,EAED,CAACpzB,GACAl5B,EAAAA,IAACO,EAAM,CAAA,GAAKjD,IAAW,CAAE,QAAS+iB,EAAO,IAAM/iB,EAAM,QAAQ,CAAC,CAAA,GAC3D,SACC+iB,EAAArgB,EAAA,IAACqsD,GAAA,CACC,OAAO,sBACP,UAAW,GACX,WAAY,GAEX,SAACC,GAEEpsD,EAAA,KAAAO,EAAA,SAAA,CAAA,SAAA,CAAAT,EAAA,IAACusD,GAAA,CACC,IAAAD,EACA,QAASjB,GAAe,CAAC,EACzB,WAAY,GACZ,WAAAtsD,CAAA,CACF,EACAiB,EAAAA,IAACwsD,GAAa,CAAA,IAAAF,EAAU,gBAAAn+B,CAAkC,CAAA,EAC1DnuB,EAAAA,IAACysD,GAAa,CAAA,IAAAH,EAAU,gBAAAn+B,CAAkC,CAAA,EACzDnuB,EAAAA,IAAA0sD,GAAA,CAAiB,IAAAJ,EAAU,OAAQ,EAAM,CAAA,EACzCtsD,EAAAA,IAAA2sD,GAAA,CAAgB,IAAAL,EAAU,WAAY,EAAM,CAAA,CAAA,EAC/C,CAAA,CAAA,EAIJlN,GACGp/C,EAAAA,IAAAO,EAAA,CAAM,GAAI8f,EAAO,CAAE,SAAU,QAAa,EAAA,CACxC,EAAA,SAAA2oC,EAAe,EAEZ9oD,EAAAA,KAAAO,EAAAA,SAAA,CAAA,SAAA,CAAAT,EAAA,IAACO,EAAA,CACC,GAAKjD,IAAW,CAAE,aAAcA,EAAM,QAAQ,GAAG,IAEjD,gBAACiD,EACC,CAAA,SAAA,CAACL,EAAAA,KAAAK,EAAA,CAAM,UAAU,MACf,SAAA,CAAAP,EAAAA,IAACC,GAAK,QAAQ,KAAK,SAAU,GAAI,WAAY,IAAK,SAElD,aAAA,CAAA,EACAC,OAACD,GAAK,QAAQ,KAAK,GAAI,CAAE,QAAS,cAAkB,EAAA,SAAA,CAAA,IAC3CuoD,GAAmBl5B,EAAYvwB,CAAU,CAAA,EAClD,CAAA,EACF,EACCiB,EAAA,IAAAC,EAAA,CAAK,SAAS,OAAQ,SAAoBirD,EAAA,CAAA,EAC7C,CAAA,CACF,QACC7pD,EAAK,CAAA,UAAS,GAAC,QAAS,EACtB,aACH,EACC4pD,EAAyB,GACxBjrD,EAAA,IAACO,EAAA,CACC,QAAS,EACT,UAAW,MACX,GAAI,CAAE,eAAgB,QAAS,EAE/B,SAAAP,EAAA,IAACosB,GAAA,CACC,KAAMkD,EAAW,KAAO,OAAOA,EAAW,IAAI,EAAI,EAClD,MAAO27B,EACP,SAAU,CAAC5+B,EAAQN,KACjBD,GAAiB,OAAOC,EAAI,CAAC,EAE/B,QAAQ,WACR,MAAM,UACN,UAAU,aACV,GAAKzuB,IAAW,CACd,uCAAwC,CACtC,MAAO,GAAGA,EAAM,QAAQ,QAAQ,YAAY,GAC5C,gBAAiB,GAAGA,EAAM,QAAQ,QAAQ,IAAI,EAChD,CAAA,EACF,CACF,CAAA,CACF,CAAA,CAAA,CAEJ,EAEA0C,EAAA,IAACosD,GAAA,CACC,gBAAiBrB,EACjB,WAAAhsD,CAAA,GAGN,CAGN,CAAA,CAAA,CAAA,CAEJ,EACC,CAACm6B,GACCl5B,EAAAA,IAAAspD,GAAA,CAAgB,QAASQ,EAAsB,QAAQ,WACrD,SAAA4B,GACH,CAAA,CAAA,CAEJ,CAAA,CAAA,CAEJ,CC9eO,SAASkB,IAAe,CAC7B,OACG5sD,EAAA,IAAA,MAAA,CACC,SAACA,EAAA,IAAA6sD,GAAA,CAAA,CAAsB,CACzB,CAAA,CAEJ,CCDO,SAASC,IAAW,CACzB,MAAMrxD,EAAWC,KACX,CACJ,QAAS,CAAE,gBAAAyuC,CAAgB,GACzB3iC,GAAW,EAEf,SAASulD,GAAgB,CACvBtxD,EAAS,YAAY,CACvB,CAEA,OAAK0uC,GACHH,GAAU,8BAA8B,QAIvChoC,GACC,CAAA,SAAAhC,EAAA,IAACqB,EAAK,CAAA,UAAS,GAAC,QAAS,EAAG,UAAW,SAAU,UAAW,EAC1D,SAAAnB,OAACmB,GAAK,KAAI,GAAC,GAAI,GACb,SAAA,CAAArB,EAAA,IAACgtD,GAAA,CACC,IAAKC,GACL,IAAI,MACJ,GAAI,CAAE,MAAO,GAAI,OAAQ,GAAI,OAAQ,MAAO,EAC5C,QAAQ,QAAA,CACV,EACAjtD,EAAAA,IAACC,EAAK,CAAA,QAAQ,KAAK,MAAO,UAAW,SAAU,GAAI,UAAW,IAAK,SAEnE,KAAA,CAAA,EACAD,EAAAA,IAACC,GAAK,QAAQ,KAAK,SAAU,GAAI,UAAW,IAAK,SAEjD,2BAAA,CAAA,EACAD,EAAAA,IAACC,EAAK,CAAA,MAAO,CAAE,GAAI,OAAQ,GAAI,KAAM,EAAG,OAAQ,OAAQ,SAGxD,4EAAA,CAAA,EACAD,EAAA,IAACsC,GAAA,CACC,QAAQ,YACR,MAAM,UACN,GAAI,CAAE,UAAW,GAAI,EACrB,QAASyqD,EACV,SAAA,iBAAA,CAED,CAAA,EACF,EACF,CACF,CAAA,CAEJ,CC5CO,SAASG,IAAY,SAC1B,MAAMzxD,EAAWC,KACXqC,EAAWC,KACX,CACJ,KAAM,CAAE,aAAAmvD,CAAa,CAAA,EACnBjyD,EAAAA,WAAW0vB,EAAY,EACrB,CAAE,gBAAAuf,CAAA,EAAoB3iC,GAAA,EAAa,QAEzC,SAASulD,GAAgB,CACvBtxD,EAAS,YAAY,CACvB,CAEM,MAAAikC,EAAYyK,EAAkBnoC,GAAmBX,EACjD+rD,EAAmBjjB,EACrB4iB,EACA,IAAM/iB,GAAU,8BAA8B,EAC5CxtC,EAAa2tC,EAAkB,YAAc,QAC7CkjB,IAAkB1wD,GAAAX,EAAA+B,GAAA,YAAAA,EAAU,QAAV,YAAA/B,EAAiB,OAAjB,YAAAW,EAAuB,SAAU,GAEzD,aACG+iC,EACC,CAAA,SAAA1/B,EAAA,IAACqB,EAAK,CAAA,UAAS,GAAC,QAAS,EAAG,UAAW,SAAU,UAAW,EAC1D,SAAAnB,OAACmB,GAAK,KAAI,GAAC,GAAI,GACb,SAAA,CAAArB,EAAA,IAACgtD,GAAA,CACC,IAAKM,GACL,IAAI,QACJ,GAAI,CAAE,MAAO,GAAI,OAAQ,GAAI,OAAQ,MAAO,EAC5C,QAAQ,QAAA,CACV,EACAptD,EAAAA,KAACD,GAAK,QAAQ,KAAK,MAAO,UAAW,SAAU,GAAI,UAAW,IAC3D,SAAA,CAAAotD,EAAgB,UAAA,EACnB,EACArtD,EAAAA,IAACC,GAAK,QAAQ,KAAK,SAAU,GAAI,UAAW,IAAK,SAEjD,kCAAA,CAAA,EACAC,EAAAA,KAACD,EAAK,CAAA,OAAQ,OAAQ,SAAA,CAAA,qDAC+B,IACnDD,EAAA,IAACK,GAAA,CACC,KAAM,UAAU8sD,CAAY,YAAYE,CAAe,gBAEtD,SAAAF,CAAA,CACH,EAAQ,IAAI,wDAEXE,EAAkB,GAAK,IAAI,IAAEA,EAAgB,SAAA,EAChD,EACAntD,EAAA,KAACoC,GAAA,CACC,QAAQ,YACR,MAAM,UACN,GAAI,CAAE,UAAW,GAAI,EACrB,QAAS8qD,EACV,SAAA,CAAA,SACQ5wD,CAAA,CAAA,CACT,CAAA,EACF,EACF,CACF,CAAA,CAEJ,CCjDO,MAAM+wD,GAET,CACF,GAAI,CACF,MAAO,QACP,YAAa,8CACf,EACA,GAAI,CAAE,MAAO,UAAW,YAAa,2BAA4B,EACjE,IAAK,CAAE,MAAO,UAAW,YAAa,2BAA4B,EAClE,IAAK,CAAE,MAAO,WAAY,YAAa,4BAA6B,EACpE,IAAK,CAAE,MAAO,WAAY,YAAa,6BAA8B,EACrE,IAAK,CAAE,MAAO,UAAW,YAAa,8BAA+B,EACrE,IAAK,CAAE,MAAO,UAAW,YAAa,8BAA+B,EACrE,IAAK,CACH,MAAO,eACP,YAAa,sCACf,EACA,IAAK,CACH,MAAO,eACP,YAAa,sCACf,EACA,IAAM,CACJ,MAAO,eACP,YAAa,sCACf,EACA,KAAM,CAAE,MAAO,UAAW,YAAa,kCAAmC,EAC1E,IAAM,CAAE,MAAO,UAAW,YAAa,kCAAmC,EAC1E,KAAM,CACJ,MAAO,UACP,YAAa,mCACb,QAAS,EACX,EACA,IAAM,CACJ,MAAO,YACP,YAAa,kCACf,EACA,IAAM,CACJ,MAAO,YACP,YAAa,kCACf,EACA,KAAM,CACJ,MAAO,YACP,YAAa,kCACf,EACA,KAAM,CACJ,MAAO,YACP,YAAa,kCACf,EACA,IAAO,CACL,MAAO,YACP,YAAa,kCACf,EACA,KAAO,CACL,MAAO,YACP,YAAa,kCACf,EACA,IAAO,CACL,MAAO,YACP,YAAa,kCACf,CACF,EAEMC,GAAuD,CAC3D,GAAI,CAAE,MAAO,OAAQ,EACrB,IAAK,CAAE,MAAO,WAAY,EAC1B,IAAK,CAAE,MAAO,WAAY,EAC1B,IAAK,CAAE,MAAO,WAAY,EAC1B,IAAM,CAAE,MAAO,YAAa,CAC9B,EAEaC,GAGT,CACF,MAAO,YACP,YAAa,kCACf,EAEMC,GAAuB,GAEb,SAAAC,GACdC,EACAC,EAAwB,GACxB,CACA,OAAIA,EACKJ,GAIPF,GAAWK,CAAS,GACpBJ,GAAeI,CAAS,GAAK,CAAE,MAAO,aAE1C,CAGO,SAASE,GAAkBC,EAI/B,CACD,GAAIA,EAAK,QAAU,GAEnB,OAAOC,GAAcD,EAAK,OAAQA,EAAK,cAAeA,EAAK,KAAK,CAClE,CAGgB,SAAAE,GAAYF,EAAwBG,EAA0B,CAC5E,GAAI,EAAAA,EAAY,QAAU,IAAMH,EAAK,uBAAyB,IAEvD,OAAAI,GACLD,EAAY,OACZA,EAAY,cACZA,EAAY,MACZH,EAAK,OAAS,IACdA,EAAK,eACLA,EAAK,oBAAA,CAET,CAEgB,SAAAK,GACdC,EACAH,EACA,CACA,MAAO,CAACI,GAAQD,EAAWH,EAAa,GAAO,EAAI,CAAC,CACtD,CAEgB,SAAAK,GACdC,EACAN,EACAO,EACA,CACI,IAAAC,EAEJ,OAAID,EACFC,EAAgBF,EAAW,OACxBT,GAASA,EAAK,uBAAyBG,EAAY,KAAA,EAGtDQ,EAAgBF,EAAW,OACxBT,GAASA,EAAK,qBAAuBG,EAAY,KAAA,EAI/CQ,EACJ,IAAKX,GAASO,GAAQP,EAAMG,EAAaO,CAAmB,CAAC,EAC7D,SACL,CAEO,SAASH,GACdP,EACAG,EACAO,EACAZ,EACA,CACO,MAAA,CACL,IAAKE,EAAK,WACV,GAAGJ,GAA2BI,EAAK,qBAAsBF,CAAY,EACrE,OAAQE,EAAK,OAAS,IACtB,MAAOA,EAAK,qBACZ,cAAeA,EAAK,eACpB,kBAAmBA,EAAK,oBACxB,cAAeD,GAAkB,CAC/B,OAAQC,EAAK,OAAS,IACtB,cAAeA,EAAK,eACpB,MAAOA,EAAK,oBAAA,CACb,EACD,QAASE,GAAYF,EAAMG,CAAW,EACtC,YAAaO,EACT,GACAf,KAAyBK,EAAK,oBAAA,CAEtC,CAEO,SAASY,GAAoBC,EAAuB,CACzD,OAAQA,EAAe,CACrB,IAAK,GACI,MAAA,UACT,IAAK,GACI,MAAA,iBACT,IAAK,IACI,MAAA,WACT,QACS,MAAA,KACX,CACF,CClKA,MAAMC,GAAqBzxD,EAAOiE,CAAI,EAAE,CAAC,CAAE,MAAA/D,MAAa,CACtD,eAAgB,SAChB,gBAAiBA,EAAM,QAAQ,WAAW,MAC1C,QAASA,EAAM,QAAQ,IAAK,CAAC,EAC7B,UAAW,4BACX,YAAa,EACb,aAAc,CAChB,EAAE,EAeWwxD,GAAkB,CAAC,CAAE,iBAAApxD,KAA6C,iBACvE,MAAAqxD,EAAwBjnD,GAAe,WAAW,EAClD,CAAE,QAASy/B,CAAe,EAAI3rC,GAAW,EAAI,EAC7C,CACJ,cAAAozD,EACA,QAAAC,EACA,cAAAtnC,EACA,wBAAAunC,EACA,WAAYC,EACZ,YAAaC,EACb,cAAAR,GACE3wD,GAAmB,EACjBxC,EAAWC,KAEX,CAAC6oB,EAAW8qC,CAAY,EAAIh0D,WAAS,EAAI,EACzC,CAACi0D,EAAOC,CAAQ,EAAIl0D,EAAA,SAAiB,CAAE,CAAA,EACvC,CAACm0D,EAAcC,CAAe,EAAIp0D,WAAsB,IAAI,EAE5D,CAACq0D,EAAcC,CAAe,EAAIt0D,WAAS,CAAU,EACrDu0D,EAAWvmD,IAAiBqmD,IAAiBrmD,GAE7CwmD,EAAe3wC,GAAA,EAAiB,IAAI,SAAS,EAC7CsvC,EAAasB,KACbC,EAAoBF,EACtBG,GAAqBH,CAAY,EACjC,KACEpmD,EAAQwlD,EAAU,QAAUtB,GAA2ByB,CAAK,EAAE,MAC9DlB,EAA2Bv8C,EAAAA,QAAQ,KAChC,CACL,MAAAlI,EACA,OAAA0lD,EACA,cAAAP,EACA,MAAAQ,EACA,cAAetB,GAAkB,CAAE,OAAAqB,EAAQ,cAAAP,EAAe,MAAAQ,EAAO,CAAA,GAElE,CAACD,EAAQC,EAAOR,EAAenlD,CAAK,CAAC,EAClCwmD,GACJtzD,IAAAX,GAAA+zD,GAAA,YAAAA,EAAmB,OAAnB,YAAA/zD,GAAyB,eAAzB,YAAAW,GAAuC,sBACnCuzD,GAAelzD,IAAAN,GAAA8xD,GAAA,YAAAA,EAAY,OAAZ,YAAA9xD,GAAkB,eAAlB,YAAAM,GAAgC,gBAErDnB,EAAAA,UAAU,IAAM,CACd,GAAI,CAACmzD,EAAe,OAEhB,IAAAmB,GACAF,EACcE,GAAA/B,GAAc6B,EAAqB/B,CAAW,EACrDgC,IACOC,GAAA5B,GACd2B,EACAhC,EACAa,CAAA,GAGAoB,IACFZ,EAASY,EAAa,EAElB,MAAAC,GAAQ,WAAW,IAAM,CAC7Bf,EAAa,EAAK,GACjB,GAAG,EAEC,MAAA,IAAM,aAAae,EAAK,GAC9B,CAACpB,EAAed,EAAagC,EAAcD,CAAmB,CAAC,EAElE,MAAMI,EAAmB,IAAM,CAC7BxyD,GACE,qEACA,CAAE,QAAS,OAAQ,CAAA,CACrB,EAGIyyD,EAAgBvC,IAAe,CACnC0B,EAAgB1B,EAAI,EACAwC,EAAA5B,GAAoBZ,GAAK,aAAa,CAAC,EAC5CyC,EAAA,IAAIzC,GAAK,MAAM,EAAE,EAChC0C,EAAgB,EAAI,CAAA,EAKhBC,EAAmBC,KACnB,CAACC,EAAcH,CAAe,EAAIp1D,WAAS,EAAK,EAChD,CAACw1D,EAAmBC,CAAoB,EAAIz1D,WAAkB,EAAK,EACnE,CAAC01D,EAAkBR,CAAmB,EAAIl1D,WAAS,SAAS,EAC5D,CAAC21D,EAAaR,CAAc,EAAIn1D,WAAS,EAAE,EAE3C41D,EAAa,IAAMR,EAAgB,EAAK,EACxCS,GAAc,IAAM,CACxBJ,EAAqB,EAAI,EACzBJ,EAAiB,OAAO,OAAW,CACjC,UAAW,IAAMS,EAAY,EAC7B,QAAS,IAAMd,EAAiB,EAChC,UAAW,IAAMY,EAAW,CAAA,CAC7B,CAAA,EAKGG,EAAqBC,KACrBC,EAAmBC,KACnBC,EAAqBC,KACrBC,GAAwBC,KACxB,CAACC,GAAeC,EAAgB,EAAIx2D,EAAA,SAAmB,CAAE,CAAA,EACzD,CAACy2D,GAAkBC,EAAmB,EAAI12D,WAAS,EAAK,EAExD81D,EAAc,SAAY,CACxB,MAAAa,GAA8B,MAAMZ,EAAmB,UACvDa,GAAgBC,GACpBF,IAAA,YAAAA,GAA6B,IAAA,EAG3B,GAAA,CAACxC,GAAgB,CAACyC,GAAe,OAErCtC,EAAgB,CAAuB,EAEvC,MAAM5B,GAAO,CAAE,WAAYyB,EAAa,GAAI,EACtC2C,GAAoB,CACxB,UAAW,IAAM,CACA5qB,IACfooB,EAAgB,CAAa,CAC/B,EACA,QAAQhqD,GAAc,CACpB,IAAIysD,EAAQzsD,GAAM,OACQysD,GAAA,YAAAA,EAAO,KAAK,SAEZ,oCAChBA,EAAA,CACN,6EAAA,GAIJP,GAAiBO,CAAK,EACtBzC,EAAgB,CAAW,CAC7B,CAAA,EASI0C,GAAuC,CAC3C,OAAQb,EACR,UAAWE,GACX,KAAMJ,CAAA,EAGFgB,GACJC,GAAeN,EAAa,EAExBO,GAAmBH,GAAkBC,EAAW,GAAKhB,EAErDmB,GAAiB,CACrB,KAAA1E,GACA,GAAKuE,KAAgB,UAAY,CAC/B,SAAUL,GAAc,EAC1B,EACA,GAAKK,KAAgB,QAAU,CAC7B,OAAQL,GAAc,EACxB,EAGA,GAAKK,KAAgB,aAAe,CAClC,YAAaL,GAAc,EAC7B,EACA,kBAAmB,wBAAA,EAErBnB,EAAqB,EAAK,EACT0B,GAAA,OAAOC,GAAgBN,EAAY,CAAA,EAGhDO,GAAWpD,EAAM,OAAS,EAE1B7lC,GAAyB,IAAM,CACnCkmC,EAAgB,CAAgB,CAAA,EAG5BgD,EAA8B,IAAM,CACpCb,IACFC,GAAoB,EAAK,EACbZ,KAEZxB,EAAgB,CAAU,CAC5B,EAGIiD,EAAmC,IAAM,CACzCd,IACFC,GAAoB,EAAK,EACzBpC,EAAgB,CAAW,GAE3BA,EAAgB,CAAU,CAC5B,EAGIkD,GAA6B,IAAM,CACvClD,EAAgB,CAAU,CAAA,EAI1B,OAAAzvD,EAAA,KAAC2uD,GAAmB,CAAA,UAAW6D,GAC5B,SAAA,CAAAnuC,SAAcuuC,GAAiB,CAAA,GAAI,CAAE,GAAI,IAAM,EAE/C,CAACvuC,GAEErkB,EAAAA,KAAAO,EAAA,SAAA,CAAA,SAAA,CAAAT,EAAA,IAAC+yD,GAAA,CACC,YAAa,CACX,MAAO7E,EAAY,MACnB,MAAOvmC,EAAgBumC,EAAY,MAAQ,YAC3C,cAAeA,EAAY,cAC3B,SAAUgB,CACZ,EACA,MAAAI,EACA,aAAAgB,EACA,YAAa5yD,CAAA,CACf,EACAsC,EAAA,IAACgzD,GAAA,CACC,KAAMpC,EACN,aAAc,GACd,iBAAAG,EACA,YAAAC,EACA,IAAK,CACH,MACExB,GAAA,YAAAA,EAAc,SAAU,QACpB,uBACA,qBACN,UAAW,GACX,kBAAAqB,CACF,EACA,kBAAmB,GACnB,UAAWK,GACX,sBAAuB,IAAMvB,EAAgB,CAAmB,EAChE,QAASsB,CAAA,CACX,EAEAjxD,EAAA,IAACwqB,GAAA,CACC,KAAMolC,EAAQ,CAAmB,EACjC,IAAI,0BACJ,mBAAoBnmC,GACpB,wBAAyBkpC,EACzB,QAASC,CAAA,CACX,EAEA5yD,EAAA,IAACyqB,GAAA,CACC,OAAQmlC,EAAQ,CAAgB,EAChC,cAAeiD,EAAA,CACjB,EAEC7yD,EAAA,IAAAizD,GAAA,CAAuB,KAAMrD,EAAQ,CAA0B,CAAA,CAAA,EAEhE5vD,EAAA,IAACkzD,GAAA,CACC,KAAMtD,EAAQ,CAAa,EAC3B,SAAU,IAAM,CACdD,EAAgB,CAAU,EAE1Bl0D,EAAS,YAAY,CACvB,CAAA,CACF,EAEAuE,EAAA,IAACmzD,GAAA,CACC,KAAMvD,EAAQ,CAAW,EACzB,OAAQgC,GACR,WAAY,IAAMT,EAAY,EAC9B,aAAc,IAAM,CAClBY,GAAoB,EAAI,EACxBpC,EAAgB,CAAmB,CACrC,EACA,QAAS,IAAM,CACbA,EAAgB,CAAU,CAC5B,CAAA,CACF,CAAA,EACF,CAEJ,CAAA,CAAA,CAEJ,EC7TMyD,GAAY,0BAELC,GAAkC,IAAM,SACnD,MAAM53D,EAAWC,KACXqC,EAAWC,KACX,EAAGmoC,EAAcC,CAAO,EAAIE,GAAW,CAC3C,qBAAsB,CAAE,QAAS,CAAE,eAAgB,GAAO,CAAA,CAC3D,EACKgtB,EAAmB,YACnBhgD,GAAO3W,GAAAX,EAAA+B,EAAS,QAAT,YAAA/B,EAAgB,cAAhB,YAAAW,EAA6B,KACpCorC,EAAoBl7B,GAAY,CAAE,WAAY0G,EAAc,CAAA,EAElE1X,OAAAA,EAAAA,UAAU,IAAM,QACTG,EAAA+B,GAAA,YAAAA,EAAU,QAAV,MAAA/B,EAAiB,aAEpBP,EAAS,YAAY,CACvB,EACC,CAACA,EAAUsC,CAAQ,CAAC,EAEtB,OAAwB,8BAAgC,MAAOs9B,GAAa,CAC3E/nB,EAAK,oBAAoB,EAAI+nB,EAC7B,MAAMvgB,GACH,MAAMitB,EAAkB,YAAYz0B,CAAI,GACzC,OAAO,UACHigD,EACJ3zC,GACEtM,EAAK,WACP,EACF7X,EAAS,WAAW83D,CAAW,cAAcz4C,CAAS,EAAE,CAAA,EAG1Djf,EAAAA,UAAU,IAAM,OACVsqC,KACDnqC,EAAA,OAAwB,WAAxB,MAAAA,EAAkC,OAAOo3D,IAC5C,EACC,CAACjtB,CAAY,CAAC,QAGdnkC,GACC,CAAA,SAAA9B,EAAA,KAACK,EAAA,CACC,UAAW,IACX,QAAS,EACT,WAAY,SACZ,UAAW,SACX,QAAS,EAET,SAAA,CAACL,EAAAA,KAAAK,EAAA,CAAM,WAAY,SACjB,SAAA,CAAAP,MAACC,EAAK,CAAA,QAAQ,KAAK,SAAU,GAAI,SAEjC,YAAA,QACCA,EAAK,CAAA,QAAQ,KAAK,SAAU,GAAI,SAEjC,oCAAA,CAAA,EACF,EACAD,EAAAA,IAACC,EAAK,CAAA,MAAO,CAAE,GAAI,OAAQ,GAAI,KAAM,EAAG,OAAQ,OAAQ,SAGxD,mGAAA,CAAA,EACAD,EAAA,IAAC,MAAA,CACC,UAAWszD,EACX,eAAcltB,EACd,GAAIgtB,GACJ,gBAAc,+BAAA,CAChB,EACC,CAACjtB,GACAnmC,EAAAA,IAAC8yD,GAAiB,CAAA,GAAI,CAAE,MAAO,eAAgB,EAAG,CAAA,EAAK,CAAA,CAAA,CAG7D,CAAA,CAAA,CAEJ,EC9EMU,GAA8B,kCAG9BC,GAAc,CAClB,MAAO,OACP,OAAQ,OACR,mBAAoB,CAClB,SAAU,CAAC,OAAQ,OAAQ,OAAQ,QAAQ,EAC3C,MAAO,CAAC,OAAQ,OAAQ,OAAQ,QAAQ,EACxC,OAAQ,MACV,CACF,EAEaC,GAAmB,IAAM,CAC9B,KAAA,CACJ,KAAM,CAAE,UAAAj6C,CAAU,GAChBlN,GAAuB,EACrB,CAAE,KAAAzC,EAAM,UAAAya,CAAU,EAAIovC,GAAW,EACjC,CAACC,EAAcC,CAAe,EAAIx4D,WAA0B,EAAE,EAC9Dy4D,EAAoBF,IAAiB,GACrCG,EAAsB,CAC1B,QAAS,GACT,KAAM,GACN,MAAO,GACP,SAAU,EAAA,EAGZ,OAAIxvC,EACKvkB,EAAA,IAACC,GAAK,SAAkB,oBAAA,CAAA,EAK7BC,EAAA,KAAAO,WAAA,CAAA,SAAA,CAACP,EAAAA,KAAAK,EAAA,CAAM,QAAS,EACd,SAAA,CAAAP,EAAAA,IAACC,GAAK,QAAQ,KAAK,WAAW,OAAO,SAAS,UAAU,SAExD,kBAAA,CAAA,EACAC,EAAAA,KAACD,EAAK,CAAA,SAAS,OAAO,SAAA,CAAA,QACdwZ,EAAU,+JAAA,EAGlB,GACC3P,GAAA,YAAAA,EAAM,UACL9J,EAAA,IAACg0D,GAAA,CACC,QAASlqD,EAAK,QACd,aAAA8pD,EACA,kBAAAE,EACA,oBAAqBD,EACrB,oBAAAE,CAAA,CACF,CAAA,EAEJ,EAEA/zD,EAAA,IAAC0gB,GAAA,CACC,UAAS,GACT,aAAY,GACZ,GAAI+yC,GACJ,KAAMK,EACN,QAAS,IAAMD,EAAgB,EAAE,EAEhC,SACCC,GAAA9zD,EAAA,IAACi0D,GAAA,CACC,OAAQL,EACR,uBAAwB,GACxB,YAAcA,EAAwB,KACtC,oBAAqB,IAAMC,EAAgB,EAAE,EAC7C,oBAAAE,EACA,aACGH,EAAwB,YAAcJ,EAAA,CAE3C,CAAA,CAEJ,CACF,CAAA,CAAA,CAEJ,ECjFaU,GAAqB,IAG5Bh0D,EAAA,KAAAO,WAAA,CAAA,SAAA,CAAAT,MAACO,EAAM,CAAA,IAAK,IACV,SAAAP,MAACwyB,IAAc,CAAA,EACjB,EACCxyB,EAAA,IAAA2yB,GAAA,CACC,SAAC3yB,EAAA,IAAA4yB,GAAA,CAAmB,CAAA,EACtB,CACF,CAAA,CAAA,ECHEd,GAAuB10B,EAAOo0B,EAAc,EAAE,CAAC,CAAE,MAAAl0B,MAAa,CAClE,MAAOA,EAAM,QAAQ,KAAK,MAC1B,aAAc,QACd,aAAcA,EAAM,QAAQ,GAAG,CACjC,EAAE,EAEW62D,GAAkB,IAAM,CACnC,KAAM,CAACppD,EAAWsjB,CAAY,EAAIhzB,WAAS,CAAC,EAEtC0e,EAAkB,CACtB,CACE,MAAO,sBACP,cAAUm6C,GAAmB,EAAA,CAC/B,EACA,CACE,MAAO,mBACP,cAAUR,GAAiB,EAAA,CAC7B,CAAA,EAIA,OAAA1zD,EAAAA,IAACO,EAAM,CAAA,UAAU,SACf,SAAAP,EAAA,IAAC8xB,GAAA,CACC,kBAAmB/mB,EACnB,aAAeqpD,GAAqB/lC,EAAa+lC,CAAQ,EACzD,IAAKvxD,GACL,KAAAkX,CAAA,CAEJ,CAAA,CAAA,CAEJ,ECpCO,SAASs6C,IAAc,CACtB,MAAAriC,EAAoBlqB,GAAe,UAAU,EAEnDjM,OAAAA,EAAAA,UAAU,IAAM,CACd,SAAS,MAAQ,6BACnB,EAAG,CAAE,CAAA,oBAEK,SAAoBm2B,EAAAhyB,EAAA,IAACm0D,KAAgB,EAAKn0D,EAAA,IAACs0D,IAAU,CAAA,CAAG,CAAA,CACpE,CCSA,MAAMC,GAAkBn3D,EAAOmD,CAAK,EAAE,CAAC,CAAE,MAAAjD,MAAa,CACpD,SAAU,QACV,IAAK,GACL,MAAO,OACP,OAAQ,EAER,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,SAAU,SACV,IAAKA,EAAM,QAAQ,EAAE,EACrB,OAAQ,EACR,aAAcA,EAAM,QAAQ,CAAC,EAC7B,WAAYA,EAAM,QAAQ,CAAC,CAC7B,CACF,EAAE,EAEK,SAASk3D,IAAwB,CAChC,KAAA,CAAC3hD,CAAY,EAAIub,KACjB3yB,EAAWC,KAEjBG,EAAAA,UAAU,IAAM,CACd,SAAS,MAAQ,uBACnB,EAAG,CAAE,CAAA,EAEC,MAAAyzB,EAAa3d,EAAAA,QAAQ,KAClB,CACL,KAAMkB,EAAa,IAAI,MAAM,GAAK,GAClC,IAAKA,EAAa,IAAI,KAAK,EAC3B,IAAKA,EAAa,IAAI,KAAK,EAC3B,SAAUA,EAAa,IAAI,UAAU,CAAA,GAEtC,CAACA,CAAY,CAAC,EAEX,CAAE,KAAA/I,EAAM,UAAAs1C,CAAU,EAAIM,GAAkB,CAC5C,qBAAsBpwB,CAAA,CACvB,EAEKoqB,EAAcC,GAAqB7vC,EAAMwlB,CAAU,EAEnD,CAAE,cAAA5nB,CAAA,EAAkBxM,EAAA,WAAWC,EAAS,EAExC,CAAE,SAAAywC,GAAaztC,KAEf,CAACs2D,EAAaC,CAAc,EAAIr5D,WAAS,EAAI,EAE7Cs5D,EAAuB,IAAM,CAClBD,EAACE,GAAc,CAACA,CAAS,CAAA,EAG1C,SAASxgC,GAAW,CACJ1sB,EAAA,CACZ,WAAY,gBACZ,YAAa,WACb,UAAW,WACX,YAAa,iBAAA,CACd,CACH,CAEI,GAAA03C,GAAa,EAACt1C,GAAA,MAAAA,EAAM,QAAQ,CAC1B,IAAAsb,EACF7b,EACAC,EACAG,EAAM,GACR,MAAMlB,EAAO6mB,EAAW,KAAK,MAAM,GAAG,EAWtC,GAVI7mB,EAAK,SAAW,GAClB2c,EAAQ3c,EAAK,CAAC,EACTc,EAAA,GACLC,EAAKf,EAAK,CAAC,GACFA,EAAK,SAAW,IACzB2c,EAAQ3c,EAAK,CAAC,EACdc,EAAKd,EAAK,CAAC,EACXe,EAAKf,EAAK,CAAC,GAGT6mB,EAAW,IAAK,CAClB,MAAMulC,EAAWvlC,EAAW,IAAI,MAAM,GAAG,EAChCulC,EAAA,OAAO,EAAG,EAAG,IAAI,EACpB,MAAAC,EAAYD,EAAS,KAAK,GAAG,EAC7BlrD,EAAAorD,GAAWD,CAAS,EAAE,SAAS,CACvC,CACAr5D,EACE,sBAAsBkO,CAAG,gBAAgByb,CAAK,OAAO5b,CAAE,OAAOD,CAAE,sCAAA,CAEpE,CAEM,MAAAyrD,EAAe,GAAGlrD,GAAA,YAAAA,EAAM,MAAM,WAEpC,OAEK9J,EAAA,IAAAS,EAAA,SAAA,CAAA,SAACi5C,EAAY,OAGX15C,EAAAA,IAAAO,EAAA,CAAM,GAAI,CAAE,UAAW,IAAK,SAAU,YACrC,SAAAL,EAAA,KAACmB,EAAA,CACC,UAAS,GACT,QAAS,EACT,eAAgB,gBAChB,GAAI,CAAE,GAAI,CAAE,EAEZ,SAAA,CAACrB,EAAAA,IAAAqB,EAAA,CAAK,KAAI,GAAC,GAAI,GAAI,GAAI,EACrB,eAACkzD,GACC,CAAA,SAAAr0D,EAAA,KAAC+kB,GAAA,CACC,GAAI,CAAE,UAAW2mB,EAAW,QAAU,GAAI,SAAU,MAAO,EAE1D,SAAA,CAAAA,GAAY6oB,GACXz0D,EAAA,IAACsC,GAAA,CACC,GAAG,eACH,KAAK,SACL,KAAK,eACL,QAAQ,WACR,QAASqyD,EACT,UAAS,GAET,SAAAz0D,EAAA,KAACD,GAAK,QAAQ,KAAK,GAAI,CAAE,GAAI,CAC3B,EAAA,SAAA,CAAAD,MAACssC,IAAK,GAAI,CAAE,EAAG,IAAM,GAAI,MAAS,EAAE,gBAAA,EAEtC,CAAA,CACF,EAEDV,GAAY,CAAC6oB,GACZz0D,EAAA,IAACsC,GAAA,CACC,GAAG,eACH,KAAK,SACL,KAAK,eACL,QAASqyD,EACT,GAAI,CACF,MAAO,QACP,UAAW,CACT,WAAY,aACd,CACF,EAEA,SAAAz0D,EAAA,KAACD,GAAK,QAAQ,QAAQ,GAAI,CAAE,GAAI,IAC9B,SAAA,CAACD,EAAAA,IAAA2gB,GAAA,CAAM,GAAI,CAAI,CAAA,CAAA,EAAE,UAAE,KAAG,EAAA,EAAE,cAAA,EAE1B,CAAA,CACF,GAEA,CAACirB,GAAaA,GAAY,CAAC6oB,IAC1Bv0D,EAAAA,KAAA6D,GAAM,SAAN,CACC,SAAA,CAAC/D,EAAA,IAAAC,EAAA,CAAK,QAAQ,KAAK,SAAuB,0BAAA,EAC1CD,EAAA,IAACs0B,GAAA,CACC,SAAU,GACV,SAAUzhB,EACV,WAAYuhB,CAAA,CACd,CAAA,EACF,CAAA,CAAA,GAGN,CACF,CAAA,EACAp0B,EAAAA,IAACqB,GAAK,KAAI,GAAC,GAAI,GAAI,GAAI,EAAG,GAAI,CAAE,GAAI,CAAE,GAAI,KAAM,GAAI,CAAA,GACjD,UAAAq4C,GAAA,YAAAA,EAAa,SAEVx5C,EAAAA,KAAAO,EAAA,SAAA,CAAA,SAAA,CAAAT,EAAA,IAACqB,EAAK,CAAA,KAAI,GAAC,GAAI,GACb,SAAAnB,EAAA,KAACkC,EAAA,CACC,GAAI,CAAE,GAAI,EAAG,GAAI,CAAE,EACnB,GAAI,CAAE,GAAI,EAAG,GAAI,CAAE,EACnB,MAAO,OACP,SAAU,OACV,gBAAiB,OAEjB,SAAA,CAAApC,MAACC,EAAK,CAAA,QAAQ,KAAK,QAAS,SACzB,SACH+0D,EAAA,SACC/0D,EAAK,CAAA,QAAQ,KAAK,WAAY,IAAK,QAAS,SAC1C,SAAA,CAAA,IAAI,MACD,GAAA,EACN,QACCA,EAAK,CAAA,QAAQ,KAAK,QAAS,SACzB,WAAW,KACd,CAAA,CAAA,CAAA,EAEJ,EACCy5C,EAAY,IAAI,CAACE,EAAUx9C,IAExB4D,EAAA,IAAC+D,GAAM,SAAN,CACC,eAACkxD,GAAoB,CAAA,aAAcrb,CAAU,CAAA,CAAA,EAD1Bx9C,CAErB,CAEH,CAAA,CAAA,CACH,CAEJ,CAAA,CAAA,CAAA,CAAA,CAEJ,CAAA,QA/FC84D,GAAoB,CAAA,CAAA,CAiGzB,CAAA,CAEJ,CCtLA,MAAMpS,GAAc,yBACdqS,GAAqC,EACrCC,GAA6C,EAC7CC,GAAc,GAEdC,GAAiB,IACrBt1D,EAAA,IAACO,EAAA,CACC,GAAI,CACF,MAAO,QACP,OAAQ,QACR,WAAY,EACd,EAEA,SAAAP,EAAAA,IAACixB,GAAY,CAAA,MAAO,CAAG,CAAA,CAAA,CACzB,EAGWskC,GAAiB,IAAM,CAC5B,KAAA,CACJ,KAAM,CAAE,UAAA97C,CAAU,GAChBlN,GAAuB,EAE3B1Q,EAAAA,UAAU,IAAM,CACL,SAAA,MAAQ,iBAAiB4d,CAAS,EAC7C,EAAG,CAAE,CAAA,EAEL,MAAM8P,EAAY,IAAI,gBAAgB,OAAO,SAAS,MAAM,EACtD,CAACisC,EAAkBC,CAAmB,EAAIp6D,WAAS,EAAI,EACvD,CAACq6D,EAAeC,CAAgB,EAAIt6D,EAA6B,SAAA,EACjE,CAAC6kB,EAAgB01C,CAAiB,EAAIv6D,EAAA,SAA0B,CAAE,CAAA,EAClE,CAACw6D,EAAyBC,CAA0B,EAAIz6D,WAAS,EAAK,EACtE06D,EAAiBxsC,EAAU,IAAI,MAAM,GAAK,GAC1C,CACJ,gBAAAzI,EACA,wBAAAk1C,EACA,uBAAAtuB,EACA,kBAAAD,EACA,sBAAAwuB,CAAA,EACEl1C,GAAkBg1C,CAAc,EAC9Bt6D,EAAWC,KAEXw6D,EAAY3sC,EAAU,IAAI,MAAM,GAAK,OAErCo6B,EAAyBzjC,GAAA,MAAAA,EAAgB,OAC3CA,EAAe,CAAC,EAAE,UAClB,GA4CJ,OA1CArkB,EAAAA,UAAU,IAAM,CACR8nD,GAA0BA,GAA0BoS,GAC/Ct6D,EAAA,SAASkoD,CAAsB,EAAE,CAE3C,EAAA,CAACA,EAAwBoS,EAAgBt6D,CAAQ,CAAC,EAErDI,EAAAA,UAAU,IAAM,CAId,GAAIq6D,EAAW,CACbP,EAAiBO,CAAS,EAC1B3sC,EAAU,OAAO,MAAM,EACjB,MAAA4sC,EAAS,GAAG,OAAO,SAAS,QAAQ,IAAI5sC,EAAU,SAAU,CAAA,GAClE,OAAO,QAAQ,aAAa,CAAC,EAAG,GAAI4sC,CAAM,CAC5C,CAAA,EACC,CAACD,CAAS,CAAC,EAEdr6D,EAAAA,UAAU,IAAM,CACV,GAAA6rC,EAAwB,OAI5B,IAFsB5mB,GAAA,YAAAA,EAAiB,SAAUu0C,GAE9B,CACjB,MAAMe,EAAmBt1C,GAAA,YAAAA,GAAkBA,GAAA,YAAAA,EAAiB,QAAS,GAErE,GAAI,EAACs1C,GAAA,MAAAA,EAAkB,WAAW,OAI/Bt1C,EAAgB,KAAMu1C,GAAYA,EAAQ,YAAcN,CAAc,GAEvED,EAA2B,EAAI,CAEnC,CAEM51C,MAAAA,EAAiBgkC,GAAkBpjC,EAAiBgiC,EAAW,EACrE8S,EAAkB11C,CAAc,EAEhCu1C,EAAoB,EAAK,CAAA,EACxB,CAAC30C,EAAiB4mB,CAAsB,CAAC,EAExCA,GAA0B8tB,QAA0BF,GAAe,CAAA,CAAA,EAGrEt1D,EAAA,IAACs2D,GAAA,CACC,eAAAP,EACA,wBAAAF,EACA,uBAAAlS,EACA,cAAA+R,EACA,eAAgB,IAAMC,EAAiB,MAAS,CAAA,CAAA,CAGtD,EAUMW,GAA0B,CAAC,CAC/B,uBAAA3S,EACA,eAAAoS,EACA,wBAAAF,EACA,cAAAH,EACA,eAAAa,CACF,IAAoC,QAClC,MAAMC,EACJT,IAAmBpS,GAA0B,CAAC,CAACoS,EAC3C,CAACU,EAAgCC,CAAiC,EACtEr7D,EAAA,SAAuC,CAAE,CAAA,EAErC,CAACs7D,EAAwBC,CAAyB,EAAIv7D,EAAA,SAE1D,CAAE,CAAA,EAEE,CAACkpB,EAAW8qC,CAAY,EAAIh0D,EAAA,SAChCm7D,GAAsB,CAAC,CAAC7S,CAAA,EAEpB,CAACzS,EAAM2lB,CAAO,EAAIx7D,WAAiB,EAAE,EACrC,CAACs1C,EAAWmmB,CAAY,EAAIz7D,EAAAA,SAEhC,MAAS,EACL,CAAC07D,EAAYC,CAAa,EAAI37D,EAAmB,SAAA,EACjD,CAAC47D,EAAqBC,CAAsB,EAChD77D,EAAyB,SAAA,EACrB,CAAC87D,EAAaC,CAAc,EAAI/7D,WAAkB,EAAK,EACvD,CACJg8D,EACAC,CAAA,EACEj8D,EAAAA,SAAkB,EAAK,EAErBI,EAAWC,KAEX,CACJ67D,EACAC,CAAA,EACEn8D,EAAAA,SAAS,EAAK,EAEZ,CAACo8D,EAA0BC,CAA2B,EAAIr8D,WAAS,CAAC,EAEpEs8D,EAAiC,IAAM,CAC3C,aAAa,WAAW,yBAAyB,EACrBD,EAACE,IAASA,GAAO,CAAC,CAAA,EAG1C,CACJ,KAAMC,EACN,QAASC,EACT,MAAOC,EACP,UAAWC,GACTC,GAAkB,CACpB,UAAWtU,CAAA,CACZ,EACK,CACJ,MAAO,CAAE,QAAA5yB,CAAQ,GACfxkB,GAAuB,EAErB,CACJ,OAAQ2rD,EACR,QAASC,EACT,UAAWC,GACTC,GAAoB,EAElB,CAAE,KAAMC,CAAA,EAAmB5pC,GAC/Bi1B,EACA,CAAC6S,CAAA,EAGG+B,GAA8B,IAAM,CACxC,OAAO,SAAS,KAAO,GAAGxnC,CAAO,qDAAqDglC,CAAc,EAAA,EAGhGyC,EAAyBC,IAAsB,CACnDrB,EAAeqB,EAAQ,CAAA,EAGzB58D,EAAAA,UAAU,IAAM,8DACd,GAAIy8D,EAAgB,CAEZ,MAAAI,GADSC,GAAc,OAAOL,EAAgB,QAAQ,EACvC,SAAS,CAC5B,oBAAqB,EACrB,2BAA4B,GAC5B,0BAA2B/2D,EAAU,OAAO,yBAAA,CAC7C,EACK,CAAE,UAAAovC,GAAW,SAAAioB,EAAA,EAAaF,GAC1BG,GAAaD,GAAU,IAAI,CAAC,EAE5BE,GAAe,CAAE,OAAQ,GAAI,KAAM,GAAI,MAAO,GAAI,KAAM,IAExDC,IAAmB/8D,GAAA08D,GAAM,WAAN,MAAA18D,GAAgB,OACrCg9D,IAAwBr8D,EAAA+7D,GAAM,WAAN,YAAA/7D,EAAgB,MAAM,EAC9Cm8D,GAEU9B,EAAA,CACZ,WAAYiC,KAAiBj8D,IAAAN,GAAAk8D,GAAU,MAAM,CAAC,IAAjB,YAAAl8D,GAAoB,SAApB,YAAAM,GAA4B,QAAS,EAAE,EACpE,YAAai8D,KAAiB74D,GAAArD,EAAA67D,GAAU,MAAM,CAAC,IAAjB,YAAA77D,EAAoB,SAApB,YAAAqD,EAA4B,SAAU,EAAE,EACtE,UAAW64D,KAAiBlvC,IAAAC,GAAA4uC,GAAU,MAAM,CAAC,IAAjB,YAAA5uC,GAAoB,SAApB,YAAAD,GAA4B,OAAQ,EAAE,EAClE,WAAW2C,IAAAC,IAAAF,GAAAmsC,GAAU,KAAK,CAAC,IAAhB,YAAAnsC,GAAmB,OAAnB,YAAAE,GAAyB,SAAzB,YAAAD,GAAiC,MAC5C,UAAUK,IAAAH,IAAAC,GAAA+rC,GAAU,KAAK,CAAC,IAAhB,YAAA/rC,GAAmB,OAAnB,YAAAD,GAAyB,SAAzB,YAAAG,GAAiC,KAC3C,WAAWC,IAAAC,IAAAH,GAAA8rC,GAAU,KAAK,CAAC,IAAhB,YAAA9rC,GAAmB,OAAnB,YAAAG,GAAyB,SAAzB,YAAAD,GAAiC,MAC5C,UAAUoE,IAAAlE,IAAAC,GAAAyrC,GAAU,KAAK,CAAC,IAAhB,YAAAzrC,GAAmB,OAAnB,YAAAD,GAAyB,SAAzB,YAAAkE,GAAiC,KAC3C,MAAO,CACL,iBAAkB2nC,GAAiB,QAAU,GAC7C,KAAMA,GAAiB,MAAQ,GAC/B,MAAOA,GAAiB,OAAS,GACjC,SAAUA,GAAiB,MAAQ,EACrC,CAAA,CACD,EAEDjC,EAAanmB,EAAS,EACtBkmB,EAAQgC,EAAU,CACpB,CAAA,EACC,CAACP,CAAc,CAAC,EAEnBz8D,EAAAA,UAAU,IAAM,CACd,GAAI,EAAAm8D,GAAyBI,GAAiBP,IAE1CC,GAA0Bf,EAAY,CAGpC,GAAAgB,GAAA,MAAAA,EAAyB,QAAQ,SAAS,OAAQ,OAE7BG,EAAA,CACvB,KAAMnB,EACN,UAAWpT,EACX,KAAAzS,CAAA,CACD,EAED8lB,EAAc,MAAS,CACzB,CACC,EAAA,CAACc,EAAsBC,EAAyBhB,CAAU,CAAC,EAE9Dl7D,EAAAA,UAAU,IAAM,CACV,GAAEg8D,EAKJ,GAH8BV,EAGH,CACnB,MAAA+B,EAAgBrB,EAAiB,MAAM,OAC1Cn8B,GAAM,CAACA,EAAE,aAAe,CAAC,CAACA,EAAE,UAAA,EAIzBy9B,GAAe,IAAI,IAAID,EAAc,IAAKE,GAASA,EAAK,EAAE,CAAC,EAI3DC,GAAUxB,EAAiB,KAAK,IAAKyB,GAAQ,QAC3C,MAAAC,KACJv9D,GAAAs9D,EAAI,WAAJ,YAAAt9D,GAAc,OAAQw9D,IAAYL,GAAa,IAAIK,EAAO,KAAM,CAAA,EAE3D,MAAA,CACL,GAAIF,EAAI,GACR,SAAUC,GACV,QAASJ,GAAa,IAAIG,EAAI,OAAiB,EAC3CA,EAAI,QACJ,OACJ,QAASH,GAAa,IAAIG,EAAI,OAAiB,EAC3CA,EAAI,QACJ,MAAA,CACN,CACD,EAGKrC,EAAsB,CAC1B,GAAGY,EACH,MAAOqB,EACP,KAAMG,EAAA,EAGRnC,EAAuBD,CAAmB,CAAA,MAE1CC,EAAuBW,CAAgB,CAE3C,EACC,CAACA,EAAkBV,CAAW,CAAC,EAElCt7D,EAAAA,UAAU,IAAM,CACRg8D,GAAoBtzC,IAEtBszC,EAAiB,MAAM,QAAU1C,IACjC,aAAa,QAAQ,qBAAqB,IAAM,OAEpBoD,KAE5BlJ,EAAa,EAAK,EAGrB,EAAA,CAACwI,EAAkBxI,EAAc,YAAY,CAAC,EAEjDxzD,EAAAA,UAAU,IAAM,QACd,GAAMg8D,GAAA,MAAAA,EAAkB,OAASJ,GAA4B,EAAG,CACxD,MAAAgC,EAA8B5B,EAAiB,MAAM,OACxD7T,IAAWA,GAAO,YAAc,MAAQ,CAACA,GAAO,WACjD,EAAA,OACI0V,IAA+B19D,GAAA,KAAK,MACxC,aAAa,QAAQ,yBAAyB,GAAK,IAClD,IAFkC,YAAAA,GAElC,qBAECy9D,IAAgC,GAAOC,IACzCpC,EAA4C,EAAI,EAChDE,EAAoD,EAAK,IAEzDF,EAA4C,EAAK,EACjDE,EAAoD,EAAI,EAE5D,CAAA,EACC,CACDK,EACAJ,EACAD,EACAF,CAAA,CACD,EAEGa,IACFt6D,GAAgB,qDAAsD,CACpE,QAAS,OAAA,CACV,EAEDpC,EAAS,4BAA4B,GAGvC,MAAMk+D,EACJ,CAACtC,GACCE,EACEnC,GACAD,GAEAyE,EAA2BjpB,IAAaA,GAAA,YAAAA,EAAW,QAAS,EAC5DkpB,IACHhC,GAAA,YAAAA,EAAkB,UACjB77D,GAAA67D,GAAA,YAAAA,EAAkB,QAAlB,YAAA77D,GAAyB,SAAU29D,GACnChD,EAAuB,SAAW,GACpCF,EAA+B,OAAS,EAEpCqD,GACJF,GACAC,IACA,CAACxC,EAQC,OAJD9yC,GAAa,CAACszC,GACfO,GACCJ,GAAyB,CAACH,QAESvC,GAAe,CAAA,CAAA,EAGnDt1D,EAAA,IAAC+5D,GAAA,CACC,SAAS9C,GAAA,YAAAA,EAAqB,QAAS,CAAC,EACxC,UAAWtT,EACX,oBAAqBhT,GAAa,CAAC,EACnC,sBAAuBmpB,GACvB,+BAAArD,EACA,kCAAAC,EACA,uBAAAC,EACA,0BAAAC,EACA,yCAAAS,EAGA,+BAAAM,EAEA,SAAA33D,EAAA,IAACg6D,GAAA,CACC,UAAWxD,EACX,iBAAkBS,EAClB,sBAAAe,EACA,cAAAtC,EACA,wBAAAG,EACA,eAAAE,EACA,eAAAQ,EACA,YAAAY,EACA,aAAcqB,CAAA,CAChB,CAAA,CAAA,CAGN,EC7YMvU,GAAuB,CAC3BV,EACAE,EACAI,IACuB,CACnB,GAAA,EAACA,GAAA,MAAAA,EAAgB,OACZ,OAGT,MAAMG,EAASH,EAAe,MAAM,KAAMG,GAEtCA,EAAO,aACP,CAACA,EAAO,SACR,CAAC,MAAM,QAAQA,EAAO,OAAO,EAEtB,GAG2BA,EAAO,QACtB,KAAMiW,GAAwC,CACjE,MAAMC,EACJ,OAAOD,EAAe,SAAS,IAAM,OAAO1W,CAAQ,GACpD,OAAO0W,EAAe,SAAS,IAAM,OAAO1W,CAAQ,EAChD4W,EAAoBF,EAAe,gBAAkBxW,EAC3D,OAAOyW,GAAiBC,CAAA,CACzB,CACF,EAED,OAAOnW,GAAA,YAAAA,EAAQ,EACjB,EAEO,SAASoW,IAAa,CAC3B,KAAM,CAAE,UAAAC,EAAW,cAAAC,CAAc,EAAIn1B,GAAU,EACzC,CAACwe,EAAwBC,CAAyB,EACtDvoD,WAAiB,EAAE,EACf,CAAE,gBAAAylB,GAAoBC,KACtB+hC,EAAc,yBAEpBjnD,EAAAA,UAAU,IAAM,CACd,GAAIilB,EAAiB,CACb,MAAAZ,EAAiBgkC,GAAkBpjC,EAAiBgiC,CAAW,EAEjE5iC,EAAe,OAAS,GACA0jC,EAAA1jC,EAAe,CAAC,EAAE,SAAS,CAEzD,CAAA,EACC,CAACY,CAAe,CAAC,EAGpB,KAAM,CAAE,KAAM+iC,EAAgB,UAAW0W,CAAA,EACvCzW,GAAgB,CACd,UAAWH,EACX,eAAgB,GAChB,wBAAyB,EAAA,CAC1B,EAGGI,EAA0CJ,GAE5CE,EACAI,GACEoW,EACAC,EACAzW,CAEF,EAPA,OASE2W,EACJF,IAAkB5W,GAAsB,aACpC+W,EACJH,IAAkB5W,GAAsB,aAEpC,CACJ,KAAMgX,EACN,UAAWC,EACX,QAASC,GACPC,GAAgC,CAClC,SAAUR,EACV,QAASG,CAAA,CACV,EAEK,CACJ,KAAMM,EACN,UAAWC,EACX,QAASC,GACPC,GAAmC,CACrC,SAAUZ,EACV,QAASI,CAAA,CACV,EAEKl2C,EACHo2C,GAAeH,GACfO,GAAeN,EACZj2D,EACHo2D,GAAaJ,GACbQ,GAAaP,EAEhB,IAAIS,EAAe,KAEnB,OAAQ,GAAM,CACZ,KAAKV,EACYU,EAAAR,EACf,MACF,KAAKD,EACYS,EAAAJ,EACf,MACF,QACiBI,EAAA,IACnB,CAEI,OAAA32C,EAAkBvkB,EAAA,IAAC8lB,GAAc,CAAA,UAAW,CAAG,CAAA,EAC/CthB,GAAY,CAAC02D,QAAsBlqC,GAAgB,CAAA,CAAA,EAGpDhxB,EAAAA,IAAAoC,EAAA,CAAI,QAAS,mBACZ,SAACpC,EAAA,IAAAqB,EAAA,CAAK,UAAS,GAAC,eAAgB,SAAU,UAAW,MAAO,MAAM,OAChE,SAAArB,EAAA,IAACqB,EAAA,CACC,KAAI,GACJ,GAAI,GACJ,GAAI,EACJ,GAAI,EACJ,UAAW,EACX,MAAM,OACN,QAAS,EACT,GAAI,CACF,wBAAyB,CACvB,OAAQ,MACV,CACF,EAEA,SAAArB,EAAA,IAACm7D,GAAA,CACC,OAAQD,EACR,mBAAAnX,EACA,qBAAsBwW,CAAA,CACxB,CAAA,CAAA,CAEJ,CAAA,CACF,CAAA,CAEJ,CC3JO,MAAMa,GAAoB,IAE5Bp7D,EAAA,IAAAgC,GAAA,CACC,SAAChC,EAAA,IAAAq7D,GAAA,CAAA,CAAY,CACf,CAAA"
}